{
  "kind": "overloadset",
  "name_html": "operator=",
  "compoundname_html": "apache::thrift::optional_field_ref::operator=",
  "functions": [
    {
      "refid": "classapache_1_1thrift_1_1optional__field__ref_1a34095d313c5f0efaeb35e07c737d4f43",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "noexcept": "yes",
      "virtual": "non-virtual",
      "noexceptexpression": "std::is_nothrow_assignable< value_type &, U && >::value",
      "tparams": [
        {
          "type_html": "typename U",
          "defval_html": "<code>value_type</code>"
        }
      ],
      "type_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_assignable&lt; <code>value_type</code> &amp;, U &amp;&amp; &gt;<code>::value</code>, <code>optional_field_ref</code> &amp; &gt;",
      "definition_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_assignable&lt; value_type &amp;, U &amp;&amp; &gt;::value, optional_field_ref &amp; &gt; apache::thrift::optional_field_ref&lt; T &gt;::operator=",
      "argsstring_html": "(U &amp;&amp;value)",
      "name_html": "operator=",
      "qualifiedname_html": "apache::thrift::optional_field_ref::operator=",
      "param": [
        {
          "type_html": "U &amp;&amp;",
          "declname_html": "value"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "558",
        "column": "3",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "558",
        "bodyend": "563"
      },
      "definition": {
        "simple_html": "template &lt;typename U = value_type&gt;\nFOLLY_ERASE std::enable_if_t&lt;\n    std::is_assignable&lt;value_type&amp;, U&amp;&amp;&gt;::value,\n    optional_field_ref&amp;&gt;\noperator=(U&amp;&amp; value)",
        "simple_raw": "template <typename U = value_type>\nFOLLY_ERASE std::enable_if_t<\n    std::is_assignable<value_type&, U&&>::value,\n    optional_field_ref&>\noperator=(U&& value)",
        "detailed_html": "template &lt;typename U = value_type&gt;\ninline FOLLY_ERASE std::enable_if_t&lt;\n    std::is_assignable&lt;value_type&amp;, U&amp;&amp;&gt;::value,\n    optional_field_ref&amp;&gt;\noperator=(U&amp;&amp; value)",
        "detailed_raw": "template <typename U = value_type>\ninline FOLLY_ERASE std::enable_if_t<\n    std::is_assignable<value_type&, U&&>::value,\n    optional_field_ref&>\noperator=(U&& value)",
        "original_definition_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_assignable&lt; value_type &amp;, U &amp;&amp; &gt;::value, optional_field_ref &amp; &gt; apache::thrift::optional_field_ref&lt; T &gt;::operator=",
        "original_argsstring_html": "(U &amp;&amp;value)"
      },
      "filepath": "fns/class/apache/thrift/optional_field_ref/operator.assign",
      "href": "/ref/cpp/fns/class/apache/thrift/optional_field_ref/operator.assign",
      "parentid": "classapache_1_1thrift_1_1optional__field__ref",
      "compoundname_html": "apache::thrift::optional_field_ref::operator="
    },
    {
      "refid": "classapache_1_1thrift_1_1optional__field__ref_1ac0c8e473e5f81e2d75c061732f5d7233",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "noexcept": "yes",
      "virtual": "non-virtual",
      "noexceptexpression": "std::is_nothrow_move_assignable< value_type >::value",
      "type_html": "FOLLY_ERASE <code>optional_field_ref</code> &amp;",
      "definition_html": "FOLLY_ERASE optional_field_ref &amp; apache::thrift::optional_field_ref&lt; T &gt;::operator=",
      "argsstring_html": "(value_type &amp;&amp;value)",
      "name_html": "operator=",
      "qualifiedname_html": "apache::thrift::optional_field_ref::operator=",
      "param": [
        {
          "type_html": "<code>value_type</code> &amp;&amp;",
          "declname_html": "value"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "566",
        "column": "34",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "566",
        "bodyend": "571"
      },
      "definition": {
        "simple_html": "FOLLY_ERASE optional_field_ref&amp; operator=(value_type&amp;&amp; value)",
        "simple_raw": "FOLLY_ERASE optional_field_ref& operator=(value_type&& value)",
        "detailed_html": "inline FOLLY_ERASE optional_field_ref&amp; operator=(value_type&amp;&amp; value)",
        "detailed_raw": "inline FOLLY_ERASE optional_field_ref& operator=(value_type&& value)",
        "original_definition_html": "FOLLY_ERASE optional_field_ref &amp; apache::thrift::optional_field_ref&lt; T &gt;::operator=",
        "original_argsstring_html": "(value_type &amp;&amp;value)"
      },
      "filepath": "fns/class/apache/thrift/optional_field_ref/operator.assign",
      "href": "/ref/cpp/fns/class/apache/thrift/optional_field_ref/operator.assign",
      "parentid": "classapache_1_1thrift_1_1optional__field__ref",
      "compoundname_html": "apache::thrift::optional_field_ref::operator="
    }
  ],
  "filepath": "f/class/apache/thrift/optional_field_ref/operator.assign",
  "minprot": "public",
  "displayname_html": "operator=",
  "brief_html": "Assignment operator.",
  "groupname_html": "",
  "href": "/ref/cpp/f/class/apache/thrift/optional_field_ref/operator.assign",
  "refid": "/ref/cpp/f/class/apache/thrift/optional_field_ref/operator.assign",
  "parent_links": [
    {
      "text_html": "optional_field_ref",
      "href": "/ref/cpp/class/apache/thrift/optional_field_ref"
    }
  ]
}