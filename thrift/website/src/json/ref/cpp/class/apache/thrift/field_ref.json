{
  "refid": "classapache_1_1thrift_1_1field__ref",
  "kind": "class",
  "language": "C++",
  "prot": "public",
  "compoundname_html": "apache::thrift::field_ref",
  "includes": {
    "refid": "FieldRef_8h",
    "local": "no",
    "text_html": "FieldRef.h"
  },
  "tparams": [
    {
      "type_html": "typename T"
    }
  ],
  "types": [
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1a6fc068398a27229febe512366e361930",
      "prot": "public",
      "type_html": "std::remove_reference_t&lt;T&gt;",
      "definition_html": "using apache::thrift::field_ref&lt; T &gt;::value_type =  std::remove_reference_t&lt;T&gt;",
      "argsstring_html": "",
      "name_html": "value_type",
      "qualifiedname_html": "apache::thrift::field_ref::value_type",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "268",
        "column": "3",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "268",
        "bodyend": "-1"
      },
      "parentid": "classapache_1_1thrift_1_1field__ref"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1abed5e2993c84c53cd6ff68dda4bf9c91",
      "prot": "public",
      "type_html": "T",
      "definition_html": "using apache::thrift::field_ref&lt; T &gt;::reference_type =  T",
      "argsstring_html": "",
      "name_html": "reference_type",
      "qualifiedname_html": "apache::thrift::field_ref::reference_type",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "269",
        "column": "3",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "269",
        "bodyend": "-1"
      },
      "parentid": "classapache_1_1thrift_1_1field__ref"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1aaae75e5700ba9dbd139ba69b25304b00",
      "prot": "private",
      "type_html": "<a href=\"https://www.internalfb.com/intern/staticdocs/fbcref/ref/cpp/class/apache/thrift/detail/BitRef\">apache::thrift::detail::BitRef</a>&lt;std::is_const&lt;<code>value_type</code>&gt;<code>::value</code>&gt;",
      "definition_html": "using apache::thrift::field_ref&lt; T &gt;::BitRef = \n      apache::thrift::detail::BitRef&lt;std::is_const&lt;value_type&gt;::value&gt;",
      "argsstring_html": "",
      "name_html": "BitRef",
      "qualifiedname_html": "apache::thrift::field_ref::BitRef",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "272",
        "column": "3",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "272",
        "bodyend": "-1"
      },
      "parentid": "classapache_1_1thrift_1_1field__ref"
    }
  ],
  "functions": [
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1af25bff49d13e7e02d099313ee1fb9a92",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "noexcept": "yes",
      "virtual": "non-virtual",
      "type_html": "FOLLY_ERASE",
      "definition_html": "FOLLY_ERASE apache::thrift::field_ref&lt; T &gt;::field_ref",
      "argsstring_html": "(reference_type value, typename BitRef::Isset &amp;is_set, const uint8_t bit_index=0) noexcept",
      "name_html": "field_ref",
      "qualifiedname_html": "apache::thrift::field_ref::field_ref",
      "param": [
        {
          "type_html": "<code>reference_type</code>",
          "declname_html": "value"
        },
        {
          "type_html": "typename BitRef::Isset &amp;",
          "declname_html": "is_set"
        },
        {
          "type_html": "const uint8_t",
          "declname_html": "bit_index",
          "defval_html": "0"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "277",
        "column": "15",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "277",
        "bodyend": "281"
      },
      "definition": {
        "simple_html": "FOLLY_ERASE field_ref(\n    reference_type value,\n    typename BitRef::Isset&amp; is_set,\n    const uint8_t bit_index = 0)",
        "simple_raw": "FOLLY_ERASE field_ref(\n    reference_type value,\n    typename BitRef::Isset& is_set,\n    const uint8_t bit_index = 0)",
        "detailed_html": "inline FOLLY_ERASE field_ref(\n    reference_type value,\n    typename BitRef::Isset&amp; is_set,\n    const uint8_t bit_index = 0) noexcept",
        "detailed_raw": "inline FOLLY_ERASE field_ref(\n    reference_type value,\n    typename BitRef::Isset& is_set,\n    const uint8_t bit_index = 0) noexcept",
        "original_definition_html": "FOLLY_ERASE apache::thrift::field_ref&lt; T &gt;::field_ref",
        "original_argsstring_html": "(reference_type value, typename BitRef::Isset &amp;is_set, const uint8_t bit_index=0) noexcept"
      },
      "description": {
        "brief_html": "<p>Internal constructor. </p>"
      },
      "filepath": "fns/class/apache/thrift/field_ref/field_ref",
      "href": "/ref/cpp/fns/class/apache/thrift/field_ref/field_ref"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1a3c325dc859794e2199a2c7b61a1e5037",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "noexcept": "yes",
      "virtual": "non-virtual",
      "type_html": "FOLLY_ERASE",
      "definition_html": "FOLLY_ERASE apache::thrift::field_ref&lt; T &gt;::field_ref",
      "argsstring_html": "(reference_type value, typename BitRef::AtomicIsset &amp;is_set, const uint8_t bit_index=0) noexcept",
      "name_html": "field_ref",
      "qualifiedname_html": "apache::thrift::field_ref::field_ref",
      "param": [
        {
          "type_html": "<code>reference_type</code>",
          "declname_html": "value"
        },
        {
          "type_html": "typename BitRef::AtomicIsset &amp;",
          "declname_html": "is_set"
        },
        {
          "type_html": "const uint8_t",
          "declname_html": "bit_index",
          "defval_html": "0"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "284",
        "column": "15",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "284",
        "bodyend": "288"
      },
      "definition": {
        "simple_html": "FOLLY_ERASE field_ref(\n    reference_type value,\n    typename BitRef::AtomicIsset&amp; is_set,\n    const uint8_t bit_index = 0)",
        "simple_raw": "FOLLY_ERASE field_ref(\n    reference_type value,\n    typename BitRef::AtomicIsset& is_set,\n    const uint8_t bit_index = 0)",
        "detailed_html": "inline FOLLY_ERASE field_ref(\n    reference_type value,\n    typename BitRef::AtomicIsset&amp; is_set,\n    const uint8_t bit_index = 0) noexcept",
        "detailed_raw": "inline FOLLY_ERASE field_ref(\n    reference_type value,\n    typename BitRef::AtomicIsset& is_set,\n    const uint8_t bit_index = 0) noexcept",
        "original_definition_html": "FOLLY_ERASE apache::thrift::field_ref&lt; T &gt;::field_ref",
        "original_argsstring_html": "(reference_type value, typename BitRef::AtomicIsset &amp;is_set, const uint8_t bit_index=0) noexcept"
      },
      "description": {
        "brief_html": "<p>Internal constructor. </p>"
      },
      "filepath": "fns/class/apache/thrift/field_ref/field_ref",
      "href": "/ref/cpp/fns/class/apache/thrift/field_ref/field_ref"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1afb16c866c3e2467be3030e1267a94126",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "noexcept": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename U"
        },
        {
          "type_html": "typename",
          "defval_html": "<code>apache::thrift::detail::EnableIfImplicit</code>&lt;T, U&gt;"
        }
      ],
      "type_html": "FOLLY_ERASE",
      "definition_html": "FOLLY_ERASE apache::thrift::field_ref&lt; T &gt;::field_ref",
      "argsstring_html": "(const field_ref&lt; U &gt; &amp;other) noexcept",
      "name_html": "field_ref",
      "qualifiedname_html": "apache::thrift::field_ref::field_ref",
      "param": [
        {
          "type_html": "const <code>field_ref</code>&lt; U &gt; &amp;",
          "declname_html": "other"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "293",
        "column": "16",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "293",
        "bodyend": "294"
      },
      "definition": {
        "simple_html": "template &lt;typename U, typename = apache::thrift::detail::EnableIfImplicit&lt;T, U&gt;&gt;\nFOLLY_ERASE field_ref(const field_ref&lt;U&gt;&amp; other)",
        "simple_raw": "template <typename U, typename = apache::thrift::detail::EnableIfImplicit<T, U>>\nFOLLY_ERASE field_ref(const field_ref<U>& other)",
        "detailed_html": "template &lt;typename U, typename = apache::thrift::detail::EnableIfImplicit&lt;T, U&gt;&gt;\ninline FOLLY_ERASE field_ref(const field_ref&lt;U&gt;&amp; other) noexcept",
        "detailed_raw": "template <typename U, typename = apache::thrift::detail::EnableIfImplicit<T, U>>\ninline FOLLY_ERASE field_ref(const field_ref<U>& other) noexcept",
        "original_definition_html": "FOLLY_ERASE apache::thrift::field_ref&lt; T &gt;::field_ref",
        "original_argsstring_html": "(const field_ref&lt; U &gt; &amp;other) noexcept"
      },
      "filepath": "fns/class/apache/thrift/field_ref/field_ref",
      "href": "/ref/cpp/fns/class/apache/thrift/field_ref/field_ref"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1aa5aad53097f0586d81b1562877cc1c94",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "noexcept": "yes",
      "virtual": "non-virtual",
      "noexceptexpression": "std::is_nothrow_assignable< value_type &, U && >::value",
      "tparams": [
        {
          "type_html": "typename U",
          "defval_html": "<code>value_type</code>"
        }
      ],
      "type_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_assignable&lt; <code>value_type</code> &amp;, U &amp;&amp; &gt;<code>::value</code>, <code>field_ref</code> &amp; &gt;",
      "definition_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_assignable&lt; value_type &amp;, U &amp;&amp; &gt;::value, field_ref &amp; &gt; apache::thrift::field_ref&lt; T &gt;::operator=",
      "argsstring_html": "(U &amp;&amp;value)",
      "name_html": "operator=",
      "qualifiedname_html": "apache::thrift::field_ref::operator=",
      "param": [
        {
          "type_html": "U &amp;&amp;",
          "declname_html": "value"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "299",
        "column": "7",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "299",
        "bodyend": "304"
      },
      "definition": {
        "simple_html": "template &lt;typename U = value_type&gt;\nFOLLY_ERASE\n    std::enable_if_t&lt;std::is_assignable&lt;value_type&amp;, U&amp;&amp;&gt;::value, field_ref&amp;&gt;\n    operator=(U&amp;&amp; value)",
        "simple_raw": "template <typename U = value_type>\nFOLLY_ERASE\n    std::enable_if_t<std::is_assignable<value_type&, U&&>::value, field_ref&>\n    operator=(U&& value)",
        "detailed_html": "template &lt;typename U = value_type&gt;\ninline FOLLY_ERASE\n    std::enable_if_t&lt;std::is_assignable&lt;value_type&amp;, U&amp;&amp;&gt;::value, field_ref&amp;&gt;\n    operator=(U&amp;&amp; value)",
        "detailed_raw": "template <typename U = value_type>\ninline FOLLY_ERASE\n    std::enable_if_t<std::is_assignable<value_type&, U&&>::value, field_ref&>\n    operator=(U&& value)",
        "original_definition_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_assignable&lt; value_type &amp;, U &amp;&amp; &gt;::value, field_ref &amp; &gt; apache::thrift::field_ref&lt; T &gt;::operator=",
        "original_argsstring_html": "(U &amp;&amp;value)"
      },
      "filepath": "fns/class/apache/thrift/field_ref/operator.assign",
      "href": "/ref/cpp/fns/class/apache/thrift/field_ref/operator.assign"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1ab24e9fdfa69f9ad563e5f716d99b6210",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "noexcept": "yes",
      "virtual": "non-virtual",
      "noexceptexpression": "std::is_nothrow_move_assignable< value_type >::value",
      "type_html": "FOLLY_ERASE <code>field_ref</code> &amp;",
      "definition_html": "FOLLY_ERASE field_ref &amp; apache::thrift::field_ref&lt; T &gt;::operator=",
      "argsstring_html": "(value_type &amp;&amp;value)",
      "name_html": "operator=",
      "qualifiedname_html": "apache::thrift::field_ref::operator=",
      "param": [
        {
          "type_html": "<code>value_type</code> &amp;&amp;",
          "declname_html": "value"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "307",
        "column": "25",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "307",
        "bodyend": "312"
      },
      "definition": {
        "simple_html": "FOLLY_ERASE field_ref&amp; operator=(value_type&amp;&amp; value)",
        "simple_raw": "FOLLY_ERASE field_ref& operator=(value_type&& value)",
        "detailed_html": "inline FOLLY_ERASE field_ref&amp; operator=(value_type&amp;&amp; value)",
        "detailed_raw": "inline FOLLY_ERASE field_ref& operator=(value_type&& value)",
        "original_definition_html": "FOLLY_ERASE field_ref &amp; apache::thrift::field_ref&lt; T &gt;::operator=",
        "original_argsstring_html": "(value_type &amp;&amp;value)"
      },
      "filepath": "fns/class/apache/thrift/field_ref/operator.assign",
      "href": "/ref/cpp/fns/class/apache/thrift/field_ref/operator.assign"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1ab5b2479e848e7a93a35e4aedb1c4a10f",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "noexcept": "yes",
      "virtual": "non-virtual",
      "noexceptexpression": "std::is_nothrow_assignable< value_type &, U >::value",
      "tparams": [
        {
          "type_html": "typename U"
        }
      ],
      "type_html": "FOLLY_ERASE void",
      "definition_html": "FOLLY_ERASE void apache::thrift::field_ref&lt; T &gt;::copy_from",
      "argsstring_html": "(field_ref&lt; U &gt; other)",
      "name_html": "copy_from",
      "qualifiedname_html": "apache::thrift::field_ref::copy_from",
      "param": [
        {
          "type_html": "<code>field_ref</code>&lt; U &gt;",
          "declname_html": "other"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "318",
        "column": "20",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "318",
        "bodyend": "322"
      },
      "definition": {
        "simple_html": "template &lt;typename U&gt;\nFOLLY_ERASE void copy_from(field_ref&lt;U&gt; other)",
        "simple_raw": "template <typename U>\nFOLLY_ERASE void copy_from(field_ref<U> other)",
        "detailed_html": "template &lt;typename U&gt;\ninline FOLLY_ERASE void copy_from(field_ref&lt;U&gt; other)",
        "detailed_raw": "template <typename U>\ninline FOLLY_ERASE void copy_from(field_ref<U> other)",
        "original_definition_html": "FOLLY_ERASE void apache::thrift::field_ref&lt; T &gt;::copy_from",
        "original_argsstring_html": "(field_ref&lt; U &gt; other)"
      },
      "description": {
        "detailed_html": "<p>Assignment from <code>field_ref</code> is intentionally not provided to prevent potential confusion between two possible behaviors, copying and reference rebinding. The copy_from method is provided instead. </p>"
      },
      "filepath": "fns/class/apache/thrift/field_ref/copy_from",
      "href": "/ref/cpp/fns/class/apache/thrift/field_ref/copy_from"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1a2afbc3d03a6521a8663e2436de78b686",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "noexcept": "yes",
      "virtual": "non-virtual",
      "type_html": "FOLLY_ERASE bool",
      "definition_html": "FOLLY_ERASE bool apache::thrift::field_ref&lt; T &gt;::has_value",
      "argsstring_html": "() const noexcept",
      "name_html": "has_value",
      "qualifiedname_html": "apache::thrift::field_ref::has_value",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "328",
        "column": "20",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "328",
        "bodyend": "330"
      },
      "definition": {
        "simple_html": "FOLLY_ERASE bool has_value() const",
        "simple_raw": "FOLLY_ERASE bool has_value() const",
        "detailed_html": "inline FOLLY_ERASE bool has_value() const noexcept",
        "detailed_raw": "inline FOLLY_ERASE bool has_value() const noexcept",
        "original_definition_html": "FOLLY_ERASE bool apache::thrift::field_ref&lt; T &gt;::has_value",
        "original_argsstring_html": "() const noexcept"
      },
      "filepath": "fns/class/apache/thrift/field_ref/has_value",
      "href": "/ref/cpp/fns/class/apache/thrift/field_ref/has_value"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1ac647ae6048e09cdec4749eda172e19b9",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "noexcept": "yes",
      "virtual": "non-virtual",
      "type_html": "FOLLY_ERASE bool",
      "definition_html": "FOLLY_ERASE bool apache::thrift::field_ref&lt; T &gt;::is_set",
      "argsstring_html": "() const noexcept",
      "name_html": "is_set",
      "qualifiedname_html": "apache::thrift::field_ref::is_set",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "339",
        "column": "20",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "339",
        "bodyend": "341"
      },
      "definition": {
        "simple_html": "FOLLY_ERASE bool is_set() const",
        "simple_raw": "FOLLY_ERASE bool is_set() const",
        "detailed_html": "inline FOLLY_ERASE bool is_set() const noexcept",
        "detailed_raw": "inline FOLLY_ERASE bool is_set() const noexcept",
        "original_definition_html": "FOLLY_ERASE bool apache::thrift::field_ref&lt; T &gt;::is_set",
        "original_argsstring_html": "() const noexcept"
      },
      "description": {
        "detailed_html": "<p>Returns true iff the field is set. <code>field_ref</code> doesn't provide conversion to bool to avoid confusion between checking if the field is set and getting the field's value, particularly for bool fields. </p>"
      },
      "filepath": "fns/class/apache/thrift/field_ref/is_set",
      "href": "/ref/cpp/fns/class/apache/thrift/field_ref/is_set"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1a756acc8db53e3c5d9901ed09ccd690fa",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "noexcept": "yes",
      "virtual": "non-virtual",
      "type_html": "FOLLY_ERASE <code>reference_type</code>",
      "definition_html": "FOLLY_ERASE reference_type apache::thrift::field_ref&lt; T &gt;::value",
      "argsstring_html": "() const noexcept",
      "name_html": "value",
      "qualifiedname_html": "apache::thrift::field_ref::value",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "344",
        "column": "30",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "344",
        "bodyend": "346"
      },
      "definition": {
        "simple_html": "FOLLY_ERASE reference_type value() const",
        "simple_raw": "FOLLY_ERASE reference_type value() const",
        "detailed_html": "inline FOLLY_ERASE reference_type value() const noexcept",
        "detailed_raw": "inline FOLLY_ERASE reference_type value() const noexcept",
        "original_definition_html": "FOLLY_ERASE reference_type apache::thrift::field_ref&lt; T &gt;::value",
        "original_argsstring_html": "() const noexcept"
      },
      "description": {
        "brief_html": "<p>Returns a reference to the value. </p>"
      },
      "filepath": "fns/class/apache/thrift/field_ref/value",
      "href": "/ref/cpp/fns/class/apache/thrift/field_ref/value"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1a5f9a3d17ec7b1c5ae862ac814ff847c7",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "noexcept": "yes",
      "virtual": "non-virtual",
      "type_html": "FOLLY_ERASE <code>reference_type</code>",
      "definition_html": "FOLLY_ERASE reference_type apache::thrift::field_ref&lt; T &gt;::operator*",
      "argsstring_html": "() const noexcept",
      "name_html": "operator*",
      "qualifiedname_html": "apache::thrift::field_ref::operator*",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "349",
        "column": "30",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "349",
        "bodyend": "351"
      },
      "definition": {
        "simple_html": "FOLLY_ERASE reference_type operator*() const",
        "simple_raw": "FOLLY_ERASE reference_type operator*() const",
        "detailed_html": "inline FOLLY_ERASE reference_type operator*() const noexcept",
        "detailed_raw": "inline FOLLY_ERASE reference_type operator*() const noexcept",
        "original_definition_html": "FOLLY_ERASE reference_type apache::thrift::field_ref&lt; T &gt;::operator*",
        "original_argsstring_html": "() const noexcept"
      },
      "description": {
        "brief_html": "<p>Returns a reference to the value. </p>"
      },
      "filepath": "fns/class/apache/thrift/field_ref/operator.mul",
      "href": "/ref/cpp/fns/class/apache/thrift/field_ref/operator.mul"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1ab2f01441382af2979688c4866f073b44",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "noexcept": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename U",
          "defval_html": "<code>value_type</code>"
        }
      ],
      "type_html": "FOLLY_ERASE <code>apache::thrift::detail::EnableIfNonConst</code>&lt; U &gt; *",
      "definition_html": "FOLLY_ERASE apache::thrift::detail::EnableIfNonConst&lt; U &gt; * apache::thrift::field_ref&lt; T &gt;::operator-&gt;",
      "argsstring_html": "() const noexcept",
      "name_html": "operator-&gt;",
      "qualifiedname_html": "apache::thrift::field_ref::operator-&gt;",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "358",
        "column": "7",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "358",
        "bodyend": "360"
      },
      "definition": {
        "simple_html": "template &lt;typename U = value_type&gt;\nFOLLY_ERASE apache::thrift::detail::EnableIfNonConst&lt;U&gt;* operator-&gt;() const",
        "simple_raw": "template <typename U = value_type>\nFOLLY_ERASE apache::thrift::detail::EnableIfNonConst<U>* operator->() const",
        "detailed_html": "template &lt;typename U = value_type&gt;\ninline FOLLY_ERASE apache::thrift::detail::EnableIfNonConst&lt;U&gt;* operator-&gt;()\n    const noexcept",
        "detailed_raw": "template <typename U = value_type>\ninline FOLLY_ERASE apache::thrift::detail::EnableIfNonConst<U>* operator->()\n    const noexcept",
        "original_definition_html": "FOLLY_ERASE apache::thrift::detail::EnableIfNonConst&lt; U &gt; * apache::thrift::field_ref&lt; T &gt;::operator-&gt;",
        "original_argsstring_html": "() const noexcept"
      },
      "filepath": "fns/class/apache/thrift/field_ref/operator.arrow",
      "href": "/ref/cpp/fns/class/apache/thrift/field_ref/operator.arrow"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1abfe9913d03f6d72e39f978476e8ea8fb",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "noexcept": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename U",
          "defval_html": "<code>value_type</code>"
        }
      ],
      "type_html": "FOLLY_ERASE <code>apache::thrift::detail::EnableIfConst</code>&lt; U &gt; *",
      "definition_html": "FOLLY_ERASE apache::thrift::detail::EnableIfConst&lt; U &gt; * apache::thrift::field_ref&lt; T &gt;::operator-&gt;",
      "argsstring_html": "() const noexcept",
      "name_html": "operator-&gt;",
      "qualifiedname_html": "apache::thrift::field_ref::operator-&gt;",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "364",
        "column": "53",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "364",
        "bodyend": "367"
      },
      "definition": {
        "simple_html": "template &lt;typename U = value_type&gt;\nFOLLY_ERASE apache::thrift::detail::EnableIfConst&lt;U&gt;* operator-&gt;() const",
        "simple_raw": "template <typename U = value_type>\nFOLLY_ERASE apache::thrift::detail::EnableIfConst<U>* operator->() const",
        "detailed_html": "template &lt;typename U = value_type&gt;\ninline FOLLY_ERASE apache::thrift::detail::EnableIfConst&lt;U&gt;* operator-&gt;()\n    const noexcept",
        "detailed_raw": "template <typename U = value_type>\ninline FOLLY_ERASE apache::thrift::detail::EnableIfConst<U>* operator->()\n    const noexcept",
        "original_definition_html": "FOLLY_ERASE apache::thrift::detail::EnableIfConst&lt; U &gt; * apache::thrift::field_ref&lt; T &gt;::operator-&gt;",
        "original_argsstring_html": "() const noexcept"
      },
      "description": {
        "brief_html": "<p>Returns a pointer to the value. </p>"
      },
      "filepath": "fns/class/apache/thrift/field_ref/operator.arrow",
      "href": "/ref/cpp/fns/class/apache/thrift/field_ref/operator.arrow"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1abfb461cfa58a2679d84daf14d61acad6",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "noexcept": "yes",
      "virtual": "non-virtual",
      "type_html": "FOLLY_ERASE <code>value_type</code> *",
      "definition_html": "FOLLY_ERASE value_type * apache::thrift::field_ref&lt; T &gt;::operator-&gt;",
      "argsstring_html": "() noexcept",
      "name_html": "operator-&gt;",
      "qualifiedname_html": "apache::thrift::field_ref::operator-&gt;",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "370",
        "column": "26",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "370",
        "bodyend": "370"
      },
      "definition": {
        "simple_html": "FOLLY_ERASE value_type* operator-&gt;()",
        "simple_raw": "FOLLY_ERASE value_type* operator->()",
        "detailed_html": "inline FOLLY_ERASE value_type* operator-&gt;() noexcept",
        "detailed_raw": "inline FOLLY_ERASE value_type* operator->() noexcept",
        "original_definition_html": "FOLLY_ERASE value_type * apache::thrift::field_ref&lt; T &gt;::operator-&gt;",
        "original_argsstring_html": "() noexcept"
      },
      "description": {
        "brief_html": "<p>Returns a pointer to the value. </p>"
      },
      "filepath": "fns/class/apache/thrift/field_ref/operator.arrow",
      "href": "/ref/cpp/fns/class/apache/thrift/field_ref/operator.arrow"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1a3e45bf96731edbe655c11b9bdd07a7a4",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "noexcept": "yes",
      "virtual": "non-virtual",
      "type_html": "FOLLY_ERASE <code>reference_type</code>",
      "definition_html": "FOLLY_ERASE reference_type apache::thrift::field_ref&lt; T &gt;::ensure",
      "argsstring_html": "() noexcept",
      "name_html": "ensure",
      "qualifiedname_html": "apache::thrift::field_ref::ensure",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "372",
        "column": "30",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "372",
        "bodyend": "375"
      },
      "definition": {
        "simple_html": "FOLLY_ERASE reference_type ensure()",
        "simple_raw": "FOLLY_ERASE reference_type ensure()",
        "detailed_html": "inline FOLLY_ERASE reference_type ensure() noexcept",
        "detailed_raw": "inline FOLLY_ERASE reference_type ensure() noexcept",
        "original_definition_html": "FOLLY_ERASE reference_type apache::thrift::field_ref&lt; T &gt;::ensure",
        "original_argsstring_html": "() noexcept"
      },
      "filepath": "fns/class/apache/thrift/field_ref/ensure",
      "href": "/ref/cpp/fns/class/apache/thrift/field_ref/ensure"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1a140ea1ffad2caf9fcb0745df20bf6ff0",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename Index"
        }
      ],
      "type_html": "FOLLY_ERASE auto",
      "definition_html": "FOLLY_ERASE auto apache::thrift::field_ref&lt; T &gt;::operator[]",
      "argsstring_html": "(const Index &amp;index) const -&gt; decltype(auto)",
      "name_html": "operator[]",
      "qualifiedname_html": "apache::thrift::field_ref::operator[]",
      "param": [
        {
          "type_html": "const Index &amp;",
          "declname_html": "index"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "379",
        "column": "20",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "379",
        "bodyend": "381"
      },
      "definition": {
        "simple_html": "template &lt;typename Index&gt;\nFOLLY_ERASE auto operator[](const Index&amp; index) const -&gt; decltype(auto)",
        "simple_raw": "template <typename Index>\nFOLLY_ERASE auto operator[](const Index& index) const -> decltype(auto)",
        "detailed_html": "template &lt;typename Index&gt;\ninline FOLLY_ERASE auto operator[](const Index&amp; index) const -&gt; decltype(auto)",
        "detailed_raw": "template <typename Index>\ninline FOLLY_ERASE auto operator[](const Index& index) const -> decltype(auto)",
        "original_definition_html": "FOLLY_ERASE auto apache::thrift::field_ref&lt; T &gt;::operator[]",
        "original_argsstring_html": "(const Index &amp;index) const -&gt; decltype(auto)"
      },
      "description": {
        "brief_html": "<p>Forward operator[] to the value. </p>"
      },
      "filepath": "fns/class/apache/thrift/field_ref/operator.at",
      "href": "/ref/cpp/fns/class/apache/thrift/field_ref/operator.at"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1a065dff095cc5c4862be9277ed17a50ba",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename...",
          "declname_html": "Args",
          "defname_html": "Args"
        }
      ],
      "type_html": "FOLLY_ERASE <code>value_type</code> &amp;",
      "definition_html": "FOLLY_ERASE value_type &amp; apache::thrift::field_ref&lt; T &gt;::emplace",
      "argsstring_html": "(Args &amp;&amp;... args)",
      "name_html": "emplace",
      "qualifiedname_html": "apache::thrift::field_ref::emplace",
      "param": [
        {
          "type_html": "Args &amp;&amp;...",
          "declname_html": "args"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "385",
        "column": "26",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "385",
        "bodyend": "391"
      },
      "definition": {
        "simple_html": "template &lt;typename... Args&gt;\nFOLLY_ERASE value_type&amp; emplace(Args&amp;&amp;... args)",
        "simple_raw": "template <typename... Args>\nFOLLY_ERASE value_type& emplace(Args&&... args)",
        "detailed_html": "template &lt;typename... Args&gt;\ninline FOLLY_ERASE value_type&amp; emplace(Args&amp;&amp;... args)",
        "detailed_raw": "template <typename... Args>\ninline FOLLY_ERASE value_type& emplace(Args&&... args)",
        "original_definition_html": "FOLLY_ERASE value_type &amp; apache::thrift::field_ref&lt; T &gt;::emplace",
        "original_argsstring_html": "(Args &amp;&amp;... args)"
      },
      "description": {
        "brief_html": "<p>Constructs the value in-place. </p>"
      },
      "filepath": "fns/class/apache/thrift/field_ref/emplace",
      "href": "/ref/cpp/fns/class/apache/thrift/field_ref/emplace"
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1ac54b40b0be440401ae67772b64bdc3d8",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "class U"
        },
        {
          "type_html": "class...",
          "declname_html": "Args",
          "defname_html": "Args"
        }
      ],
      "type_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_constructible&lt; <code>value_type</code>, std::initializer_list&lt; U &gt;, Args &amp;&amp;... &gt;<code>::value</code>, <code>value_type</code> &amp; &gt;",
      "definition_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_constructible&lt; value_type, std::initializer_list&lt; U &gt;, Args &amp;&amp;... &gt;:: value, value_type &amp; &gt; apache::thrift::field_ref&lt; T &gt;::emplace",
      "argsstring_html": "(std::initializer_list&lt; U &gt; ilist, Args &amp;&amp;... args)",
      "name_html": "emplace",
      "qualifiedname_html": "apache::thrift::field_ref::emplace",
      "param": [
        {
          "type_html": "std::initializer_list&lt; U &gt;",
          "declname_html": "ilist"
        },
        {
          "type_html": "Args &amp;&amp;...",
          "declname_html": "args"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "399",
        "column": "3",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "399",
        "bodyend": "404"
      },
      "definition": {
        "simple_html": "template &lt;class U, class... Args&gt;\nFOLLY_ERASE std::enable_if_t&lt;\n    std::is_constructible&lt;value_type, std::initializer_list&lt;U&gt;, Args&amp;&amp;...&gt;::\n        value,\n    value_type&amp;&gt;\nemplace(std::initializer_list&lt;U&gt; ilist, Args&amp;&amp;... args)",
        "simple_raw": "template <class U, class... Args>\nFOLLY_ERASE std::enable_if_t<\n    std::is_constructible<value_type, std::initializer_list<U>, Args&&...>::\n        value,\n    value_type&>\nemplace(std::initializer_list<U> ilist, Args&&... args)",
        "detailed_html": "template &lt;class U, class... Args&gt;\ninline FOLLY_ERASE std::enable_if_t&lt;\n    std::is_constructible&lt;value_type, std::initializer_list&lt;U&gt;, Args&amp;&amp;...&gt;::\n        value,\n    value_type&amp;&gt;\nemplace(std::initializer_list&lt;U&gt; ilist, Args&amp;&amp;... args)",
        "detailed_raw": "template <class U, class... Args>\ninline FOLLY_ERASE std::enable_if_t<\n    std::is_constructible<value_type, std::initializer_list<U>, Args&&...>::\n        value,\n    value_type&>\nemplace(std::initializer_list<U> ilist, Args&&... args)",
        "original_definition_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_constructible&lt; value_type, std::initializer_list&lt; U &gt;, Args &amp;&amp;... &gt;:: value, value_type &amp; &gt; apache::thrift::field_ref&lt; T &gt;::emplace",
        "original_argsstring_html": "(std::initializer_list&lt; U &gt; ilist, Args &amp;&amp;... args)"
      },
      "description": {
        "brief_html": "<p>Constructs the value in-place. </p>"
      },
      "filepath": "fns/class/apache/thrift/field_ref/emplace",
      "href": "/ref/cpp/fns/class/apache/thrift/field_ref/emplace"
    }
  ],
  "friends": [
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1a782cd790de6fda31ad8d9da76e2623ce",
      "prot": "private",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename U"
        }
      ],
      "type_html": "class",
      "definition_html": "friend class field_ref",
      "argsstring_html": "",
      "name_html": "field_ref",
      "qualifiedname_html": "apache::thrift::field_ref::field_ref",
      "param": [
        {
          "type_html": "<code>field_ref</code>"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "262",
        "column": "16",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "262",
        "bodyend": "-1"
      }
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1a4060212aa044fdeb8bef0bacc05fc061",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "type_html": "struct",
      "definition_html": "friend struct apache::thrift::detail::unset_unsafe_fn",
      "argsstring_html": "",
      "name_html": "apache::thrift::detail::unset_unsafe_fn",
      "qualifiedname_html": "apache::thrift::field_ref::unset_unsafe_fn",
      "param": [
        {
          "type_html": "<a href=\"https://www.internalfb.com/intern/staticdocs/fbcref/ref/cpp/struct/apache/thrift/detail/unset_unsafe_fn\">apache::thrift::detail::unset_unsafe_fn</a>"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "263",
        "column": "17",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "263",
        "bodyend": "-1"
      }
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1a2af51c19b9a91c0b4b3aa84b5ad1a97b",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "type_html": "struct",
      "definition_html": "friend struct apache::thrift::detail::is_non_optional_field_set_manually_or_by_serializer_fn",
      "argsstring_html": "",
      "name_html": "apache::thrift::detail::is_non_optional_field_set_manually_or_by_serializer_fn",
      "qualifiedname_html": "apache::thrift::field_ref::is_non_optional_field_set_manually_or_by_serializer_fn",
      "param": [
        {
          "type_html": "<a href=\"https://www.internalfb.com/intern/staticdocs/fbcref/ref/cpp/struct/apache/thrift/detail/is_non_optional_field_set_manually_or_by_serializer_fn\">apache::thrift::detail::is_non_optional_field_set_manually_or_by_serializer_fn</a>"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "264",
        "column": "17",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "265",
        "bodyend": "-1"
      }
    }
  ],
  "location": {
    "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
    "line": "258",
    "column": "1",
    "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
    "bodystart": "258",
    "bodyend": "409"
  },
  "namespacednames_html": [
    "apache",
    "thrift",
    "field_ref"
  ],
  "enums": [],
  "members": [
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1a7a7b241975dbf38edda2d3b10d24c8dc",
      "prot": "private",
      "static": "no",
      "mutable": "no",
      "type_html": "<code>value_type</code> &amp;",
      "definition_html": "value_type&amp; apache::thrift::field_ref&lt; T &gt;::value_",
      "argsstring_html": "",
      "name_html": "value_",
      "qualifiedname_html": "apache::thrift::field_ref::value_",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "407",
        "column": "14",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "407",
        "bodyend": "-1"
      }
    },
    {
      "refid": "classapache_1_1thrift_1_1field__ref_1a32c5e942d6924cb8a4541d5819c6929f",
      "prot": "private",
      "static": "no",
      "mutable": "no",
      "type_html": "BitRef",
      "definition_html": "BitRef apache::thrift::field_ref&lt; T &gt;::bitref_",
      "argsstring_html": "",
      "name_html": "bitref_",
      "qualifiedname_html": "apache::thrift::field_ref::bitref_",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "line": "408",
        "column": "10",
        "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
        "bodystart": "408",
        "bodyend": "-1"
      }
    }
  ],
  "declaration_raw": "template < typename T >\nclass field_ref;",
  "declaration_html": "template &lt; typename T &gt;\nclass field_ref;",
  "description": {
    "detailed_html": "<p>A reference to an unqualified field of the possibly const-qualified type std::remove_reference_t&lt;T&gt; in a Thrift-generated struct. </p>"
  },
  "filepath": "class/apache/thrift/field_ref",
  "href": "/ref/cpp/class/apache/thrift/field_ref",
  "overloadgroups": [
    {
      "groupname_html": "",
      "overloadsets": [
        {
          "kind": "overloadset",
          "name_html": "field_ref",
          "compoundname_html": "apache::thrift::field_ref::field_ref",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1field__ref_1af25bff49d13e7e02d099313ee1fb9a92",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "noexcept": "yes",
              "virtual": "non-virtual",
              "type_html": "FOLLY_ERASE",
              "definition_html": "FOLLY_ERASE apache::thrift::field_ref&lt; T &gt;::field_ref",
              "argsstring_html": "(reference_type value, typename BitRef::Isset &amp;is_set, const uint8_t bit_index=0) noexcept",
              "name_html": "field_ref",
              "qualifiedname_html": "apache::thrift::field_ref::field_ref",
              "param": [
                {
                  "type_html": "<code>reference_type</code>",
                  "declname_html": "value"
                },
                {
                  "type_html": "typename BitRef::Isset &amp;",
                  "declname_html": "is_set"
                },
                {
                  "type_html": "const uint8_t",
                  "declname_html": "bit_index",
                  "defval_html": "0"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "277",
                "column": "15",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "277",
                "bodyend": "281"
              },
              "definition": {
                "simple_html": "FOLLY_ERASE field_ref(\n    reference_type value,\n    typename BitRef::Isset&amp; is_set,\n    const uint8_t bit_index = 0)",
                "simple_raw": "FOLLY_ERASE field_ref(\n    reference_type value,\n    typename BitRef::Isset& is_set,\n    const uint8_t bit_index = 0)",
                "detailed_html": "inline FOLLY_ERASE field_ref(\n    reference_type value,\n    typename BitRef::Isset&amp; is_set,\n    const uint8_t bit_index = 0) noexcept",
                "detailed_raw": "inline FOLLY_ERASE field_ref(\n    reference_type value,\n    typename BitRef::Isset& is_set,\n    const uint8_t bit_index = 0) noexcept",
                "original_definition_html": "FOLLY_ERASE apache::thrift::field_ref&lt; T &gt;::field_ref",
                "original_argsstring_html": "(reference_type value, typename BitRef::Isset &amp;is_set, const uint8_t bit_index=0) noexcept"
              },
              "description": {
                "brief_html": "<p>Internal constructor. </p>"
              },
              "filepath": "fns/class/apache/thrift/field_ref/field_ref",
              "href": "/ref/cpp/fns/class/apache/thrift/field_ref/field_ref",
              "parentid": "classapache_1_1thrift_1_1field__ref",
              "constructor": true,
              "compoundname_html": "apache::thrift::field_ref::field_ref"
            },
            {
              "refid": "classapache_1_1thrift_1_1field__ref_1a3c325dc859794e2199a2c7b61a1e5037",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "noexcept": "yes",
              "virtual": "non-virtual",
              "type_html": "FOLLY_ERASE",
              "definition_html": "FOLLY_ERASE apache::thrift::field_ref&lt; T &gt;::field_ref",
              "argsstring_html": "(reference_type value, typename BitRef::AtomicIsset &amp;is_set, const uint8_t bit_index=0) noexcept",
              "name_html": "field_ref",
              "qualifiedname_html": "apache::thrift::field_ref::field_ref",
              "param": [
                {
                  "type_html": "<code>reference_type</code>",
                  "declname_html": "value"
                },
                {
                  "type_html": "typename BitRef::AtomicIsset &amp;",
                  "declname_html": "is_set"
                },
                {
                  "type_html": "const uint8_t",
                  "declname_html": "bit_index",
                  "defval_html": "0"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "284",
                "column": "15",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "284",
                "bodyend": "288"
              },
              "definition": {
                "simple_html": "FOLLY_ERASE field_ref(\n    reference_type value,\n    typename BitRef::AtomicIsset&amp; is_set,\n    const uint8_t bit_index = 0)",
                "simple_raw": "FOLLY_ERASE field_ref(\n    reference_type value,\n    typename BitRef::AtomicIsset& is_set,\n    const uint8_t bit_index = 0)",
                "detailed_html": "inline FOLLY_ERASE field_ref(\n    reference_type value,\n    typename BitRef::AtomicIsset&amp; is_set,\n    const uint8_t bit_index = 0) noexcept",
                "detailed_raw": "inline FOLLY_ERASE field_ref(\n    reference_type value,\n    typename BitRef::AtomicIsset& is_set,\n    const uint8_t bit_index = 0) noexcept",
                "original_definition_html": "FOLLY_ERASE apache::thrift::field_ref&lt; T &gt;::field_ref",
                "original_argsstring_html": "(reference_type value, typename BitRef::AtomicIsset &amp;is_set, const uint8_t bit_index=0) noexcept"
              },
              "description": {
                "brief_html": "<p>Internal constructor. </p>"
              },
              "filepath": "fns/class/apache/thrift/field_ref/field_ref",
              "href": "/ref/cpp/fns/class/apache/thrift/field_ref/field_ref",
              "parentid": "classapache_1_1thrift_1_1field__ref",
              "constructor": true,
              "compoundname_html": "apache::thrift::field_ref::field_ref"
            },
            {
              "refid": "classapache_1_1thrift_1_1field__ref_1afb16c866c3e2467be3030e1267a94126",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "noexcept": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename U"
                },
                {
                  "type_html": "typename",
                  "defval_html": "<code>apache::thrift::detail::EnableIfImplicit</code>&lt;T, U&gt;"
                }
              ],
              "type_html": "FOLLY_ERASE",
              "definition_html": "FOLLY_ERASE apache::thrift::field_ref&lt; T &gt;::field_ref",
              "argsstring_html": "(const field_ref&lt; U &gt; &amp;other) noexcept",
              "name_html": "field_ref",
              "qualifiedname_html": "apache::thrift::field_ref::field_ref",
              "param": [
                {
                  "type_html": "const <code>field_ref</code>&lt; U &gt; &amp;",
                  "declname_html": "other"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "293",
                "column": "16",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "293",
                "bodyend": "294"
              },
              "definition": {
                "simple_html": "template &lt;typename U, typename = apache::thrift::detail::EnableIfImplicit&lt;T, U&gt;&gt;\nFOLLY_ERASE field_ref(const field_ref&lt;U&gt;&amp; other)",
                "simple_raw": "template <typename U, typename = apache::thrift::detail::EnableIfImplicit<T, U>>\nFOLLY_ERASE field_ref(const field_ref<U>& other)",
                "detailed_html": "template &lt;typename U, typename = apache::thrift::detail::EnableIfImplicit&lt;T, U&gt;&gt;\ninline FOLLY_ERASE field_ref(const field_ref&lt;U&gt;&amp; other) noexcept",
                "detailed_raw": "template <typename U, typename = apache::thrift::detail::EnableIfImplicit<T, U>>\ninline FOLLY_ERASE field_ref(const field_ref<U>& other) noexcept",
                "original_definition_html": "FOLLY_ERASE apache::thrift::field_ref&lt; T &gt;::field_ref",
                "original_argsstring_html": "(const field_ref&lt; U &gt; &amp;other) noexcept"
              },
              "filepath": "fns/class/apache/thrift/field_ref/field_ref",
              "href": "/ref/cpp/fns/class/apache/thrift/field_ref/field_ref",
              "parentid": "classapache_1_1thrift_1_1field__ref",
              "constructor": true,
              "compoundname_html": "apache::thrift::field_ref::field_ref"
            }
          ],
          "filepath": "f/class/apache/thrift/field_ref/field_ref",
          "minprot": "public",
          "displayname_html": "(constructor)",
          "brief_html": "Constructs the field_ref.",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/field_ref/field_ref",
          "refid": "/ref/cpp/f/class/apache/thrift/field_ref/field_ref",
          "parent_links": [
            {
              "text_html": "field_ref",
              "href": "/ref/cpp/class/apache/thrift/field_ref"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "operator=",
          "compoundname_html": "apache::thrift::field_ref::operator=",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1field__ref_1aa5aad53097f0586d81b1562877cc1c94",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "noexcept": "yes",
              "virtual": "non-virtual",
              "noexceptexpression": "std::is_nothrow_assignable< value_type &, U && >::value",
              "tparams": [
                {
                  "type_html": "typename U",
                  "defval_html": "<code>value_type</code>"
                }
              ],
              "type_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_assignable&lt; <code>value_type</code> &amp;, U &amp;&amp; &gt;<code>::value</code>, <code>field_ref</code> &amp; &gt;",
              "definition_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_assignable&lt; value_type &amp;, U &amp;&amp; &gt;::value, field_ref &amp; &gt; apache::thrift::field_ref&lt; T &gt;::operator=",
              "argsstring_html": "(U &amp;&amp;value)",
              "name_html": "operator=",
              "qualifiedname_html": "apache::thrift::field_ref::operator=",
              "param": [
                {
                  "type_html": "U &amp;&amp;",
                  "declname_html": "value"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "299",
                "column": "7",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "299",
                "bodyend": "304"
              },
              "definition": {
                "simple_html": "template &lt;typename U = value_type&gt;\nFOLLY_ERASE\n    std::enable_if_t&lt;std::is_assignable&lt;value_type&amp;, U&amp;&amp;&gt;::value, field_ref&amp;&gt;\n    operator=(U&amp;&amp; value)",
                "simple_raw": "template <typename U = value_type>\nFOLLY_ERASE\n    std::enable_if_t<std::is_assignable<value_type&, U&&>::value, field_ref&>\n    operator=(U&& value)",
                "detailed_html": "template &lt;typename U = value_type&gt;\ninline FOLLY_ERASE\n    std::enable_if_t&lt;std::is_assignable&lt;value_type&amp;, U&amp;&amp;&gt;::value, field_ref&amp;&gt;\n    operator=(U&amp;&amp; value)",
                "detailed_raw": "template <typename U = value_type>\ninline FOLLY_ERASE\n    std::enable_if_t<std::is_assignable<value_type&, U&&>::value, field_ref&>\n    operator=(U&& value)",
                "original_definition_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_assignable&lt; value_type &amp;, U &amp;&amp; &gt;::value, field_ref &amp; &gt; apache::thrift::field_ref&lt; T &gt;::operator=",
                "original_argsstring_html": "(U &amp;&amp;value)"
              },
              "filepath": "fns/class/apache/thrift/field_ref/operator.assign",
              "href": "/ref/cpp/fns/class/apache/thrift/field_ref/operator.assign",
              "parentid": "classapache_1_1thrift_1_1field__ref",
              "compoundname_html": "apache::thrift::field_ref::operator="
            },
            {
              "refid": "classapache_1_1thrift_1_1field__ref_1ab24e9fdfa69f9ad563e5f716d99b6210",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "noexcept": "yes",
              "virtual": "non-virtual",
              "noexceptexpression": "std::is_nothrow_move_assignable< value_type >::value",
              "type_html": "FOLLY_ERASE <code>field_ref</code> &amp;",
              "definition_html": "FOLLY_ERASE field_ref &amp; apache::thrift::field_ref&lt; T &gt;::operator=",
              "argsstring_html": "(value_type &amp;&amp;value)",
              "name_html": "operator=",
              "qualifiedname_html": "apache::thrift::field_ref::operator=",
              "param": [
                {
                  "type_html": "<code>value_type</code> &amp;&amp;",
                  "declname_html": "value"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "307",
                "column": "25",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "307",
                "bodyend": "312"
              },
              "definition": {
                "simple_html": "FOLLY_ERASE field_ref&amp; operator=(value_type&amp;&amp; value)",
                "simple_raw": "FOLLY_ERASE field_ref& operator=(value_type&& value)",
                "detailed_html": "inline FOLLY_ERASE field_ref&amp; operator=(value_type&amp;&amp; value)",
                "detailed_raw": "inline FOLLY_ERASE field_ref& operator=(value_type&& value)",
                "original_definition_html": "FOLLY_ERASE field_ref &amp; apache::thrift::field_ref&lt; T &gt;::operator=",
                "original_argsstring_html": "(value_type &amp;&amp;value)"
              },
              "filepath": "fns/class/apache/thrift/field_ref/operator.assign",
              "href": "/ref/cpp/fns/class/apache/thrift/field_ref/operator.assign",
              "parentid": "classapache_1_1thrift_1_1field__ref",
              "compoundname_html": "apache::thrift::field_ref::operator="
            }
          ],
          "filepath": "f/class/apache/thrift/field_ref/operator.assign",
          "minprot": "public",
          "displayname_html": "operator=",
          "brief_html": "Assignment operator.",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/field_ref/operator.assign",
          "refid": "/ref/cpp/f/class/apache/thrift/field_ref/operator.assign",
          "parent_links": [
            {
              "text_html": "field_ref",
              "href": "/ref/cpp/class/apache/thrift/field_ref"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "copy_from",
          "compoundname_html": "apache::thrift::field_ref::copy_from",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1field__ref_1ab5b2479e848e7a93a35e4aedb1c4a10f",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "noexcept": "yes",
              "virtual": "non-virtual",
              "noexceptexpression": "std::is_nothrow_assignable< value_type &, U >::value",
              "tparams": [
                {
                  "type_html": "typename U"
                }
              ],
              "type_html": "FOLLY_ERASE void",
              "definition_html": "FOLLY_ERASE void apache::thrift::field_ref&lt; T &gt;::copy_from",
              "argsstring_html": "(field_ref&lt; U &gt; other)",
              "name_html": "copy_from",
              "qualifiedname_html": "apache::thrift::field_ref::copy_from",
              "param": [
                {
                  "type_html": "<code>field_ref</code>&lt; U &gt;",
                  "declname_html": "other"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "318",
                "column": "20",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "318",
                "bodyend": "322"
              },
              "definition": {
                "simple_html": "template &lt;typename U&gt;\nFOLLY_ERASE void copy_from(field_ref&lt;U&gt; other)",
                "simple_raw": "template <typename U>\nFOLLY_ERASE void copy_from(field_ref<U> other)",
                "detailed_html": "template &lt;typename U&gt;\ninline FOLLY_ERASE void copy_from(field_ref&lt;U&gt; other)",
                "detailed_raw": "template <typename U>\ninline FOLLY_ERASE void copy_from(field_ref<U> other)",
                "original_definition_html": "FOLLY_ERASE void apache::thrift::field_ref&lt; T &gt;::copy_from",
                "original_argsstring_html": "(field_ref&lt; U &gt; other)"
              },
              "description": {
                "detailed_html": "<p>Assignment from <code>field_ref</code> is intentionally not provided to prevent potential confusion between two possible behaviors, copying and reference rebinding. The copy_from method is provided instead. </p>"
              },
              "filepath": "fns/class/apache/thrift/field_ref/copy_from",
              "href": "/ref/cpp/fns/class/apache/thrift/field_ref/copy_from",
              "parentid": "classapache_1_1thrift_1_1field__ref",
              "compoundname_html": "apache::thrift::field_ref::copy_from"
            }
          ],
          "filepath": "f/class/apache/thrift/field_ref/copy_from",
          "minprot": "public",
          "displayname_html": "copy_from",
          "brief_html": "<p>Assignment from <code>field_ref</code> is intentionally not provided to prevent potential confusion between two possible behaviors, copying and reference rebinding. The copy_from method is provided instead. </p>",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/field_ref/copy_from",
          "refid": "/ref/cpp/f/class/apache/thrift/field_ref/copy_from",
          "parent_links": [
            {
              "text_html": "field_ref",
              "href": "/ref/cpp/class/apache/thrift/field_ref"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "has_value",
          "compoundname_html": "apache::thrift::field_ref::has_value",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1field__ref_1a2afbc3d03a6521a8663e2436de78b686",
              "prot": "public",
              "static": "no",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "noexcept": "yes",
              "virtual": "non-virtual",
              "type_html": "FOLLY_ERASE bool",
              "definition_html": "FOLLY_ERASE bool apache::thrift::field_ref&lt; T &gt;::has_value",
              "argsstring_html": "() const noexcept",
              "name_html": "has_value",
              "qualifiedname_html": "apache::thrift::field_ref::has_value",
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "328",
                "column": "20",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "328",
                "bodyend": "330"
              },
              "definition": {
                "simple_html": "FOLLY_ERASE bool has_value() const",
                "simple_raw": "FOLLY_ERASE bool has_value() const",
                "detailed_html": "inline FOLLY_ERASE bool has_value() const noexcept",
                "detailed_raw": "inline FOLLY_ERASE bool has_value() const noexcept",
                "original_definition_html": "FOLLY_ERASE bool apache::thrift::field_ref&lt; T &gt;::has_value",
                "original_argsstring_html": "() const noexcept"
              },
              "filepath": "fns/class/apache/thrift/field_ref/has_value",
              "href": "/ref/cpp/fns/class/apache/thrift/field_ref/has_value",
              "parentid": "classapache_1_1thrift_1_1field__ref",
              "compoundname_html": "apache::thrift::field_ref::has_value"
            }
          ],
          "filepath": "f/class/apache/thrift/field_ref/has_value",
          "minprot": "public",
          "displayname_html": "has_value",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/field_ref/has_value",
          "refid": "/ref/cpp/f/class/apache/thrift/field_ref/has_value",
          "parent_links": [
            {
              "text_html": "field_ref",
              "href": "/ref/cpp/class/apache/thrift/field_ref"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "is_set",
          "compoundname_html": "apache::thrift::field_ref::is_set",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1field__ref_1ac647ae6048e09cdec4749eda172e19b9",
              "prot": "public",
              "static": "no",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "noexcept": "yes",
              "virtual": "non-virtual",
              "type_html": "FOLLY_ERASE bool",
              "definition_html": "FOLLY_ERASE bool apache::thrift::field_ref&lt; T &gt;::is_set",
              "argsstring_html": "() const noexcept",
              "name_html": "is_set",
              "qualifiedname_html": "apache::thrift::field_ref::is_set",
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "339",
                "column": "20",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "339",
                "bodyend": "341"
              },
              "definition": {
                "simple_html": "FOLLY_ERASE bool is_set() const",
                "simple_raw": "FOLLY_ERASE bool is_set() const",
                "detailed_html": "inline FOLLY_ERASE bool is_set() const noexcept",
                "detailed_raw": "inline FOLLY_ERASE bool is_set() const noexcept",
                "original_definition_html": "FOLLY_ERASE bool apache::thrift::field_ref&lt; T &gt;::is_set",
                "original_argsstring_html": "() const noexcept"
              },
              "description": {
                "detailed_html": "<p>Returns true iff the field is set. <code>field_ref</code> doesn't provide conversion to bool to avoid confusion between checking if the field is set and getting the field's value, particularly for bool fields. </p>"
              },
              "filepath": "fns/class/apache/thrift/field_ref/is_set",
              "href": "/ref/cpp/fns/class/apache/thrift/field_ref/is_set",
              "parentid": "classapache_1_1thrift_1_1field__ref",
              "compoundname_html": "apache::thrift::field_ref::is_set"
            }
          ],
          "filepath": "f/class/apache/thrift/field_ref/is_set",
          "minprot": "public",
          "displayname_html": "is_set",
          "brief_html": "<p>Returns true iff the field is set. <code>field_ref</code> doesn't provide conversion to bool to avoid confusion between checking if the field is set and getting the field's value, particularly for bool fields. </p>",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/field_ref/is_set",
          "refid": "/ref/cpp/f/class/apache/thrift/field_ref/is_set",
          "parent_links": [
            {
              "text_html": "field_ref",
              "href": "/ref/cpp/class/apache/thrift/field_ref"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "value",
          "compoundname_html": "apache::thrift::field_ref::value",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1field__ref_1a756acc8db53e3c5d9901ed09ccd690fa",
              "prot": "public",
              "static": "no",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "noexcept": "yes",
              "virtual": "non-virtual",
              "type_html": "FOLLY_ERASE <code>reference_type</code>",
              "definition_html": "FOLLY_ERASE reference_type apache::thrift::field_ref&lt; T &gt;::value",
              "argsstring_html": "() const noexcept",
              "name_html": "value",
              "qualifiedname_html": "apache::thrift::field_ref::value",
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "344",
                "column": "30",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "344",
                "bodyend": "346"
              },
              "definition": {
                "simple_html": "FOLLY_ERASE reference_type value() const",
                "simple_raw": "FOLLY_ERASE reference_type value() const",
                "detailed_html": "inline FOLLY_ERASE reference_type value() const noexcept",
                "detailed_raw": "inline FOLLY_ERASE reference_type value() const noexcept",
                "original_definition_html": "FOLLY_ERASE reference_type apache::thrift::field_ref&lt; T &gt;::value",
                "original_argsstring_html": "() const noexcept"
              },
              "description": {
                "brief_html": "<p>Returns a reference to the value. </p>"
              },
              "filepath": "fns/class/apache/thrift/field_ref/value",
              "href": "/ref/cpp/fns/class/apache/thrift/field_ref/value",
              "parentid": "classapache_1_1thrift_1_1field__ref",
              "compoundname_html": "apache::thrift::field_ref::value"
            }
          ],
          "filepath": "f/class/apache/thrift/field_ref/value",
          "minprot": "public",
          "displayname_html": "value",
          "brief_html": "<p>Returns a reference to the value. </p>",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/field_ref/value",
          "refid": "/ref/cpp/f/class/apache/thrift/field_ref/value",
          "parent_links": [
            {
              "text_html": "field_ref",
              "href": "/ref/cpp/class/apache/thrift/field_ref"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "operator*",
          "compoundname_html": "apache::thrift::field_ref::operator*",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1field__ref_1a5f9a3d17ec7b1c5ae862ac814ff847c7",
              "prot": "public",
              "static": "no",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "noexcept": "yes",
              "virtual": "non-virtual",
              "type_html": "FOLLY_ERASE <code>reference_type</code>",
              "definition_html": "FOLLY_ERASE reference_type apache::thrift::field_ref&lt; T &gt;::operator*",
              "argsstring_html": "() const noexcept",
              "name_html": "operator*",
              "qualifiedname_html": "apache::thrift::field_ref::operator*",
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "349",
                "column": "30",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "349",
                "bodyend": "351"
              },
              "definition": {
                "simple_html": "FOLLY_ERASE reference_type operator*() const",
                "simple_raw": "FOLLY_ERASE reference_type operator*() const",
                "detailed_html": "inline FOLLY_ERASE reference_type operator*() const noexcept",
                "detailed_raw": "inline FOLLY_ERASE reference_type operator*() const noexcept",
                "original_definition_html": "FOLLY_ERASE reference_type apache::thrift::field_ref&lt; T &gt;::operator*",
                "original_argsstring_html": "() const noexcept"
              },
              "description": {
                "brief_html": "<p>Returns a reference to the value. </p>"
              },
              "filepath": "fns/class/apache/thrift/field_ref/operator.mul",
              "href": "/ref/cpp/fns/class/apache/thrift/field_ref/operator.mul",
              "parentid": "classapache_1_1thrift_1_1field__ref",
              "compoundname_html": "apache::thrift::field_ref::operator*"
            }
          ],
          "filepath": "f/class/apache/thrift/field_ref/operator.mul",
          "minprot": "public",
          "displayname_html": "operator*",
          "brief_html": "<p>Returns a reference to the value. </p>",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/field_ref/operator.mul",
          "refid": "/ref/cpp/f/class/apache/thrift/field_ref/operator.mul",
          "parent_links": [
            {
              "text_html": "field_ref",
              "href": "/ref/cpp/class/apache/thrift/field_ref"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "operator-&gt;",
          "compoundname_html": "apache::thrift::field_ref::operator-&gt;",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1field__ref_1ab2f01441382af2979688c4866f073b44",
              "prot": "public",
              "static": "no",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "noexcept": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename U",
                  "defval_html": "<code>value_type</code>"
                }
              ],
              "type_html": "FOLLY_ERASE <code>apache::thrift::detail::EnableIfNonConst</code>&lt; U &gt; *",
              "definition_html": "FOLLY_ERASE apache::thrift::detail::EnableIfNonConst&lt; U &gt; * apache::thrift::field_ref&lt; T &gt;::operator-&gt;",
              "argsstring_html": "() const noexcept",
              "name_html": "operator-&gt;",
              "qualifiedname_html": "apache::thrift::field_ref::operator-&gt;",
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "358",
                "column": "7",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "358",
                "bodyend": "360"
              },
              "definition": {
                "simple_html": "template &lt;typename U = value_type&gt;\nFOLLY_ERASE apache::thrift::detail::EnableIfNonConst&lt;U&gt;* operator-&gt;() const",
                "simple_raw": "template <typename U = value_type>\nFOLLY_ERASE apache::thrift::detail::EnableIfNonConst<U>* operator->() const",
                "detailed_html": "template &lt;typename U = value_type&gt;\ninline FOLLY_ERASE apache::thrift::detail::EnableIfNonConst&lt;U&gt;* operator-&gt;()\n    const noexcept",
                "detailed_raw": "template <typename U = value_type>\ninline FOLLY_ERASE apache::thrift::detail::EnableIfNonConst<U>* operator->()\n    const noexcept",
                "original_definition_html": "FOLLY_ERASE apache::thrift::detail::EnableIfNonConst&lt; U &gt; * apache::thrift::field_ref&lt; T &gt;::operator-&gt;",
                "original_argsstring_html": "() const noexcept"
              },
              "filepath": "fns/class/apache/thrift/field_ref/operator.arrow",
              "href": "/ref/cpp/fns/class/apache/thrift/field_ref/operator.arrow",
              "parentid": "classapache_1_1thrift_1_1field__ref",
              "compoundname_html": "apache::thrift::field_ref::operator-&gt;"
            },
            {
              "refid": "classapache_1_1thrift_1_1field__ref_1abfe9913d03f6d72e39f978476e8ea8fb",
              "prot": "public",
              "static": "no",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "noexcept": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename U",
                  "defval_html": "<code>value_type</code>"
                }
              ],
              "type_html": "FOLLY_ERASE <code>apache::thrift::detail::EnableIfConst</code>&lt; U &gt; *",
              "definition_html": "FOLLY_ERASE apache::thrift::detail::EnableIfConst&lt; U &gt; * apache::thrift::field_ref&lt; T &gt;::operator-&gt;",
              "argsstring_html": "() const noexcept",
              "name_html": "operator-&gt;",
              "qualifiedname_html": "apache::thrift::field_ref::operator-&gt;",
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "364",
                "column": "53",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "364",
                "bodyend": "367"
              },
              "definition": {
                "simple_html": "template &lt;typename U = value_type&gt;\nFOLLY_ERASE apache::thrift::detail::EnableIfConst&lt;U&gt;* operator-&gt;() const",
                "simple_raw": "template <typename U = value_type>\nFOLLY_ERASE apache::thrift::detail::EnableIfConst<U>* operator->() const",
                "detailed_html": "template &lt;typename U = value_type&gt;\ninline FOLLY_ERASE apache::thrift::detail::EnableIfConst&lt;U&gt;* operator-&gt;()\n    const noexcept",
                "detailed_raw": "template <typename U = value_type>\ninline FOLLY_ERASE apache::thrift::detail::EnableIfConst<U>* operator->()\n    const noexcept",
                "original_definition_html": "FOLLY_ERASE apache::thrift::detail::EnableIfConst&lt; U &gt; * apache::thrift::field_ref&lt; T &gt;::operator-&gt;",
                "original_argsstring_html": "() const noexcept"
              },
              "description": {
                "brief_html": "<p>Returns a pointer to the value. </p>"
              },
              "filepath": "fns/class/apache/thrift/field_ref/operator.arrow",
              "href": "/ref/cpp/fns/class/apache/thrift/field_ref/operator.arrow",
              "parentid": "classapache_1_1thrift_1_1field__ref",
              "compoundname_html": "apache::thrift::field_ref::operator-&gt;"
            },
            {
              "refid": "classapache_1_1thrift_1_1field__ref_1abfb461cfa58a2679d84daf14d61acad6",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "noexcept": "yes",
              "virtual": "non-virtual",
              "type_html": "FOLLY_ERASE <code>value_type</code> *",
              "definition_html": "FOLLY_ERASE value_type * apache::thrift::field_ref&lt; T &gt;::operator-&gt;",
              "argsstring_html": "() noexcept",
              "name_html": "operator-&gt;",
              "qualifiedname_html": "apache::thrift::field_ref::operator-&gt;",
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "370",
                "column": "26",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "370",
                "bodyend": "370"
              },
              "definition": {
                "simple_html": "FOLLY_ERASE value_type* operator-&gt;()",
                "simple_raw": "FOLLY_ERASE value_type* operator->()",
                "detailed_html": "inline FOLLY_ERASE value_type* operator-&gt;() noexcept",
                "detailed_raw": "inline FOLLY_ERASE value_type* operator->() noexcept",
                "original_definition_html": "FOLLY_ERASE value_type * apache::thrift::field_ref&lt; T &gt;::operator-&gt;",
                "original_argsstring_html": "() noexcept"
              },
              "description": {
                "brief_html": "<p>Returns a pointer to the value. </p>"
              },
              "filepath": "fns/class/apache/thrift/field_ref/operator.arrow",
              "href": "/ref/cpp/fns/class/apache/thrift/field_ref/operator.arrow",
              "parentid": "classapache_1_1thrift_1_1field__ref",
              "compoundname_html": "apache::thrift::field_ref::operator-&gt;"
            }
          ],
          "filepath": "f/class/apache/thrift/field_ref/operator.arrow",
          "minprot": "public",
          "displayname_html": "operator-&gt;",
          "brief_html": "<p>Returns a pointer to the value. </p>",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/field_ref/operator.arrow",
          "refid": "/ref/cpp/f/class/apache/thrift/field_ref/operator.arrow",
          "parent_links": [
            {
              "text_html": "field_ref",
              "href": "/ref/cpp/class/apache/thrift/field_ref"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "ensure",
          "compoundname_html": "apache::thrift::field_ref::ensure",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1field__ref_1a3e45bf96731edbe655c11b9bdd07a7a4",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "noexcept": "yes",
              "virtual": "non-virtual",
              "type_html": "FOLLY_ERASE <code>reference_type</code>",
              "definition_html": "FOLLY_ERASE reference_type apache::thrift::field_ref&lt; T &gt;::ensure",
              "argsstring_html": "() noexcept",
              "name_html": "ensure",
              "qualifiedname_html": "apache::thrift::field_ref::ensure",
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "372",
                "column": "30",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "372",
                "bodyend": "375"
              },
              "definition": {
                "simple_html": "FOLLY_ERASE reference_type ensure()",
                "simple_raw": "FOLLY_ERASE reference_type ensure()",
                "detailed_html": "inline FOLLY_ERASE reference_type ensure() noexcept",
                "detailed_raw": "inline FOLLY_ERASE reference_type ensure() noexcept",
                "original_definition_html": "FOLLY_ERASE reference_type apache::thrift::field_ref&lt; T &gt;::ensure",
                "original_argsstring_html": "() noexcept"
              },
              "filepath": "fns/class/apache/thrift/field_ref/ensure",
              "href": "/ref/cpp/fns/class/apache/thrift/field_ref/ensure",
              "parentid": "classapache_1_1thrift_1_1field__ref",
              "compoundname_html": "apache::thrift::field_ref::ensure"
            }
          ],
          "filepath": "f/class/apache/thrift/field_ref/ensure",
          "minprot": "public",
          "displayname_html": "ensure",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/field_ref/ensure",
          "refid": "/ref/cpp/f/class/apache/thrift/field_ref/ensure",
          "parent_links": [
            {
              "text_html": "field_ref",
              "href": "/ref/cpp/class/apache/thrift/field_ref"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "operator[]",
          "compoundname_html": "apache::thrift::field_ref::operator[]",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1field__ref_1a140ea1ffad2caf9fcb0745df20bf6ff0",
              "prot": "public",
              "static": "no",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename Index"
                }
              ],
              "type_html": "FOLLY_ERASE auto",
              "definition_html": "FOLLY_ERASE auto apache::thrift::field_ref&lt; T &gt;::operator[]",
              "argsstring_html": "(const Index &amp;index) const -&gt; decltype(auto)",
              "name_html": "operator[]",
              "qualifiedname_html": "apache::thrift::field_ref::operator[]",
              "param": [
                {
                  "type_html": "const Index &amp;",
                  "declname_html": "index"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "379",
                "column": "20",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "379",
                "bodyend": "381"
              },
              "definition": {
                "simple_html": "template &lt;typename Index&gt;\nFOLLY_ERASE auto operator[](const Index&amp; index) const -&gt; decltype(auto)",
                "simple_raw": "template <typename Index>\nFOLLY_ERASE auto operator[](const Index& index) const -> decltype(auto)",
                "detailed_html": "template &lt;typename Index&gt;\ninline FOLLY_ERASE auto operator[](const Index&amp; index) const -&gt; decltype(auto)",
                "detailed_raw": "template <typename Index>\ninline FOLLY_ERASE auto operator[](const Index& index) const -> decltype(auto)",
                "original_definition_html": "FOLLY_ERASE auto apache::thrift::field_ref&lt; T &gt;::operator[]",
                "original_argsstring_html": "(const Index &amp;index) const -&gt; decltype(auto)"
              },
              "description": {
                "brief_html": "<p>Forward operator[] to the value. </p>"
              },
              "filepath": "fns/class/apache/thrift/field_ref/operator.at",
              "href": "/ref/cpp/fns/class/apache/thrift/field_ref/operator.at",
              "parentid": "classapache_1_1thrift_1_1field__ref",
              "compoundname_html": "apache::thrift::field_ref::operator[]"
            }
          ],
          "filepath": "f/class/apache/thrift/field_ref/operator.at",
          "minprot": "public",
          "displayname_html": "operator[]",
          "brief_html": "<p>Forward operator[] to the value. </p>",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/field_ref/operator.at",
          "refid": "/ref/cpp/f/class/apache/thrift/field_ref/operator.at",
          "parent_links": [
            {
              "text_html": "field_ref",
              "href": "/ref/cpp/class/apache/thrift/field_ref"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "emplace",
          "compoundname_html": "apache::thrift::field_ref::emplace",
          "functions": [
            {
              "refid": "classapache_1_1thrift_1_1field__ref_1a065dff095cc5c4862be9277ed17a50ba",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename...",
                  "declname_html": "Args",
                  "defname_html": "Args"
                }
              ],
              "type_html": "FOLLY_ERASE <code>value_type</code> &amp;",
              "definition_html": "FOLLY_ERASE value_type &amp; apache::thrift::field_ref&lt; T &gt;::emplace",
              "argsstring_html": "(Args &amp;&amp;... args)",
              "name_html": "emplace",
              "qualifiedname_html": "apache::thrift::field_ref::emplace",
              "param": [
                {
                  "type_html": "Args &amp;&amp;...",
                  "declname_html": "args"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "385",
                "column": "26",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "385",
                "bodyend": "391"
              },
              "definition": {
                "simple_html": "template &lt;typename... Args&gt;\nFOLLY_ERASE value_type&amp; emplace(Args&amp;&amp;... args)",
                "simple_raw": "template <typename... Args>\nFOLLY_ERASE value_type& emplace(Args&&... args)",
                "detailed_html": "template &lt;typename... Args&gt;\ninline FOLLY_ERASE value_type&amp; emplace(Args&amp;&amp;... args)",
                "detailed_raw": "template <typename... Args>\ninline FOLLY_ERASE value_type& emplace(Args&&... args)",
                "original_definition_html": "FOLLY_ERASE value_type &amp; apache::thrift::field_ref&lt; T &gt;::emplace",
                "original_argsstring_html": "(Args &amp;&amp;... args)"
              },
              "description": {
                "brief_html": "<p>Constructs the value in-place. </p>"
              },
              "filepath": "fns/class/apache/thrift/field_ref/emplace",
              "href": "/ref/cpp/fns/class/apache/thrift/field_ref/emplace",
              "parentid": "classapache_1_1thrift_1_1field__ref",
              "compoundname_html": "apache::thrift::field_ref::emplace"
            },
            {
              "refid": "classapache_1_1thrift_1_1field__ref_1ac54b40b0be440401ae67772b64bdc3d8",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "class U"
                },
                {
                  "type_html": "class...",
                  "declname_html": "Args",
                  "defname_html": "Args"
                }
              ],
              "type_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_constructible&lt; <code>value_type</code>, std::initializer_list&lt; U &gt;, Args &amp;&amp;... &gt;<code>::value</code>, <code>value_type</code> &amp; &gt;",
              "definition_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_constructible&lt; value_type, std::initializer_list&lt; U &gt;, Args &amp;&amp;... &gt;:: value, value_type &amp; &gt; apache::thrift::field_ref&lt; T &gt;::emplace",
              "argsstring_html": "(std::initializer_list&lt; U &gt; ilist, Args &amp;&amp;... args)",
              "name_html": "emplace",
              "qualifiedname_html": "apache::thrift::field_ref::emplace",
              "param": [
                {
                  "type_html": "std::initializer_list&lt; U &gt;",
                  "declname_html": "ilist"
                },
                {
                  "type_html": "Args &amp;&amp;...",
                  "declname_html": "args"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "line": "399",
                "column": "3",
                "bodyfile": "fbcode/thrift/lib/cpp2/FieldRef.h",
                "bodystart": "399",
                "bodyend": "404"
              },
              "definition": {
                "simple_html": "template &lt;class U, class... Args&gt;\nFOLLY_ERASE std::enable_if_t&lt;\n    std::is_constructible&lt;value_type, std::initializer_list&lt;U&gt;, Args&amp;&amp;...&gt;::\n        value,\n    value_type&amp;&gt;\nemplace(std::initializer_list&lt;U&gt; ilist, Args&amp;&amp;... args)",
                "simple_raw": "template <class U, class... Args>\nFOLLY_ERASE std::enable_if_t<\n    std::is_constructible<value_type, std::initializer_list<U>, Args&&...>::\n        value,\n    value_type&>\nemplace(std::initializer_list<U> ilist, Args&&... args)",
                "detailed_html": "template &lt;class U, class... Args&gt;\ninline FOLLY_ERASE std::enable_if_t&lt;\n    std::is_constructible&lt;value_type, std::initializer_list&lt;U&gt;, Args&amp;&amp;...&gt;::\n        value,\n    value_type&amp;&gt;\nemplace(std::initializer_list&lt;U&gt; ilist, Args&amp;&amp;... args)",
                "detailed_raw": "template <class U, class... Args>\ninline FOLLY_ERASE std::enable_if_t<\n    std::is_constructible<value_type, std::initializer_list<U>, Args&&...>::\n        value,\n    value_type&>\nemplace(std::initializer_list<U> ilist, Args&&... args)",
                "original_definition_html": "FOLLY_ERASE std::enable_if_t&lt; std::is_constructible&lt; value_type, std::initializer_list&lt; U &gt;, Args &amp;&amp;... &gt;:: value, value_type &amp; &gt; apache::thrift::field_ref&lt; T &gt;::emplace",
                "original_argsstring_html": "(std::initializer_list&lt; U &gt; ilist, Args &amp;&amp;... args)"
              },
              "description": {
                "brief_html": "<p>Constructs the value in-place. </p>"
              },
              "filepath": "fns/class/apache/thrift/field_ref/emplace",
              "href": "/ref/cpp/fns/class/apache/thrift/field_ref/emplace",
              "parentid": "classapache_1_1thrift_1_1field__ref",
              "compoundname_html": "apache::thrift::field_ref::emplace"
            }
          ],
          "filepath": "f/class/apache/thrift/field_ref/emplace",
          "minprot": "public",
          "displayname_html": "emplace",
          "brief_html": "<p>Constructs the value in-place. </p>",
          "groupname_html": "",
          "href": "/ref/cpp/f/class/apache/thrift/field_ref/emplace",
          "refid": "/ref/cpp/f/class/apache/thrift/field_ref/emplace",
          "parent_links": [
            {
              "text_html": "field_ref",
              "href": "/ref/cpp/class/apache/thrift/field_ref"
            }
          ]
        }
      ]
    }
  ],
  "free_overloadgroups": []
}