{
  "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4",
  "kind": "struct",
  "language": "C++",
  "prot": "public",
  "compoundname_html": "apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;",
  "includes": {
    "refid": "detail_2Encode_8h",
    "local": "no",
    "text_html": "Encode.h"
  },
  "tparams": [
    {
      "type_html": "typename Key"
    },
    {
      "type_html": "typename Value"
    }
  ],
  "functions": [
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4_1a68b5f2be4a3e8b6f35aabb3b1cb6bfca",
      "prot": "private",
      "static": "yes",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename Map"
        },
        {
          "type_html": "typename Protocol"
        }
      ],
      "type_html": "std::enable_if_t&lt; apache::thrift::detail::pm::sorted_unique_constructible_v&lt; Map &gt; &gt;",
      "definition_html": "static std::enable_if_t&lt; apache::thrift::detail::pm::sorted_unique_constructible_v&lt; Map &gt; &gt; apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::decode_known_length_map",
      "argsstring_html": "(Protocol &amp;prot, Map &amp;map, std::uint32_t map_size)",
      "name_html": "decode_known_length_map",
      "qualifiedname_html": "apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::decode_known_length_map",
      "param": [
        {
          "type_html": "Protocol &amp;",
          "declname_html": "prot"
        },
        {
          "type_html": "Map &amp;",
          "declname_html": "map"
        },
        {
          "type_html": "std::uint32_t",
          "declname_html": "map_size"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/detail/Encode.h",
        "line": "1014",
        "column": "3",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Encode.h",
        "bodystart": "1014",
        "bodyend": "1038"
      },
      "definition": {
        "simple_html": "template &lt;typename Map, typename Protocol&gt;\nstatic std::enable_if_t&lt;\n    apache::thrift::detail::pm::sorted_unique_constructible_v&lt;Map&gt;&gt;\ndecode_known_length_map(Protocol&amp; prot, Map&amp; map, std::uint32_t map_size)",
        "simple_raw": "template <typename Map, typename Protocol>\nstatic std::enable_if_t<\n    apache::thrift::detail::pm::sorted_unique_constructible_v<Map>>\ndecode_known_length_map(Protocol& prot, Map& map, std::uint32_t map_size)",
        "detailed_html": "template &lt;typename Map, typename Protocol&gt;\nprivate inline static std::enable_if_t&lt;\n    apache::thrift::detail::pm::sorted_unique_constructible_v&lt;Map&gt;&gt;\ndecode_known_length_map(Protocol&amp; prot, Map&amp; map, std::uint32_t map_size)",
        "detailed_raw": "template <typename Map, typename Protocol>\nprivate inline static std::enable_if_t<\n    apache::thrift::detail::pm::sorted_unique_constructible_v<Map>>\ndecode_known_length_map(Protocol& prot, Map& map, std::uint32_t map_size)",
        "original_definition_html": "static std::enable_if_t&lt; apache::thrift::detail::pm::sorted_unique_constructible_v&lt; Map &gt; &gt; apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::decode_known_length_map",
        "original_argsstring_html": "(Protocol &amp;prot, Map &amp;map, std::uint32_t map_size)"
      },
      "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/decode_known_length_map",
      "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/decode_known_length_map"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4_1a3c154879b9b5d212b0df047922352211",
      "prot": "private",
      "static": "yes",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename Map"
        },
        {
          "type_html": "typename Protocol"
        }
      ],
      "type_html": "std::enable_if_t&lt; !apache::thrift::detail::pm::sorted_unique_constructible_v&lt; Map &gt; &gt;",
      "definition_html": "static std::enable_if_t&lt; !apache::thrift::detail::pm::sorted_unique_constructible_v&lt; Map &gt; &gt; apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::decode_known_length_map",
      "argsstring_html": "(Protocol &amp;prot, Map &amp;map, std::uint32_t map_size)",
      "name_html": "decode_known_length_map",
      "qualifiedname_html": "apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::decode_known_length_map",
      "param": [
        {
          "type_html": "Protocol &amp;",
          "declname_html": "prot"
        },
        {
          "type_html": "Map &amp;",
          "declname_html": "map"
        },
        {
          "type_html": "std::uint32_t",
          "declname_html": "map_size"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/detail/Encode.h",
        "line": "1044",
        "column": "3",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Encode.h",
        "bodystart": "1044",
        "bodyend": "1055"
      },
      "definition": {
        "simple_html": "template &lt;typename Map, typename Protocol&gt;\nstatic std::enable_if_t&lt;\n    !apache::thrift::detail::pm::sorted_unique_constructible_v&lt;Map&gt;&gt;\ndecode_known_length_map(Protocol&amp; prot, Map&amp; map, std::uint32_t map_size)",
        "simple_raw": "template <typename Map, typename Protocol>\nstatic std::enable_if_t<\n    !apache::thrift::detail::pm::sorted_unique_constructible_v<Map>>\ndecode_known_length_map(Protocol& prot, Map& map, std::uint32_t map_size)",
        "detailed_html": "template &lt;typename Map, typename Protocol&gt;\nprivate inline static std::enable_if_t&lt;\n    !apache::thrift::detail::pm::sorted_unique_constructible_v&lt;Map&gt;&gt;\ndecode_known_length_map(Protocol&amp; prot, Map&amp; map, std::uint32_t map_size)",
        "detailed_raw": "template <typename Map, typename Protocol>\nprivate inline static std::enable_if_t<\n    !apache::thrift::detail::pm::sorted_unique_constructible_v<Map>>\ndecode_known_length_map(Protocol& prot, Map& map, std::uint32_t map_size)",
        "original_definition_html": "static std::enable_if_t&lt; !apache::thrift::detail::pm::sorted_unique_constructible_v&lt; Map &gt; &gt; apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::decode_known_length_map",
        "original_argsstring_html": "(Protocol &amp;prot, Map &amp;map, std::uint32_t map_size)"
      },
      "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/decode_known_length_map",
      "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/decode_known_length_map"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4_1a29537a7895b23c6c07a8a407c77ee263",
      "prot": "public",
      "static": "no",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename Protocol"
        },
        {
          "type_html": "typename MapType"
        }
      ],
      "type_html": "void",
      "definition_html": "void apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::operator()",
      "argsstring_html": "(Protocol &amp;prot, MapType &amp;map) const",
      "name_html": "operator()",
      "qualifiedname_html": "apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::operator()",
      "param": [
        {
          "type_html": "Protocol &amp;",
          "declname_html": "prot"
        },
        {
          "type_html": "MapType &amp;",
          "declname_html": "map"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/detail/Encode.h",
        "line": "1059",
        "column": "8",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Encode.h",
        "bodystart": "1059",
        "bodyend": "1086"
      },
      "definition": {
        "simple_html": "template &lt;typename Protocol, typename MapType&gt;\nvoid operator()(Protocol&amp; prot, MapType&amp; map) const",
        "simple_raw": "template <typename Protocol, typename MapType>\nvoid operator()(Protocol& prot, MapType& map) const",
        "detailed_html": "template &lt;typename Protocol, typename MapType&gt;\ninline void operator()(Protocol&amp; prot, MapType&amp; map) const",
        "detailed_raw": "template <typename Protocol, typename MapType>\ninline void operator()(Protocol& prot, MapType& map) const",
        "original_definition_html": "void apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::operator()",
        "original_argsstring_html": "(Protocol &amp;prot, MapType &amp;map) const"
      },
      "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/operator.call",
      "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/operator.call"
    }
  ],
  "location": {
    "file": "fbcode/thrift/lib/cpp2/op/detail/Encode.h",
    "line": "1008",
    "column": "1",
    "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Encode.h",
    "bodystart": "1008",
    "bodyend": "1087"
  },
  "namespacednames_html": [
    "apache",
    "thrift",
    "op",
    "detail",
    "Decode&lt; type::map&lt; Key, Value &gt; &gt;"
  ],
  "enums": [],
  "types": [],
  "members": [],
  "friends": [],
  "declaration_raw": "template <\n  typename Key,\n  typename Value\n> struct Decode< type::map< Key, Value > >;",
  "declaration_html": "template &lt;\n  typename Key,\n  typename Value\n&gt; struct Decode&lt; type::map&lt; Key, Value &gt; &gt;;",
  "filepath": "struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4",
  "href": "/ref/cpp/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4",
  "overloadgroups": [
    {
      "groupname_html": "",
      "overloadsets": [
        {
          "kind": "overloadset",
          "name_html": "decode_known_length_map",
          "compoundname_html": "apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::decode_known_length_map",
          "functions": [
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4_1a68b5f2be4a3e8b6f35aabb3b1cb6bfca",
              "prot": "private",
              "static": "yes",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename Map"
                },
                {
                  "type_html": "typename Protocol"
                }
              ],
              "type_html": "std::enable_if_t&lt; apache::thrift::detail::pm::sorted_unique_constructible_v&lt; Map &gt; &gt;",
              "definition_html": "static std::enable_if_t&lt; apache::thrift::detail::pm::sorted_unique_constructible_v&lt; Map &gt; &gt; apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::decode_known_length_map",
              "argsstring_html": "(Protocol &amp;prot, Map &amp;map, std::uint32_t map_size)",
              "name_html": "decode_known_length_map",
              "qualifiedname_html": "apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::decode_known_length_map",
              "param": [
                {
                  "type_html": "Protocol &amp;",
                  "declname_html": "prot"
                },
                {
                  "type_html": "Map &amp;",
                  "declname_html": "map"
                },
                {
                  "type_html": "std::uint32_t",
                  "declname_html": "map_size"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Encode.h",
                "line": "1014",
                "column": "3",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Encode.h",
                "bodystart": "1014",
                "bodyend": "1038"
              },
              "definition": {
                "simple_html": "template &lt;typename Map, typename Protocol&gt;\nstatic std::enable_if_t&lt;\n    apache::thrift::detail::pm::sorted_unique_constructible_v&lt;Map&gt;&gt;\ndecode_known_length_map(Protocol&amp; prot, Map&amp; map, std::uint32_t map_size)",
                "simple_raw": "template <typename Map, typename Protocol>\nstatic std::enable_if_t<\n    apache::thrift::detail::pm::sorted_unique_constructible_v<Map>>\ndecode_known_length_map(Protocol& prot, Map& map, std::uint32_t map_size)",
                "detailed_html": "template &lt;typename Map, typename Protocol&gt;\nprivate inline static std::enable_if_t&lt;\n    apache::thrift::detail::pm::sorted_unique_constructible_v&lt;Map&gt;&gt;\ndecode_known_length_map(Protocol&amp; prot, Map&amp; map, std::uint32_t map_size)",
                "detailed_raw": "template <typename Map, typename Protocol>\nprivate inline static std::enable_if_t<\n    apache::thrift::detail::pm::sorted_unique_constructible_v<Map>>\ndecode_known_length_map(Protocol& prot, Map& map, std::uint32_t map_size)",
                "original_definition_html": "static std::enable_if_t&lt; apache::thrift::detail::pm::sorted_unique_constructible_v&lt; Map &gt; &gt; apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::decode_known_length_map",
                "original_argsstring_html": "(Protocol &amp;prot, Map &amp;map, std::uint32_t map_size)"
              },
              "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/decode_known_length_map",
              "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/decode_known_length_map",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4",
              "compoundname_html": "apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::decode_known_length_map"
            },
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4_1a3c154879b9b5d212b0df047922352211",
              "prot": "private",
              "static": "yes",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename Map"
                },
                {
                  "type_html": "typename Protocol"
                }
              ],
              "type_html": "std::enable_if_t&lt; !apache::thrift::detail::pm::sorted_unique_constructible_v&lt; Map &gt; &gt;",
              "definition_html": "static std::enable_if_t&lt; !apache::thrift::detail::pm::sorted_unique_constructible_v&lt; Map &gt; &gt; apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::decode_known_length_map",
              "argsstring_html": "(Protocol &amp;prot, Map &amp;map, std::uint32_t map_size)",
              "name_html": "decode_known_length_map",
              "qualifiedname_html": "apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::decode_known_length_map",
              "param": [
                {
                  "type_html": "Protocol &amp;",
                  "declname_html": "prot"
                },
                {
                  "type_html": "Map &amp;",
                  "declname_html": "map"
                },
                {
                  "type_html": "std::uint32_t",
                  "declname_html": "map_size"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Encode.h",
                "line": "1044",
                "column": "3",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Encode.h",
                "bodystart": "1044",
                "bodyend": "1055"
              },
              "definition": {
                "simple_html": "template &lt;typename Map, typename Protocol&gt;\nstatic std::enable_if_t&lt;\n    !apache::thrift::detail::pm::sorted_unique_constructible_v&lt;Map&gt;&gt;\ndecode_known_length_map(Protocol&amp; prot, Map&amp; map, std::uint32_t map_size)",
                "simple_raw": "template <typename Map, typename Protocol>\nstatic std::enable_if_t<\n    !apache::thrift::detail::pm::sorted_unique_constructible_v<Map>>\ndecode_known_length_map(Protocol& prot, Map& map, std::uint32_t map_size)",
                "detailed_html": "template &lt;typename Map, typename Protocol&gt;\nprivate inline static std::enable_if_t&lt;\n    !apache::thrift::detail::pm::sorted_unique_constructible_v&lt;Map&gt;&gt;\ndecode_known_length_map(Protocol&amp; prot, Map&amp; map, std::uint32_t map_size)",
                "detailed_raw": "template <typename Map, typename Protocol>\nprivate inline static std::enable_if_t<\n    !apache::thrift::detail::pm::sorted_unique_constructible_v<Map>>\ndecode_known_length_map(Protocol& prot, Map& map, std::uint32_t map_size)",
                "original_definition_html": "static std::enable_if_t&lt; !apache::thrift::detail::pm::sorted_unique_constructible_v&lt; Map &gt; &gt; apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::decode_known_length_map",
                "original_argsstring_html": "(Protocol &amp;prot, Map &amp;map, std::uint32_t map_size)"
              },
              "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/decode_known_length_map",
              "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/decode_known_length_map",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4",
              "compoundname_html": "apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::decode_known_length_map"
            }
          ],
          "filepath": "f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/decode_known_length_map",
          "minprot": "private",
          "displayname_html": "decode_known_length_map",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/decode_known_length_map",
          "refid": "/ref/cpp/f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/decode_known_length_map",
          "parent_links": [
            {
              "text_html": "Decode&lt; type::map&lt; Key, Value &gt; &gt;",
              "href": "/ref/cpp/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "operator()",
          "compoundname_html": "apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::operator()",
          "functions": [
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4_1a29537a7895b23c6c07a8a407c77ee263",
              "prot": "public",
              "static": "no",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename Protocol"
                },
                {
                  "type_html": "typename MapType"
                }
              ],
              "type_html": "void",
              "definition_html": "void apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::operator()",
              "argsstring_html": "(Protocol &amp;prot, MapType &amp;map) const",
              "name_html": "operator()",
              "qualifiedname_html": "apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::operator()",
              "param": [
                {
                  "type_html": "Protocol &amp;",
                  "declname_html": "prot"
                },
                {
                  "type_html": "MapType &amp;",
                  "declname_html": "map"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Encode.h",
                "line": "1059",
                "column": "8",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Encode.h",
                "bodystart": "1059",
                "bodyend": "1086"
              },
              "definition": {
                "simple_html": "template &lt;typename Protocol, typename MapType&gt;\nvoid operator()(Protocol&amp; prot, MapType&amp; map) const",
                "simple_raw": "template <typename Protocol, typename MapType>\nvoid operator()(Protocol& prot, MapType& map) const",
                "detailed_html": "template &lt;typename Protocol, typename MapType&gt;\ninline void operator()(Protocol&amp; prot, MapType&amp; map) const",
                "detailed_raw": "template <typename Protocol, typename MapType>\ninline void operator()(Protocol& prot, MapType& map) const",
                "original_definition_html": "void apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::operator()",
                "original_argsstring_html": "(Protocol &amp;prot, MapType &amp;map) const"
              },
              "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/operator.call",
              "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/operator.call",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4",
              "compoundname_html": "apache::thrift::op::detail::Decode&lt; type::map&lt; Key, Value &gt; &gt;::operator()"
            }
          ],
          "filepath": "f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/operator.call",
          "minprot": "public",
          "displayname_html": "operator()",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/operator.call",
          "refid": "/ref/cpp/f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4/operator.call",
          "parent_links": [
            {
              "text_html": "Decode&lt; type::map&lt; Key, Value &gt; &gt;",
              "href": "/ref/cpp/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Decode_3_01type_1_1map_3_01Key_00_01Value_01_4_01_4"
            }
          ]
        }
      ]
    }
  ],
  "free_overloadgroups": []
}