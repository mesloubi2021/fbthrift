{
  "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty",
  "kind": "struct",
  "language": "C++",
  "prot": "public",
  "compoundname_html": "apache::thrift::op::detail::IsEmpty",
  "derivedcompoundref": [
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01type_1_1field_3_01Tag_00_01Context_01_4_01_4",
      "prot": "public",
      "virtual": "non-virtual",
      "text_html": "apache::thrift::op::detail::IsEmpty&lt; type::field&lt; Tag, Context &gt; &gt;"
    }
  ],
  "includes": {
    "refid": "detail_2Clear_8h",
    "local": "no",
    "text_html": "Clear.h"
  },
  "tparams": [
    {
      "type_html": "typename Tag"
    }
  ],
  "functions": [
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_1a37ac45cc63d9ed1e2b5c17694d337022",
      "prot": "public",
      "static": "no",
      "constexpr": "yes",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "type_html": "bool",
      "definition_html": "bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::operator()",
      "argsstring_html": "(const type::native_type&lt; Tag &gt; &amp;value) const",
      "name_html": "operator()",
      "qualifiedname_html": "apache::thrift::op::detail::IsEmpty::operator()",
      "param": [
        {
          "type_html": "const type::native_type&lt; Tag &gt; &amp;",
          "declname_html": "value"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
        "line": "103",
        "column": "18",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
        "bodystart": "103",
        "bodyend": "105"
      },
      "definition": {
        "simple_html": "bool operator()(const type::native_type&lt;Tag&gt;&amp; value) const",
        "simple_raw": "bool operator()(const type::native_type<Tag>& value) const",
        "detailed_html": "inline bool operator()(const type::native_type&lt;Tag&gt;&amp; value) const",
        "detailed_raw": "inline bool operator()(const type::native_type<Tag>& value) const",
        "original_definition_html": "bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::operator()",
        "original_argsstring_html": "(const type::native_type&lt; Tag &gt; &amp;value) const"
      },
      "filepath": "fns/struct/apache/thrift/op/detail/IsEmpty/operator.call",
      "href": "/ref/cpp/fns/struct/apache/thrift/op/detail/IsEmpty/operator.call"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_1a02a63b63489901604c23c4b2b5c72659",
      "prot": "private",
      "static": "yes",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T"
        }
      ],
      "type_html": "bool",
      "definition_html": "static bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
      "argsstring_html": "(const T &amp;val, type::structured_c)",
      "name_html": "empty",
      "qualifiedname_html": "apache::thrift::op::detail::IsEmpty::empty",
      "param": [
        {
          "type_html": "const T &amp;",
          "declname_html": "val"
        },
        {
          "type_html": "type::structured_c"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
        "line": "109",
        "column": "15",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
        "bodystart": "109",
        "bodyend": "111"
      },
      "definition": {
        "simple_html": "template &lt;typename T&gt;\nstatic bool empty(const T&amp; val, type::structured_c)",
        "simple_raw": "template <typename T>\nstatic bool empty(const T& val, type::structured_c)",
        "detailed_html": "template &lt;typename T&gt;\nprivate inline static bool empty(const T&amp; val, type::structured_c)",
        "detailed_raw": "template <typename T>\nprivate inline static bool empty(const T& val, type::structured_c)",
        "original_definition_html": "static bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
        "original_argsstring_html": "(const T &amp;val, type::structured_c)"
      },
      "filepath": "fns/struct/apache/thrift/op/detail/IsEmpty/empty",
      "href": "/ref/cpp/fns/struct/apache/thrift/op/detail/IsEmpty/empty"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_1a209c85f540854f788fad4fa51996cce0",
      "prot": "private",
      "static": "yes",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T"
        }
      ],
      "type_html": "bool",
      "definition_html": "static bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
      "argsstring_html": "(const T &amp;val, type::container_c)",
      "name_html": "empty",
      "qualifiedname_html": "apache::thrift::op::detail::IsEmpty::empty",
      "param": [
        {
          "type_html": "const T &amp;",
          "declname_html": "val"
        },
        {
          "type_html": "type::container_c"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
        "line": "113",
        "column": "15",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
        "bodystart": "113",
        "bodyend": "115"
      },
      "definition": {
        "simple_html": "template &lt;typename T&gt;\nstatic bool empty(const T&amp; val, type::container_c)",
        "simple_raw": "template <typename T>\nstatic bool empty(const T& val, type::container_c)",
        "detailed_html": "template &lt;typename T&gt;\nprivate inline static bool empty(const T&amp; val, type::container_c)",
        "detailed_raw": "template <typename T>\nprivate inline static bool empty(const T& val, type::container_c)",
        "original_definition_html": "static bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
        "original_argsstring_html": "(const T &amp;val, type::container_c)"
      },
      "filepath": "fns/struct/apache/thrift/op/detail/IsEmpty/empty",
      "href": "/ref/cpp/fns/struct/apache/thrift/op/detail/IsEmpty/empty"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_1aa86e61c5bc3c836d66f0a01c52e55285",
      "prot": "private",
      "static": "yes",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T"
        }
      ],
      "type_html": "bool",
      "definition_html": "static bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
      "argsstring_html": "(const T &amp;val, type::string_c)",
      "name_html": "empty",
      "qualifiedname_html": "apache::thrift::op::detail::IsEmpty::empty",
      "param": [
        {
          "type_html": "const T &amp;",
          "declname_html": "val"
        },
        {
          "type_html": "type::string_c"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
        "line": "117",
        "column": "15",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
        "bodystart": "117",
        "bodyend": "119"
      },
      "definition": {
        "simple_html": "template &lt;typename T&gt;\nstatic bool empty(const T&amp; val, type::string_c)",
        "simple_raw": "template <typename T>\nstatic bool empty(const T& val, type::string_c)",
        "detailed_html": "template &lt;typename T&gt;\nprivate inline static bool empty(const T&amp; val, type::string_c)",
        "detailed_raw": "template <typename T>\nprivate inline static bool empty(const T& val, type::string_c)",
        "original_definition_html": "static bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
        "original_argsstring_html": "(const T &amp;val, type::string_c)"
      },
      "filepath": "fns/struct/apache/thrift/op/detail/IsEmpty/empty",
      "href": "/ref/cpp/fns/struct/apache/thrift/op/detail/IsEmpty/empty"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_1a0db8f94adee3af6019b691be053a7344",
      "prot": "private",
      "static": "yes",
      "constexpr": "yes",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T"
        }
      ],
      "type_html": "bool",
      "definition_html": "static constexpr bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
      "argsstring_html": "(const T &amp;val, type::all_c)",
      "name_html": "empty",
      "qualifiedname_html": "apache::thrift::op::detail::IsEmpty::empty",
      "param": [
        {
          "type_html": "const T &amp;",
          "declname_html": "val"
        },
        {
          "type_html": "type::all_c"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
        "line": "121",
        "column": "25",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
        "bodystart": "121",
        "bodyend": "123"
      },
      "definition": {
        "simple_html": "template &lt;typename T&gt;\nstatic bool empty(const T&amp; val, type::all_c)",
        "simple_raw": "template <typename T>\nstatic bool empty(const T& val, type::all_c)",
        "detailed_html": "template &lt;typename T&gt;\nprivate inline static bool empty(const T&amp; val, type::all_c)",
        "detailed_raw": "template <typename T>\nprivate inline static bool empty(const T& val, type::all_c)",
        "original_definition_html": "static constexpr bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
        "original_argsstring_html": "(const T &amp;val, type::all_c)"
      },
      "filepath": "fns/struct/apache/thrift/op/detail/IsEmpty/empty",
      "href": "/ref/cpp/fns/struct/apache/thrift/op/detail/IsEmpty/empty"
    },
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_1a10fa07643a241b6dcf701046e7a62033",
      "prot": "private",
      "static": "yes",
      "const": "no",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename ATag"
        }
      ],
      "type_html": "bool",
      "definition_html": "static bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
      "argsstring_html": "(const std::unique_ptr&lt; folly::IOBuf &gt; &amp;val, ATag tag)",
      "name_html": "empty",
      "qualifiedname_html": "apache::thrift::op::detail::IsEmpty::empty",
      "param": [
        {
          "type_html": "const std::unique_ptr&lt; folly::IOBuf &gt; &amp;",
          "declname_html": "val"
        },
        {
          "type_html": "ATag",
          "declname_html": "tag"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
        "line": "125",
        "column": "15",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
        "bodystart": "125",
        "bodyend": "127"
      },
      "definition": {
        "simple_html": "template &lt;typename ATag&gt;\nstatic bool empty(const std::unique_ptr&lt;folly::IOBuf&gt;&amp; val, ATag tag)",
        "simple_raw": "template <typename ATag>\nstatic bool empty(const std::unique_ptr<folly::IOBuf>& val, ATag tag)",
        "detailed_html": "template &lt;typename ATag&gt;\nprivate inline static bool empty(\n    const std::unique_ptr&lt;folly::IOBuf&gt;&amp; val, ATag tag)",
        "detailed_raw": "template <typename ATag>\nprivate inline static bool empty(\n    const std::unique_ptr<folly::IOBuf>& val, ATag tag)",
        "original_definition_html": "static bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
        "original_argsstring_html": "(const std::unique_ptr&lt; folly::IOBuf &gt; &amp;val, ATag tag)"
      },
      "filepath": "fns/struct/apache/thrift/op/detail/IsEmpty/empty",
      "href": "/ref/cpp/fns/struct/apache/thrift/op/detail/IsEmpty/empty"
    }
  ],
  "location": {
    "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
    "line": "102",
    "column": "1",
    "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
    "bodystart": "102",
    "bodyend": "128"
  },
  "namespacednames_html": [
    "apache",
    "thrift",
    "op",
    "detail",
    "IsEmpty"
  ],
  "enums": [],
  "types": [],
  "members": [],
  "friends": [],
  "declaration_raw": "template < typename Tag >\nstruct IsEmpty;",
  "declaration_html": "template &lt; typename Tag &gt;\nstruct IsEmpty;",
  "filepath": "struct/apache/thrift/op/detail/IsEmpty",
  "href": "/ref/cpp/struct/apache/thrift/op/detail/IsEmpty",
  "specializedBy": [
    "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01adapted__field__tag_3_01Adapter_00_01UTag_af4bd28c6cb5d1963019f0431992e269",
    "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01type_1_1adapted_3_01Adapter_00_01UTag_01_4_01_4",
    "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01type_1_1field_3_01Tag_00_01Context_01_4_01_4",
    "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01void_01_4"
  ],
  "overloadgroups": [
    {
      "groupname_html": "",
      "overloadsets": [
        {
          "kind": "overloadset",
          "name_html": "operator()",
          "compoundname_html": "apache::thrift::op::detail::IsEmpty::operator()",
          "functions": [
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_1a37ac45cc63d9ed1e2b5c17694d337022",
              "prot": "public",
              "static": "no",
              "constexpr": "yes",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "type_html": "bool",
              "definition_html": "bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::operator()",
              "argsstring_html": "(const type::native_type&lt; Tag &gt; &amp;value) const",
              "name_html": "operator()",
              "qualifiedname_html": "apache::thrift::op::detail::IsEmpty::operator()",
              "param": [
                {
                  "type_html": "const type::native_type&lt; Tag &gt; &amp;",
                  "declname_html": "value"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "line": "103",
                "column": "18",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "bodystart": "103",
                "bodyend": "105"
              },
              "definition": {
                "simple_html": "bool operator()(const type::native_type&lt;Tag&gt;&amp; value) const",
                "simple_raw": "bool operator()(const type::native_type<Tag>& value) const",
                "detailed_html": "inline bool operator()(const type::native_type&lt;Tag&gt;&amp; value) const",
                "detailed_raw": "inline bool operator()(const type::native_type<Tag>& value) const",
                "original_definition_html": "bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::operator()",
                "original_argsstring_html": "(const type::native_type&lt; Tag &gt; &amp;value) const"
              },
              "filepath": "fns/struct/apache/thrift/op/detail/IsEmpty/operator.call",
              "href": "/ref/cpp/fns/struct/apache/thrift/op/detail/IsEmpty/operator.call",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty",
              "compoundname_html": "apache::thrift::op::detail::IsEmpty::operator()"
            },
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01void_01_4_1ad74deb7d985ebcc1159945d21ac0881e",
              "prot": "public",
              "static": "no",
              "constexpr": "yes",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename T"
                }
              ],
              "type_html": "bool",
              "definition_html": "bool apache::thrift::op::detail::IsEmpty&lt; void &gt;::operator()",
              "argsstring_html": "(T &amp;val) const",
              "name_html": "operator()",
              "qualifiedname_html": "apache::thrift::op::detail::IsEmpty&lt; void &gt;::operator()",
              "param": [
                {
                  "type_html": "T &amp;",
                  "declname_html": "val"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "line": "132",
                "column": "18",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "bodystart": "132",
                "bodyend": "134"
              },
              "definition": {
                "simple_html": "template &lt;typename T&gt;\nbool operator()(T&amp; val) const",
                "simple_raw": "template <typename T>\nbool operator()(T& val) const",
                "detailed_html": "template &lt;typename T&gt;\ninline bool operator()(T&amp; val) const",
                "detailed_raw": "template <typename T>\ninline bool operator()(T& val) const",
                "original_definition_html": "bool apache::thrift::op::detail::IsEmpty&lt; void &gt;::operator()",
                "original_argsstring_html": "(T &amp;val) const"
              },
              "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01void_01_4/operator.call",
              "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01void_01_4/operator.call",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01void_01_4",
              "compoundname_html": "apache::thrift::op::detail::IsEmpty::operator()"
            },
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01type_1_1adapted_3_01Adapter_00_01UTag_01_4_01_4_1aa95ac7bca825b5a785f9d70338b8f8df",
              "prot": "public",
              "static": "no",
              "constexpr": "yes",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename AdapterT",
                  "defval_html": "Adapter"
                }
              ],
              "type_html": "adapt_detail::if_is_empty_adapter&lt; AdapterT, type::native_type&lt; <code>Tag</code> &gt; &gt;",
              "definition_html": "adapt_detail::if_is_empty_adapter&lt; AdapterT, type::native_type&lt; Tag &gt; &gt; apache::thrift::op::detail::IsEmpty&lt; type::adapted&lt; Adapter, UTag &gt; &gt;::operator()",
              "argsstring_html": "(const type::native_type&lt; Tag &gt; &amp;value) const",
              "name_html": "operator()",
              "qualifiedname_html": "apache::thrift::op::detail::IsEmpty&lt; type::adapted&lt; Adapter, UTag &gt; &gt;::operator()",
              "param": [
                {
                  "type_html": "const type::native_type&lt; <code>Tag</code> &gt; &amp;",
                  "declname_html": "value"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "line": "289",
                "column": "3",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "bodystart": "289",
                "bodyend": "291"
              },
              "definition": {
                "simple_html": "template &lt;typename AdapterT = Adapter&gt;\nadapt_detail::if_is_empty_adapter&lt;AdapterT, type::native_type&lt;Tag&gt;&gt; operator()(\n    const type::native_type&lt;Tag&gt;&amp; value) const",
                "simple_raw": "template <typename AdapterT = Adapter>\nadapt_detail::if_is_empty_adapter<AdapterT, type::native_type<Tag>> operator()(\n    const type::native_type<Tag>& value) const",
                "detailed_html": "template &lt;typename AdapterT = Adapter&gt;\ninline adapt_detail::if_is_empty_adapter&lt;AdapterT, type::native_type&lt;Tag&gt;&gt;\noperator()(const type::native_type&lt;Tag&gt;&amp; value) const",
                "detailed_raw": "template <typename AdapterT = Adapter>\ninline adapt_detail::if_is_empty_adapter<AdapterT, type::native_type<Tag>>\noperator()(const type::native_type<Tag>& value) const",
                "original_definition_html": "adapt_detail::if_is_empty_adapter&lt; AdapterT, type::native_type&lt; Tag &gt; &gt; apache::thrift::op::detail::IsEmpty&lt; type::adapted&lt; Adapter, UTag &gt; &gt;::operator()",
                "original_argsstring_html": "(const type::native_type&lt; Tag &gt; &amp;value) const"
              },
              "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01type_1_1adapted_3_01Adapter_00_01UTag_01_4_01_4/operator.call",
              "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01type_1_1adapted_3_01Adapter_00_01UTag_01_4_01_4/operator.call",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01type_1_1adapted_3_01Adapter_00_01UTag_01_4_01_4",
              "compoundname_html": "apache::thrift::op::detail::IsEmpty::operator()"
            },
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01type_1_1adapted_3_01Adapter_00_01UTag_01_4_01_4_1aa22f2b6f0e33c28d85d50bf9f1f083d0",
              "prot": "public",
              "static": "no",
              "constexpr": "yes",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename AdapterT",
                  "defval_html": "Adapter"
                }
              ],
              "type_html": "adapt_detail::if_not_is_empty_adapter&lt; AdapterT, type::native_type&lt; <code>Tag</code> &gt; &gt;",
              "definition_html": "adapt_detail:: if_not_is_empty_adapter&lt; AdapterT, type::native_type&lt; Tag &gt; &gt; apache::thrift::op::detail::IsEmpty&lt; type::adapted&lt; Adapter, UTag &gt; &gt;::operator()",
              "argsstring_html": "(const type::native_type&lt; Tag &gt; &amp;value) const",
              "name_html": "operator()",
              "qualifiedname_html": "apache::thrift::op::detail::IsEmpty&lt; type::adapted&lt; Adapter, UTag &gt; &gt;::operator()",
              "param": [
                {
                  "type_html": "const type::native_type&lt; <code>Tag</code> &gt; &amp;",
                  "declname_html": "value"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "line": "297",
                "column": "7",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "bodystart": "297",
                "bodyend": "299"
              },
              "definition": {
                "simple_html": "template &lt;typename AdapterT = Adapter&gt;\nadapt_detail::if_not_is_empty_adapter&lt;AdapterT, type::native_type&lt;Tag&gt;&gt;\noperator()(const type::native_type&lt;Tag&gt;&amp; value) const",
                "simple_raw": "template <typename AdapterT = Adapter>\nadapt_detail::if_not_is_empty_adapter<AdapterT, type::native_type<Tag>>\noperator()(const type::native_type<Tag>& value) const",
                "detailed_html": "template &lt;typename AdapterT = Adapter&gt;\ninline adapt_detail::if_not_is_empty_adapter&lt;AdapterT, type::native_type&lt;Tag&gt;&gt;\noperator()(const type::native_type&lt;Tag&gt;&amp; value) const",
                "detailed_raw": "template <typename AdapterT = Adapter>\ninline adapt_detail::if_not_is_empty_adapter<AdapterT, type::native_type<Tag>>\noperator()(const type::native_type<Tag>& value) const",
                "original_definition_html": "adapt_detail:: if_not_is_empty_adapter&lt; AdapterT, type::native_type&lt; Tag &gt; &gt; apache::thrift::op::detail::IsEmpty&lt; type::adapted&lt; Adapter, UTag &gt; &gt;::operator()",
                "original_argsstring_html": "(const type::native_type&lt; Tag &gt; &amp;value) const"
              },
              "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01type_1_1adapted_3_01Adapter_00_01UTag_01_4_01_4/operator.call",
              "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01type_1_1adapted_3_01Adapter_00_01UTag_01_4_01_4/operator.call",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01type_1_1adapted_3_01Adapter_00_01UTag_01_4_01_4",
              "compoundname_html": "apache::thrift::op::detail::IsEmpty::operator()"
            },
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01adapted__field__tag_3_01Adapter_00_01UTag_af4bd28c6cb5d1963019f0431992e269_1a18aa234bff054c2984d63f59065d9d26",
              "prot": "public",
              "static": "no",
              "constexpr": "yes",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename AdapterT",
                  "defval_html": "Adapter"
                }
              ],
              "type_html": "adapt_detail::if_is_empty_adapter&lt; AdapterT, type::native_type&lt; <code>Tag</code> &gt; &gt;",
              "definition_html": "adapt_detail::if_is_empty_adapter&lt; AdapterT, type::native_type&lt; Tag &gt; &gt; apache::thrift::op::detail::IsEmpty&lt; adapted_field_tag&lt; Adapter, UTag, Struct, FieldId &gt; &gt;::operator()",
              "argsstring_html": "(const type::native_type&lt; Tag &gt; &amp;value) const",
              "name_html": "operator()",
              "qualifiedname_html": "apache::thrift::op::detail::IsEmpty&lt; adapted_field_tag&lt; Adapter, UTag, Struct, FieldId &gt; &gt;::operator()",
              "param": [
                {
                  "type_html": "const type::native_type&lt; <code>Tag</code> &gt; &amp;",
                  "declname_html": "value"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "line": "307",
                "column": "3",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "bodystart": "307",
                "bodyend": "309"
              },
              "definition": {
                "simple_html": "template &lt;typename AdapterT = Adapter&gt;\nadapt_detail::if_is_empty_adapter&lt;AdapterT, type::native_type&lt;Tag&gt;&gt; operator()(\n    const type::native_type&lt;Tag&gt;&amp; value) const",
                "simple_raw": "template <typename AdapterT = Adapter>\nadapt_detail::if_is_empty_adapter<AdapterT, type::native_type<Tag>> operator()(\n    const type::native_type<Tag>& value) const",
                "detailed_html": "template &lt;typename AdapterT = Adapter&gt;\ninline adapt_detail::if_is_empty_adapter&lt;AdapterT, type::native_type&lt;Tag&gt;&gt;\noperator()(const type::native_type&lt;Tag&gt;&amp; value) const",
                "detailed_raw": "template <typename AdapterT = Adapter>\ninline adapt_detail::if_is_empty_adapter<AdapterT, type::native_type<Tag>>\noperator()(const type::native_type<Tag>& value) const",
                "original_definition_html": "adapt_detail::if_is_empty_adapter&lt; AdapterT, type::native_type&lt; Tag &gt; &gt; apache::thrift::op::detail::IsEmpty&lt; adapted_field_tag&lt; Adapter, UTag, Struct, FieldId &gt; &gt;::operator()",
                "original_argsstring_html": "(const type::native_type&lt; Tag &gt; &amp;value) const"
              },
              "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01adapted__field__tag_3_01Adapter_00_01UTag_af4bd28c6cb5d1963019f0431992e269/operator.call",
              "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01adapted__field__tag_3_01Adapter_00_01UTag_af4bd28c6cb5d1963019f0431992e269/operator.call",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01adapted__field__tag_3_01Adapter_00_01UTag_af4bd28c6cb5d1963019f0431992e269",
              "compoundname_html": "apache::thrift::op::detail::IsEmpty::operator()"
            },
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01adapted__field__tag_3_01Adapter_00_01UTag_af4bd28c6cb5d1963019f0431992e269_1a695308401e77ee4f45864423f1b4128c",
              "prot": "public",
              "static": "no",
              "constexpr": "yes",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename AdapterT",
                  "defval_html": "Adapter"
                }
              ],
              "type_html": "adapt_detail::if_not_is_empty_adapter&lt; AdapterT, type::native_type&lt; <code>Tag</code> &gt; &gt;",
              "definition_html": "adapt_detail:: if_not_is_empty_adapter&lt; AdapterT, type::native_type&lt; Tag &gt; &gt; apache::thrift::op::detail::IsEmpty&lt; adapted_field_tag&lt; Adapter, UTag, Struct, FieldId &gt; &gt;::operator()",
              "argsstring_html": "(const type::native_type&lt; Tag &gt; &amp;value) const",
              "name_html": "operator()",
              "qualifiedname_html": "apache::thrift::op::detail::IsEmpty&lt; adapted_field_tag&lt; Adapter, UTag, Struct, FieldId &gt; &gt;::operator()",
              "param": [
                {
                  "type_html": "const type::native_type&lt; <code>Tag</code> &gt; &amp;",
                  "declname_html": "value"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "line": "314",
                "column": "7",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "bodystart": "314",
                "bodyend": "316"
              },
              "definition": {
                "simple_html": "template &lt;typename AdapterT = Adapter&gt;\nadapt_detail::if_not_is_empty_adapter&lt;AdapterT, type::native_type&lt;Tag&gt;&gt;\noperator()(const type::native_type&lt;Tag&gt;&amp; value) const",
                "simple_raw": "template <typename AdapterT = Adapter>\nadapt_detail::if_not_is_empty_adapter<AdapterT, type::native_type<Tag>>\noperator()(const type::native_type<Tag>& value) const",
                "detailed_html": "template &lt;typename AdapterT = Adapter&gt;\ninline adapt_detail::if_not_is_empty_adapter&lt;AdapterT, type::native_type&lt;Tag&gt;&gt;\noperator()(const type::native_type&lt;Tag&gt;&amp; value) const",
                "detailed_raw": "template <typename AdapterT = Adapter>\ninline adapt_detail::if_not_is_empty_adapter<AdapterT, type::native_type<Tag>>\noperator()(const type::native_type<Tag>& value) const",
                "original_definition_html": "adapt_detail:: if_not_is_empty_adapter&lt; AdapterT, type::native_type&lt; Tag &gt; &gt; apache::thrift::op::detail::IsEmpty&lt; adapted_field_tag&lt; Adapter, UTag, Struct, FieldId &gt; &gt;::operator()",
                "original_argsstring_html": "(const type::native_type&lt; Tag &gt; &amp;value) const"
              },
              "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01adapted__field__tag_3_01Adapter_00_01UTag_af4bd28c6cb5d1963019f0431992e269/operator.call",
              "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01adapted__field__tag_3_01Adapter_00_01UTag_af4bd28c6cb5d1963019f0431992e269/operator.call",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_3_01adapted__field__tag_3_01Adapter_00_01UTag_af4bd28c6cb5d1963019f0431992e269",
              "compoundname_html": "apache::thrift::op::detail::IsEmpty::operator()"
            }
          ],
          "filepath": "f/struct/apache/thrift/op/detail/IsEmpty/operator.call",
          "minprot": "public",
          "displayname_html": "operator()",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/struct/apache/thrift/op/detail/IsEmpty/operator.call",
          "refid": "/ref/cpp/f/struct/apache/thrift/op/detail/IsEmpty/operator.call",
          "parent_links": [
            {
              "text_html": "IsEmpty",
              "href": "/ref/cpp/struct/apache/thrift/op/detail/IsEmpty"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "empty",
          "compoundname_html": "apache::thrift::op::detail::IsEmpty::empty",
          "functions": [
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_1a02a63b63489901604c23c4b2b5c72659",
              "prot": "private",
              "static": "yes",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename T"
                }
              ],
              "type_html": "bool",
              "definition_html": "static bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
              "argsstring_html": "(const T &amp;val, type::structured_c)",
              "name_html": "empty",
              "qualifiedname_html": "apache::thrift::op::detail::IsEmpty::empty",
              "param": [
                {
                  "type_html": "const T &amp;",
                  "declname_html": "val"
                },
                {
                  "type_html": "type::structured_c"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "line": "109",
                "column": "15",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "bodystart": "109",
                "bodyend": "111"
              },
              "definition": {
                "simple_html": "template &lt;typename T&gt;\nstatic bool empty(const T&amp; val, type::structured_c)",
                "simple_raw": "template <typename T>\nstatic bool empty(const T& val, type::structured_c)",
                "detailed_html": "template &lt;typename T&gt;\nprivate inline static bool empty(const T&amp; val, type::structured_c)",
                "detailed_raw": "template <typename T>\nprivate inline static bool empty(const T& val, type::structured_c)",
                "original_definition_html": "static bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
                "original_argsstring_html": "(const T &amp;val, type::structured_c)"
              },
              "filepath": "fns/struct/apache/thrift/op/detail/IsEmpty/empty",
              "href": "/ref/cpp/fns/struct/apache/thrift/op/detail/IsEmpty/empty",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty",
              "compoundname_html": "apache::thrift::op::detail::IsEmpty::empty"
            },
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_1a209c85f540854f788fad4fa51996cce0",
              "prot": "private",
              "static": "yes",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename T"
                }
              ],
              "type_html": "bool",
              "definition_html": "static bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
              "argsstring_html": "(const T &amp;val, type::container_c)",
              "name_html": "empty",
              "qualifiedname_html": "apache::thrift::op::detail::IsEmpty::empty",
              "param": [
                {
                  "type_html": "const T &amp;",
                  "declname_html": "val"
                },
                {
                  "type_html": "type::container_c"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "line": "113",
                "column": "15",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "bodystart": "113",
                "bodyend": "115"
              },
              "definition": {
                "simple_html": "template &lt;typename T&gt;\nstatic bool empty(const T&amp; val, type::container_c)",
                "simple_raw": "template <typename T>\nstatic bool empty(const T& val, type::container_c)",
                "detailed_html": "template &lt;typename T&gt;\nprivate inline static bool empty(const T&amp; val, type::container_c)",
                "detailed_raw": "template <typename T>\nprivate inline static bool empty(const T& val, type::container_c)",
                "original_definition_html": "static bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
                "original_argsstring_html": "(const T &amp;val, type::container_c)"
              },
              "filepath": "fns/struct/apache/thrift/op/detail/IsEmpty/empty",
              "href": "/ref/cpp/fns/struct/apache/thrift/op/detail/IsEmpty/empty",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty",
              "compoundname_html": "apache::thrift::op::detail::IsEmpty::empty"
            },
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_1aa86e61c5bc3c836d66f0a01c52e55285",
              "prot": "private",
              "static": "yes",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename T"
                }
              ],
              "type_html": "bool",
              "definition_html": "static bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
              "argsstring_html": "(const T &amp;val, type::string_c)",
              "name_html": "empty",
              "qualifiedname_html": "apache::thrift::op::detail::IsEmpty::empty",
              "param": [
                {
                  "type_html": "const T &amp;",
                  "declname_html": "val"
                },
                {
                  "type_html": "type::string_c"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "line": "117",
                "column": "15",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "bodystart": "117",
                "bodyend": "119"
              },
              "definition": {
                "simple_html": "template &lt;typename T&gt;\nstatic bool empty(const T&amp; val, type::string_c)",
                "simple_raw": "template <typename T>\nstatic bool empty(const T& val, type::string_c)",
                "detailed_html": "template &lt;typename T&gt;\nprivate inline static bool empty(const T&amp; val, type::string_c)",
                "detailed_raw": "template <typename T>\nprivate inline static bool empty(const T& val, type::string_c)",
                "original_definition_html": "static bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
                "original_argsstring_html": "(const T &amp;val, type::string_c)"
              },
              "filepath": "fns/struct/apache/thrift/op/detail/IsEmpty/empty",
              "href": "/ref/cpp/fns/struct/apache/thrift/op/detail/IsEmpty/empty",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty",
              "compoundname_html": "apache::thrift::op::detail::IsEmpty::empty"
            },
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_1a0db8f94adee3af6019b691be053a7344",
              "prot": "private",
              "static": "yes",
              "constexpr": "yes",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename T"
                }
              ],
              "type_html": "bool",
              "definition_html": "static constexpr bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
              "argsstring_html": "(const T &amp;val, type::all_c)",
              "name_html": "empty",
              "qualifiedname_html": "apache::thrift::op::detail::IsEmpty::empty",
              "param": [
                {
                  "type_html": "const T &amp;",
                  "declname_html": "val"
                },
                {
                  "type_html": "type::all_c"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "line": "121",
                "column": "25",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "bodystart": "121",
                "bodyend": "123"
              },
              "definition": {
                "simple_html": "template &lt;typename T&gt;\nstatic bool empty(const T&amp; val, type::all_c)",
                "simple_raw": "template <typename T>\nstatic bool empty(const T& val, type::all_c)",
                "detailed_html": "template &lt;typename T&gt;\nprivate inline static bool empty(const T&amp; val, type::all_c)",
                "detailed_raw": "template <typename T>\nprivate inline static bool empty(const T& val, type::all_c)",
                "original_definition_html": "static constexpr bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
                "original_argsstring_html": "(const T &amp;val, type::all_c)"
              },
              "filepath": "fns/struct/apache/thrift/op/detail/IsEmpty/empty",
              "href": "/ref/cpp/fns/struct/apache/thrift/op/detail/IsEmpty/empty",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty",
              "compoundname_html": "apache::thrift::op::detail::IsEmpty::empty"
            },
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty_1a10fa07643a241b6dcf701046e7a62033",
              "prot": "private",
              "static": "yes",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename ATag"
                }
              ],
              "type_html": "bool",
              "definition_html": "static bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
              "argsstring_html": "(const std::unique_ptr&lt; folly::IOBuf &gt; &amp;val, ATag tag)",
              "name_html": "empty",
              "qualifiedname_html": "apache::thrift::op::detail::IsEmpty::empty",
              "param": [
                {
                  "type_html": "const std::unique_ptr&lt; folly::IOBuf &gt; &amp;",
                  "declname_html": "val"
                },
                {
                  "type_html": "ATag",
                  "declname_html": "tag"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "line": "125",
                "column": "15",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Clear.h",
                "bodystart": "125",
                "bodyend": "127"
              },
              "definition": {
                "simple_html": "template &lt;typename ATag&gt;\nstatic bool empty(const std::unique_ptr&lt;folly::IOBuf&gt;&amp; val, ATag tag)",
                "simple_raw": "template <typename ATag>\nstatic bool empty(const std::unique_ptr<folly::IOBuf>& val, ATag tag)",
                "detailed_html": "template &lt;typename ATag&gt;\nprivate inline static bool empty(\n    const std::unique_ptr&lt;folly::IOBuf&gt;&amp; val, ATag tag)",
                "detailed_raw": "template <typename ATag>\nprivate inline static bool empty(\n    const std::unique_ptr<folly::IOBuf>& val, ATag tag)",
                "original_definition_html": "static bool apache::thrift::op::detail::IsEmpty&lt; Tag &gt;::empty",
                "original_argsstring_html": "(const std::unique_ptr&lt; folly::IOBuf &gt; &amp;val, ATag tag)"
              },
              "filepath": "fns/struct/apache/thrift/op/detail/IsEmpty/empty",
              "href": "/ref/cpp/fns/struct/apache/thrift/op/detail/IsEmpty/empty",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1IsEmpty",
              "compoundname_html": "apache::thrift::op::detail::IsEmpty::empty"
            }
          ],
          "filepath": "f/struct/apache/thrift/op/detail/IsEmpty/empty",
          "minprot": "private",
          "displayname_html": "empty",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/struct/apache/thrift/op/detail/IsEmpty/empty",
          "refid": "/ref/cpp/f/struct/apache/thrift/op/detail/IsEmpty/empty",
          "parent_links": [
            {
              "text_html": "IsEmpty",
              "href": "/ref/cpp/struct/apache/thrift/op/detail/IsEmpty"
            }
          ]
        }
      ]
    }
  ],
  "free_overloadgroups": []
}