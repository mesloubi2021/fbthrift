// Autogenerated by Thrift for thrift/compiler/test/fixtures/basic/src/module.thrift
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//  @generated

package module


import (
    thrift "github.com/facebook/fbthrift/thrift/lib/go/thrift/types"
)

// (needed to ensure safety because of naive import list construction)
var _ = thrift.ZERO

// Premade codec specs
var (
    premadeCodecTypeSpec_module_MyEnum = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyEnum",
            CodecEnumSpec: &thrift.CodecEnumSpec{
    ScopedName: "module.MyEnum",
},

        }
    }()
    premadeCodecTypeSpec_module_HackEnum = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.HackEnum",
            CodecEnumSpec: &thrift.CodecEnumSpec{
    ScopedName: "module.HackEnum",
},

        }
    }()
    premadeCodecTypeSpec_i64 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "i64",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_I64,
},

        }
    }()
    premadeCodecTypeSpec_string = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "string",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_STRING,
},

        }
    }()
    premadeCodecTypeSpec_module_MyDataItem = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyDataItem",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.MyDataItem",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewMyDataItem() },
},

        }
    }()
    premadeCodecTypeSpec_module_MyDataItemAlias = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyDataItemAlias",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.MyDataItemAlias",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_MyDataItem,
},

        }
    }()
    premadeCodecTypeSpec_bool = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "bool",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_BOOL,
},

        }
    }()
    premadeCodecTypeSpec_float = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "float",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_FLOAT,
},

        }
    }()
    premadeCodecTypeSpec_set_float = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "set<float>",
            CodecSetSpec: &thrift.CodecSetSpec{
    ElementWireType: thrift.FLOAT,
	ElementTypeSpec: premadeCodecTypeSpec_float,
},

        }
    }()
    premadeCodecTypeSpec_module_MyStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyStruct",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.MyStruct",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewMyStruct() },
},

        }
    }()
    premadeCodecTypeSpec_i32 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "i32",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_I32,
},

        }
    }()
    premadeCodecTypeSpec_list_i32 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "list<i32>",
            CodecListSpec: &thrift.CodecListSpec{
    ElementWireType: thrift.I32,
	ElementTypeSpec: premadeCodecTypeSpec_i32,
},

        }
    }()
    premadeCodecTypeSpec_set_string = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "set<string>",
            CodecSetSpec: &thrift.CodecSetSpec{
    ElementWireType: thrift.STRING,
	ElementTypeSpec: premadeCodecTypeSpec_string,
},

        }
    }()
    premadeCodecTypeSpec_map_string_i64 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "map<string, i64>",
            CodecMapSpec: &thrift.CodecMapSpec{
	KeyTypeSpec:   premadeCodecTypeSpec_string,
	ValueTypeSpec: premadeCodecTypeSpec_i64,
    KeyWireType:   thrift.STRING,
	ValueWireType: thrift.I64,
},

        }
    }()
    premadeCodecTypeSpec_module_Containers = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.Containers",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.Containers",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewContainers() },
},

        }
    }()
    premadeCodecTypeSpec_module_MyEnumAlias = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyEnumAlias",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.MyEnumAlias",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_MyEnum,
},

        }
    }()
    premadeCodecTypeSpec_module_MyUnion = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyUnion",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.MyUnion",
    IsUnion:    true,
    NewFunc:    func() thrift.Struct { return NewMyUnion() },
},

        }
    }()
    premadeCodecTypeSpec_module_ReservedKeyword = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.ReservedKeyword",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.ReservedKeyword",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewReservedKeyword() },
},

        }
    }()
    premadeCodecTypeSpec_module_UnionToBeRenamed = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.UnionToBeRenamed",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.UnionToBeRenamed",
    IsUnion:    true,
    NewFunc:    func() thrift.Struct { return NewUnionToBeRenamed() },
},

        }
    }()
    premadeCodecTypeSpec_module_MyException = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyException",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.MyException",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewMyException() },
},

        }
    }()
    premadeCodecTypeSpec_module_MyExceptionWithMessage = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyExceptionWithMessage",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.MyExceptionWithMessage",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewMyExceptionWithMessage() },
},

        }
    }()
    premadeCodecTypeSpec_void = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "void",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_VOID,
},

        }
    }()
    premadeCodecTypeSpec_binary = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "binary",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_BINARY,
},

        }
    }()
)

// Premade struct specs
var (
    premadeStructSpec_MyStruct = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "MyStruct",
    ScopedName:           "module.MyStruct",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "MyIntField",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.STRING,
            Name:                 "MyStringField",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },        {
            ID:                   3,
            WireType:             thrift.STRUCT,
            Name:                 "MyDataField",
            ReflectIndex:         2,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_MyDataItemAlias,
            MustBeSetToSerialize: true,
        },        {
            ID:                   4,
            WireType:             thrift.I32,
            Name:                 "myEnum",
            ReflectIndex:         3,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_MyEnum,
            MustBeSetToSerialize: false,
        },        {
            ID:                   5,
            WireType:             thrift.BOOL,
            Name:                 "oneway",
            ReflectIndex:         4,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_bool,
            MustBeSetToSerialize: false,
        },        {
            ID:                   6,
            WireType:             thrift.BOOL,
            Name:                 "readonly",
            ReflectIndex:         5,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_bool,
            MustBeSetToSerialize: false,
        },        {
            ID:                   7,
            WireType:             thrift.BOOL,
            Name:                 "idempotent",
            ReflectIndex:         6,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_bool,
            MustBeSetToSerialize: false,
        },        {
            ID:                   8,
            WireType:             thrift.SET,
            Name:                 "floatSet",
            ReflectIndex:         7,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_set_float,
            MustBeSetToSerialize: false,
        },        {
            ID:                   9,
            WireType:             thrift.STRING,
            Name:                 "no_hack_codegen_field",
            ReflectIndex:         8,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
        3: 2,
        4: 3,
        5: 4,
        6: 5,
        7: 6,
        8: 7,
        9: 8,
    },
    FieldSpecNameToIndex: map[string]int{
        "MyIntField": 0,
        "MyStringField": 1,
        "MyDataField": 2,
        "myEnum": 3,
        "oneway": 4,
        "readonly": 5,
        "idempotent": 6,
        "floatSet": 7,
        "no_hack_codegen_field": 8,
    },
}
    }()
    premadeStructSpec_Containers = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "Containers",
    ScopedName:           "module.Containers",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.LIST,
            Name:                 "I32List",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_list_i32,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.SET,
            Name:                 "StringSet",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_set_string,
            MustBeSetToSerialize: false,
        },        {
            ID:                   3,
            WireType:             thrift.MAP,
            Name:                 "StringToI64Map",
            ReflectIndex:         2,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_map_string_i64,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
        3: 2,
    },
    FieldSpecNameToIndex: map[string]int{
        "I32List": 0,
        "StringSet": 1,
        "StringToI64Map": 2,
    },
}
    }()
    premadeStructSpec_MyDataItem = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "MyDataItem",
    ScopedName:           "module.MyDataItem",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_MyUnion = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "MyUnion",
    ScopedName:           "module.MyUnion",
    IsUnion:              true,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I32,
            Name:                 "myEnum",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_MyEnumAlias,
            MustBeSetToSerialize: true,
        },        {
            ID:                   2,
            WireType:             thrift.STRUCT,
            Name:                 "myStruct",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_MyStruct,
            MustBeSetToSerialize: true,
        },        {
            ID:                   3,
            WireType:             thrift.STRUCT,
            Name:                 "myDataItem",
            ReflectIndex:         2,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_MyDataItem,
            MustBeSetToSerialize: true,
        },        {
            ID:                   4,
            WireType:             thrift.SET,
            Name:                 "floatSet",
            ReflectIndex:         3,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_set_float,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
        3: 2,
        4: 3,
    },
    FieldSpecNameToIndex: map[string]int{
        "myEnum": 0,
        "myStruct": 1,
        "myDataItem": 2,
        "floatSet": 3,
    },
}
    }()
    premadeStructSpec_MyException = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "MyException",
    ScopedName:           "module.MyException",
    IsUnion:              false,
    IsException:          true,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "MyIntField",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.STRING,
            Name:                 "MyStringField",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },        {
            ID:                   3,
            WireType:             thrift.STRUCT,
            Name:                 "myStruct",
            ReflectIndex:         2,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_MyStruct,
            MustBeSetToSerialize: true,
        },        {
            ID:                   4,
            WireType:             thrift.STRUCT,
            Name:                 "myUnion",
            ReflectIndex:         3,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_MyUnion,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
        3: 2,
        4: 3,
    },
    FieldSpecNameToIndex: map[string]int{
        "MyIntField": 0,
        "MyStringField": 1,
        "myStruct": 2,
        "myUnion": 3,
    },
}
    }()
    premadeStructSpec_MyExceptionWithMessage = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "MyExceptionWithMessage",
    ScopedName:           "module.MyExceptionWithMessage",
    IsUnion:              false,
    IsException:          true,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "MyIntField",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.STRING,
            Name:                 "MyStringField",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },        {
            ID:                   3,
            WireType:             thrift.STRUCT,
            Name:                 "myStruct",
            ReflectIndex:         2,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_MyStruct,
            MustBeSetToSerialize: true,
        },        {
            ID:                   4,
            WireType:             thrift.STRUCT,
            Name:                 "myUnion",
            ReflectIndex:         3,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_MyUnion,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
        3: 2,
        4: 3,
    },
    FieldSpecNameToIndex: map[string]int{
        "MyIntField": 0,
        "MyStringField": 1,
        "myStruct": 2,
        "myUnion": 3,
    },
}
    }()
    premadeStructSpec_ReservedKeyword = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "ReservedKeyword",
    ScopedName:           "module.ReservedKeyword",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I32,
            Name:                 "reserved_field",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i32,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "reserved_field": 0,
    },
}
    }()
    premadeStructSpec_UnionToBeRenamed = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "UnionToBeRenamed",
    ScopedName:           "module.UnionToBeRenamed",
    IsUnion:              true,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I32,
            Name:                 "reserved_field",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i32,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "reserved_field": 0,
    },
}
    }()
    premadeStructSpec_reqFooServiceSimpleRPC = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqFooServiceSimpleRPC",
    ScopedName:           "module.reqFooServiceSimpleRPC",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_respFooServiceSimpleRPC = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respFooServiceSimpleRPC",
    ScopedName:           "module.respFooServiceSimpleRPC",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_reqFB303ServiceSimpleRPC = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqFB303ServiceSimpleRPC",
    ScopedName:           "module.reqFB303ServiceSimpleRPC",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I32,
            Name:                 "int_parameter",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i32,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "int_parameter": 0,
    },
}
    }()
    premadeStructSpec_respFB303ServiceSimpleRPC = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respFB303ServiceSimpleRPC",
    ScopedName:           "module.respFB303ServiceSimpleRPC",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   0,
            WireType:             thrift.STRUCT,
            Name:                 "success",
            ReflectIndex:         0,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_module_ReservedKeyword,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        0: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "success": 0,
    },
}
    }()
    premadeStructSpec_reqMyServicePing = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServicePing",
    ScopedName:           "module.reqMyServicePing",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_respMyServicePing = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServicePing",
    ScopedName:           "module.respMyServicePing",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_reqMyServiceGetRandomData = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServiceGetRandomData",
    ScopedName:           "module.reqMyServiceGetRandomData",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_respMyServiceGetRandomData = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServiceGetRandomData",
    ScopedName:           "module.respMyServiceGetRandomData",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   0,
            WireType:             thrift.STRING,
            Name:                 "success",
            ReflectIndex:         0,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        0: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "success": 0,
    },
}
    }()
    premadeStructSpec_reqMyServiceSink = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServiceSink",
    ScopedName:           "module.reqMyServiceSink",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "sink",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "sink": 0,
    },
}
    }()
    premadeStructSpec_respMyServiceSink = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServiceSink",
    ScopedName:           "module.respMyServiceSink",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_reqMyServicePutDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServicePutDataById",
    ScopedName:           "module.reqMyServicePutDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "id",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.STRING,
            Name:                 "data",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
    },
    FieldSpecNameToIndex: map[string]int{
        "id": 0,
        "data": 1,
    },
}
    }()
    premadeStructSpec_respMyServicePutDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServicePutDataById",
    ScopedName:           "module.respMyServicePutDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_reqMyServiceHasDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServiceHasDataById",
    ScopedName:           "module.reqMyServiceHasDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "id",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "id": 0,
    },
}
    }()
    premadeStructSpec_respMyServiceHasDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServiceHasDataById",
    ScopedName:           "module.respMyServiceHasDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   0,
            WireType:             thrift.BOOL,
            Name:                 "success",
            ReflectIndex:         0,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_bool,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        0: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "success": 0,
    },
}
    }()
    premadeStructSpec_reqMyServiceGetDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServiceGetDataById",
    ScopedName:           "module.reqMyServiceGetDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "id",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "id": 0,
    },
}
    }()
    premadeStructSpec_respMyServiceGetDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServiceGetDataById",
    ScopedName:           "module.respMyServiceGetDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   0,
            WireType:             thrift.STRING,
            Name:                 "success",
            ReflectIndex:         0,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        0: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "success": 0,
    },
}
    }()
    premadeStructSpec_reqMyServiceDeleteDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServiceDeleteDataById",
    ScopedName:           "module.reqMyServiceDeleteDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "id",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "id": 0,
    },
}
    }()
    premadeStructSpec_respMyServiceDeleteDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServiceDeleteDataById",
    ScopedName:           "module.respMyServiceDeleteDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_reqMyServiceLobDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServiceLobDataById",
    ScopedName:           "module.reqMyServiceLobDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "id",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.STRING,
            Name:                 "data",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
    },
    FieldSpecNameToIndex: map[string]int{
        "id": 0,
        "data": 1,
    },
}
    }()
    premadeStructSpec_respMyServiceLobDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServiceLobDataById",
    ScopedName:           "module.respMyServiceLobDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_reqMyServiceInvalidReturnForHack = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServiceInvalidReturnForHack",
    ScopedName:           "module.reqMyServiceInvalidReturnForHack",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_respMyServiceInvalidReturnForHack = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServiceInvalidReturnForHack",
    ScopedName:           "module.respMyServiceInvalidReturnForHack",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   0,
            WireType:             thrift.SET,
            Name:                 "success",
            ReflectIndex:         0,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_set_float,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        0: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "success": 0,
    },
}
    }()
    premadeStructSpec_reqMyServiceRpcSkippedCodegen = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServiceRpcSkippedCodegen",
    ScopedName:           "module.reqMyServiceRpcSkippedCodegen",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_respMyServiceRpcSkippedCodegen = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServiceRpcSkippedCodegen",
    ScopedName:           "module.respMyServiceRpcSkippedCodegen",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_reqDbMixedStackArgumentsGetDataByKey0 = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqDbMixedStackArgumentsGetDataByKey0",
    ScopedName:           "module.reqDbMixedStackArgumentsGetDataByKey0",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRING,
            Name:                 "key",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "key": 0,
    },
}
    }()
    premadeStructSpec_respDbMixedStackArgumentsGetDataByKey0 = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respDbMixedStackArgumentsGetDataByKey0",
    ScopedName:           "module.respDbMixedStackArgumentsGetDataByKey0",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   0,
            WireType:             thrift.STRING,
            Name:                 "success",
            ReflectIndex:         0,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_binary,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        0: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "success": 0,
    },
}
    }()
    premadeStructSpec_reqDbMixedStackArgumentsGetDataByKey1 = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqDbMixedStackArgumentsGetDataByKey1",
    ScopedName:           "module.reqDbMixedStackArgumentsGetDataByKey1",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRING,
            Name:                 "key",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "key": 0,
    },
}
    }()
    premadeStructSpec_respDbMixedStackArgumentsGetDataByKey1 = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respDbMixedStackArgumentsGetDataByKey1",
    ScopedName:           "module.respDbMixedStackArgumentsGetDataByKey1",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   0,
            WireType:             thrift.STRING,
            Name:                 "success",
            ReflectIndex:         0,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_binary,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        0: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "success": 0,
    },
}
    }()
)

// Premade slice of all struct specs
var premadeStructSpecs = func() []*thrift.StructSpec {
    fbthriftResults := make([]*thrift.StructSpec, 0)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_MyStruct)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_Containers)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_MyDataItem)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_MyUnion)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_MyException)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_MyExceptionWithMessage)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_ReservedKeyword)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_UnionToBeRenamed)
    return fbthriftResults
}()

var premadeCodecSpecsMap = func() map[string]*thrift.TypeSpec {
    fbthriftTypeSpecsMap := make(map[string]*thrift.TypeSpec)
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyEnum.FullName] = premadeCodecTypeSpec_module_MyEnum
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_HackEnum.FullName] = premadeCodecTypeSpec_module_HackEnum
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_i64.FullName] = premadeCodecTypeSpec_i64
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_string.FullName] = premadeCodecTypeSpec_string
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyDataItem.FullName] = premadeCodecTypeSpec_module_MyDataItem
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyDataItemAlias.FullName] = premadeCodecTypeSpec_module_MyDataItemAlias
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_bool.FullName] = premadeCodecTypeSpec_bool
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_float.FullName] = premadeCodecTypeSpec_float
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyStruct.FullName] = premadeCodecTypeSpec_module_MyStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_i32.FullName] = premadeCodecTypeSpec_i32
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_Containers.FullName] = premadeCodecTypeSpec_module_Containers
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyEnumAlias.FullName] = premadeCodecTypeSpec_module_MyEnumAlias
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyUnion.FullName] = premadeCodecTypeSpec_module_MyUnion
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_ReservedKeyword.FullName] = premadeCodecTypeSpec_module_ReservedKeyword
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_UnionToBeRenamed.FullName] = premadeCodecTypeSpec_module_UnionToBeRenamed
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyException.FullName] = premadeCodecTypeSpec_module_MyException
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyExceptionWithMessage.FullName] = premadeCodecTypeSpec_module_MyExceptionWithMessage
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_void.FullName] = premadeCodecTypeSpec_void
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_binary.FullName] = premadeCodecTypeSpec_binary
    return fbthriftTypeSpecsMap
}()

// GetMetadataThriftType (INTERNAL USE ONLY).
// Returns metadata TypeSpec for a given full type name.
func GetCodecTypeSpec(fullName string) *thrift.TypeSpec {
    return premadeCodecSpecsMap[fullName]
}
