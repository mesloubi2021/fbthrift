
#
# Autogenerated by Thrift for thrift/compiler/test/fixtures/basic/src/module.thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

cimport test.fixtures.basic.module.types as _fbthrift_ctypes


cdef shared_ptr[_fbthrift_cbindings.cMyStruct] MyStruct_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.MyStruct?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE

cdef object MyStruct_from_cpp(const shared_ptr[_fbthrift_cbindings.cMyStruct]& c_struct):
    return _fbthrift_ctypes.MyStruct._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)

cdef shared_ptr[_fbthrift_cbindings.cContainers] Containers_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.Containers?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE

cdef object Containers_from_cpp(const shared_ptr[_fbthrift_cbindings.cContainers]& c_struct):
    return _fbthrift_ctypes.Containers._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)

cdef shared_ptr[_fbthrift_cbindings.cMyDataItem] MyDataItem_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.MyDataItem?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE

cdef object MyDataItem_from_cpp(const shared_ptr[_fbthrift_cbindings.cMyDataItem]& c_struct):
    return _fbthrift_ctypes.MyDataItem._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)

cdef shared_ptr[_fbthrift_cbindings.cMyUnion] MyUnion_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.MyUnion?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE

cdef object MyUnion_from_cpp(const shared_ptr[_fbthrift_cbindings.cMyUnion]& c_struct):
    return _fbthrift_ctypes.MyUnion._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)

cdef shared_ptr[_fbthrift_cbindings.cMyException] MyException_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.MyException?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE

cdef object MyException_from_cpp(const shared_ptr[_fbthrift_cbindings.cMyException]& c_struct):
    return _fbthrift_ctypes.MyException._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)

cdef shared_ptr[_fbthrift_cbindings.cMyExceptionWithMessage] MyExceptionWithMessage_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.MyExceptionWithMessage?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE

cdef object MyExceptionWithMessage_from_cpp(const shared_ptr[_fbthrift_cbindings.cMyExceptionWithMessage]& c_struct):
    return _fbthrift_ctypes.MyExceptionWithMessage._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)

cdef shared_ptr[_fbthrift_cbindings.cReservedKeyword] ReservedKeyword_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.ReservedKeyword?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE

cdef object ReservedKeyword_from_cpp(const shared_ptr[_fbthrift_cbindings.cReservedKeyword]& c_struct):
    return _fbthrift_ctypes.ReservedKeyword._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)

cdef shared_ptr[_fbthrift_cbindings.cUnionToBeRenamed] UnionToBeRenamed_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.UnionToBeRenamed?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE

cdef object UnionToBeRenamed_from_cpp(const shared_ptr[_fbthrift_cbindings.cUnionToBeRenamed]& c_struct):
    return _fbthrift_ctypes.UnionToBeRenamed._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)


