#
# Autogenerated by Thrift for thrift/compiler/test/fixtures/basic/src/module.thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

from libc.stdint cimport (
    int8_t as cint8_t,
    int16_t as cint16_t,
    int32_t as cint32_t,
    int64_t as cint64_t,
    uint16_t as cuint16_t,
    uint32_t as cuint32_t,
)
from libcpp.string cimport string
from libcpp cimport bool as cbool, nullptr, nullptr_t
from cpython cimport bool as pbool
from libcpp.memory cimport shared_ptr, unique_ptr
from libcpp.vector cimport vector
from libcpp.set cimport set as cset
from libcpp.map cimport map as cmap, pair as cpair
from libcpp.unordered_map cimport unordered_map as cumap
cimport folly.iobuf as _fbthrift_iobuf
from thrift.python.exceptions cimport cTException
from thrift.py3.types cimport (
    bstring,
    field_ref as __field_ref,
    optional_field_ref as __optional_field_ref,
    required_field_ref as __required_field_ref,
    terse_field_ref as __terse_field_ref,
    union_field_ref as __union_field_ref,
    get_union_field_value as __get_union_field_value,
)
from thrift.python.common cimport cThriftMetadata as __fbthrift_cThriftMetadata
cimport thrift.py3.exceptions
cimport thrift.py3.types
from libc.stdint cimport int64_t
from thrift.python.common cimport (
    RpcOptions as __RpcOptions,
    MetadataBox as __MetadataBox,
)
from folly.optional cimport cOptional as __cOptional


cimport test.fixtures.basic.module.types as _fbthrift_types
cimport test.fixtures.basic.module.types_fields as _fbthrift_types_fields
cimport test.fixtures.basic.module.cbindings as _test_fixtures_basic_module_cbindings

cdef extern from "thrift/compiler/test/fixtures/basic/gen-py3/module/types.h":
  pass



cdef class MyStruct(thrift.py3.types.Struct):
    cdef shared_ptr[_test_fixtures_basic_module_cbindings.cMyStruct] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef _fbthrift_types_fields.__MyStruct_FieldsSetter _fields_setter
    cdef inline object MyIntField_impl(self)
    cdef inline object MyStringField_impl(self)
    cdef inline object MyDataField_impl(self)
    cdef inline object myEnum_impl(self)
    cdef inline object oneway_impl(self)
    cdef inline object readonly_impl(self)
    cdef inline object idempotent_impl(self)
    cdef inline object floatSet_impl(self)
    cdef inline object no_hack_codegen_field_impl(self)
    cdef MyDataItem __fbthrift_cached_MyDataField
    cdef object __fbthrift_cached_myEnum
    cdef object __fbthrift_cached_floatSet

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[_test_fixtures_basic_module_cbindings.cMyStruct])



cdef class Containers(thrift.py3.types.Struct):
    cdef shared_ptr[_test_fixtures_basic_module_cbindings.cContainers] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef _fbthrift_types_fields.__Containers_FieldsSetter _fields_setter
    cdef inline object I32List_impl(self)
    cdef inline object StringSet_impl(self)
    cdef inline object StringToI64Map_impl(self)
    cdef object __fbthrift_cached_I32List
    cdef object __fbthrift_cached_StringSet
    cdef object __fbthrift_cached_StringToI64Map

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[_test_fixtures_basic_module_cbindings.cContainers])



cdef class MyDataItem(thrift.py3.types.Struct):
    cdef shared_ptr[_test_fixtures_basic_module_cbindings.cMyDataItem] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef _fbthrift_types_fields.__MyDataItem_FieldsSetter _fields_setter

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[_test_fixtures_basic_module_cbindings.cMyDataItem])



cdef class MyUnion(thrift.py3.types.Union):
    cdef shared_ptr[_test_fixtures_basic_module_cbindings.cMyUnion] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef int64_t type_int
    cdef object py_type
    cdef object py_value
    cdef _initialize_py(MyUnion self)

    @staticmethod
    cdef unique_ptr[_test_fixtures_basic_module_cbindings.cMyUnion] _make_instance(
        _test_fixtures_basic_module_cbindings.cMyUnion* base_instance,
        object myEnum,
        MyStruct myStruct,
        MyDataItem myDataItem,
        object floatSet
    ) except *

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[_test_fixtures_basic_module_cbindings.cMyUnion])



cdef class MyException(thrift.py3.exceptions.GeneratedError):
    cdef shared_ptr[_test_fixtures_basic_module_cbindings.cMyException] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef _fbthrift_types_fields.__MyException_FieldsSetter _fields_setter
    cdef inline object MyIntField_impl(self)
    cdef inline object MyStringField_impl(self)
    cdef inline object myStruct_impl(self)
    cdef inline object myUnion_impl(self)
    cdef MyStruct __fbthrift_cached_myStruct
    cdef MyUnion __fbthrift_cached_myUnion

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[_test_fixtures_basic_module_cbindings.cMyException])



cdef class MyExceptionWithMessage(thrift.py3.exceptions.GeneratedError):
    cdef shared_ptr[_test_fixtures_basic_module_cbindings.cMyExceptionWithMessage] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef _fbthrift_types_fields.__MyExceptionWithMessage_FieldsSetter _fields_setter
    cdef inline object MyIntField_impl(self)
    cdef inline object MyStringField_impl(self)
    cdef inline object myStruct_impl(self)
    cdef inline object myUnion_impl(self)
    cdef MyStruct __fbthrift_cached_myStruct
    cdef MyUnion __fbthrift_cached_myUnion

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[_test_fixtures_basic_module_cbindings.cMyExceptionWithMessage])



cdef class ReservedKeyword(thrift.py3.types.Struct):
    cdef shared_ptr[_test_fixtures_basic_module_cbindings.cReservedKeyword] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef _fbthrift_types_fields.__ReservedKeyword_FieldsSetter _fields_setter
    cdef inline object reserved_field_impl(self)

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[_test_fixtures_basic_module_cbindings.cReservedKeyword])



cdef class UnionToBeRenamed(thrift.py3.types.Union):
    cdef shared_ptr[_test_fixtures_basic_module_cbindings.cUnionToBeRenamed] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef int64_t type_int
    cdef object py_type
    cdef object py_value
    cdef _initialize_py(UnionToBeRenamed self)

    @staticmethod
    cdef unique_ptr[_test_fixtures_basic_module_cbindings.cUnionToBeRenamed] _make_instance(
        _test_fixtures_basic_module_cbindings.cUnionToBeRenamed* base_instance,
        object reserved_field
    ) except *

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[_test_fixtures_basic_module_cbindings.cUnionToBeRenamed])


cdef cset[float] Set__float__make_instance(object items) except *
cdef object Set__float__from_cpp(const cset[float]&) except *

cdef vector[cint32_t] List__i32__make_instance(object items) except *
cdef object List__i32__from_cpp(const vector[cint32_t]&) except *

cdef cset[string] Set__string__make_instance(object items) except *
cdef object Set__string__from_cpp(const cset[string]&) except *

cdef cmap[string,cint64_t] Map__string_i64__make_instance(object items) except *
cdef object Map__string_i64__from_cpp(const cmap[string,cint64_t]&) except *

cdef cmap[string,vector[cint32_t]] Map__string_List__i32__make_instance(object items) except *
cdef object Map__string_List__i32__from_cpp(const cmap[string,vector[cint32_t]]&) except *


