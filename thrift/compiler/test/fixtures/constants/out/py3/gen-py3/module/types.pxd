#
# Autogenerated by Thrift for thrift/compiler/test/fixtures/constants/src/module.thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

from libc.stdint cimport (
    int8_t as cint8_t,
    int16_t as cint16_t,
    int32_t as cint32_t,
    int64_t as cint64_t,
    uint16_t as cuint16_t,
    uint32_t as cuint32_t,
)
from libcpp.string cimport string
from libcpp cimport bool as cbool, nullptr, nullptr_t
from cpython cimport bool as pbool
from libcpp.memory cimport shared_ptr, unique_ptr
from libcpp.vector cimport vector
from libcpp.set cimport set as cset
from libcpp.map cimport map as cmap, pair as cpair
from libcpp.unordered_map cimport unordered_map as cumap
cimport folly.iobuf as _fbthrift_iobuf
from thrift.python.exceptions cimport cTException
from thrift.py3.types cimport (
    bstring,
    field_ref as __field_ref,
    optional_field_ref as __optional_field_ref,
    required_field_ref as __required_field_ref,
    terse_field_ref as __terse_field_ref,
    union_field_ref as __union_field_ref,
    get_union_field_value as __get_union_field_value,
)
from thrift.python.common cimport cThriftMetadata as __fbthrift_cThriftMetadata
cimport thrift.py3.exceptions
cimport thrift.py3.types
from libc.stdint cimport int64_t
from thrift.python.common cimport (
    RpcOptions as __RpcOptions,
    MetadataBox as __MetadataBox,
)
from folly.optional cimport cOptional as __cOptional


cimport module.types as _fbthrift_types
cimport module.types_fields as _fbthrift_types_fields
cimport module.cbindings as _module_cbindings

cdef extern from "thrift/compiler/test/fixtures/constants/gen-py3/module/types.h":
  pass



cdef class Internship(thrift.py3.types.Struct):
    cdef shared_ptr[_module_cbindings.cInternship] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef _fbthrift_types_fields.__Internship_FieldsSetter _fields_setter
    cdef inline object weeks_impl(self)
    cdef inline object title_impl(self)
    cdef inline object employer_impl(self)
    cdef inline object compensation_impl(self)
    cdef inline object school_impl(self)
    cdef object __fbthrift_cached_employer

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[_module_cbindings.cInternship])



cdef class Range(thrift.py3.types.Struct):
    cdef shared_ptr[_module_cbindings.cRange] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef _fbthrift_types_fields.__Range_FieldsSetter _fields_setter
    cdef inline object min_impl(self)
    cdef inline object max_impl(self)

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[_module_cbindings.cRange])



cdef class struct1(thrift.py3.types.Struct):
    cdef shared_ptr[_module_cbindings.cstruct1] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef _fbthrift_types_fields.__struct1_FieldsSetter _fields_setter
    cdef inline object a_impl(self)
    cdef inline object b_impl(self)

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[_module_cbindings.cstruct1])



cdef class struct2(thrift.py3.types.Struct):
    cdef shared_ptr[_module_cbindings.cstruct2] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef _fbthrift_types_fields.__struct2_FieldsSetter _fields_setter
    cdef inline object a_impl(self)
    cdef inline object b_impl(self)
    cdef inline object c_impl(self)
    cdef inline object d_impl(self)
    cdef struct1 __fbthrift_cached_c
    cdef object __fbthrift_cached_d

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[_module_cbindings.cstruct2])



cdef class struct3(thrift.py3.types.Struct):
    cdef shared_ptr[_module_cbindings.cstruct3] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef _fbthrift_types_fields.__struct3_FieldsSetter _fields_setter
    cdef inline object a_impl(self)
    cdef inline object b_impl(self)
    cdef inline object c_impl(self)
    cdef struct2 __fbthrift_cached_c

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[_module_cbindings.cstruct3])



cdef class struct4(thrift.py3.types.Struct):
    cdef shared_ptr[_module_cbindings.cstruct4] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef _fbthrift_types_fields.__struct4_FieldsSetter _fields_setter
    cdef inline object a_impl(self)
    cdef inline object b_impl(self)
    cdef inline object c_impl(self)

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[_module_cbindings.cstruct4])



cdef class union1(thrift.py3.types.Union):
    cdef shared_ptr[_module_cbindings.cunion1] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef int64_t type_int
    cdef object py_type
    cdef object py_value
    cdef _initialize_py(union1 self)

    @staticmethod
    cdef unique_ptr[_module_cbindings.cunion1] _make_instance(
        _module_cbindings.cunion1* base_instance,
        object i,
        object d
    ) except *

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[_module_cbindings.cunion1])



cdef class union2(thrift.py3.types.Union):
    cdef shared_ptr[_module_cbindings.cunion2] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef int64_t type_int
    cdef object py_type
    cdef object py_value
    cdef _initialize_py(union2 self)

    @staticmethod
    cdef unique_ptr[_module_cbindings.cunion2] _make_instance(
        _module_cbindings.cunion2* base_instance,
        object i,
        object d,
        struct1 s,
        union1 u
    ) except *

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[_module_cbindings.cunion2])


cdef vector[cint32_t] List__i32__make_instance(object items) except *
cdef object List__i32__from_cpp(const vector[cint32_t]&) except *

cdef cmap[string,cint32_t] Map__string_i32__make_instance(object items) except *
cdef object Map__string_i32__from_cpp(const cmap[string,cint32_t]&) except *

cdef vector[cmap[string,cint32_t]] List__Map__string_i32__make_instance(object items) except *
cdef object List__Map__string_i32__from_cpp(const vector[cmap[string,cint32_t]]&) except *

cdef cmap[string,string] Map__string_string__make_instance(object items) except *
cdef object Map__string_string__from_cpp(const cmap[string,string]&) except *

cdef vector[_module_cbindings.cCompany] List__Company__make_instance(object items) except *
cdef object List__Company__from_cpp(const vector[_module_cbindings.cCompany]&) except *

cdef vector[_module_cbindings.cRange] List__Range__make_instance(object items) except *
cdef object List__Range__from_cpp(const vector[_module_cbindings.cRange]&) except *

cdef vector[_module_cbindings.cInternship] List__Internship__make_instance(object items) except *
cdef object List__Internship__from_cpp(const vector[_module_cbindings.cInternship]&) except *

cdef vector[string] List__string__make_instance(object items) except *
cdef object List__string__from_cpp(const vector[string]&) except *

cdef cset[cint32_t] Set__i32__make_instance(object items) except *
cdef object Set__i32__from_cpp(const cset[cint32_t]&) except *

cdef cset[string] Set__string__make_instance(object items) except *
cdef object Set__string__from_cpp(const cset[string]&) except *

cdef cmap[cint32_t,cint32_t] Map__i32_i32__make_instance(object items) except *
cdef object Map__i32_i32__from_cpp(const cmap[cint32_t,cint32_t]&) except *

cdef cmap[cint32_t,string] Map__i32_string__make_instance(object items) except *
cdef object Map__i32_string__from_cpp(const cmap[cint32_t,string]&) except *

cdef cmap[cint32_t,cbool] Map__i32_bool__make_instance(object items) except *
cdef object Map__i32_bool__from_cpp(const cmap[cint32_t,cbool]&) except *


