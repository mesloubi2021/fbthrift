#
# Autogenerated by Thrift for shared.thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

# pyre-unsafe

import typing as __T  # sometimes `t` is used as a field name

from thrift import Thrift
from thrift.protocol.TProtocol import TProtocolBase

__property__ = property  # sometimes `property` is used as a field name


UTF8STRINGS: bool


class DoSomethingResult:
    thrift_spec: __T.Tuple[__T.Optional[__T.Tuple[int, int, str, __T.Any, __T.Optional[int], int]]]
    thrift_field_annotations: __T.Dict[int, __T.Dict[str, str]]
    thrift_struct_annotations: __T.Dict[str, str]

    def __init__(
        self,
        s_res: __T.Optional[str] = ...,
        i_res: __T.Optional[int] = ...
    ) -> None:
        ...

    @__property__
    def s_res(self) -> str: ...
    @s_res.setter
    def s_res(self, value: __T.Optional[str]) -> None: ...
    @__property__
    def i_res(self) -> int: ...
    @i_res.setter
    def i_res(self, value: __T.Optional[int]) -> None: ...


    def isUnion(self) -> bool: ...
    def checkRequired(self) -> None: ...
    def read(self, iprot: TProtocolBase) -> None: ...
    def write(self, oprot: TProtocolBase) -> None: ...
    def __eq__(self, other: __T.Any) -> bool: ...
    def __ne__(self, other: __T.Any) -> bool: ...
    def __dir__(self) -> __T.Sequence[str]: ...
    def _to_python(self) -> "test.fixtures.another_interactions.shared.thrift_types.DoSomethingResult": ...   # type: ignore
    def _to_mutable_python(self) -> "test.fixtures.another_interactions.shared.thrift_mutable_types.DoSomethingResult": ...   # type: ignore
    def _to_py3(self) -> "test.fixtures.another_interactions.shared.types.DoSomethingResult": ...   # type: ignore
    def _to_py_deprecated(self) -> DoSomethingResult: ...


