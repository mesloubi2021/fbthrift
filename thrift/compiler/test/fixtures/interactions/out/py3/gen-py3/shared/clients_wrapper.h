/**
 * Autogenerated by Thrift for shared.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#pragma once
#if __has_include(<thrift/compiler/test/fixtures/interactions/gen-cpp2/InteractLocally.h>)
#include <thrift/compiler/test/fixtures/interactions/gen-cpp2/InteractLocally.h>
#else
#include <thrift/compiler/test/fixtures/interactions/gen-cpp2/shared_clients.h>
#endif

#include <folly/futures/Future.h>
#include <folly/futures/Promise.h>
#include <folly/Unit.h>
#include <thrift/lib/py3/clientcallbacks.h>
#include <thrift/lib/py3/client_wrapper.h>

#include <cstdint>
#include <functional>
#include <map>
#include <memory>
#include <set>
#include <vector>

namespace thrift {
namespace shared_interactions {

class InteractLocallyClientWrapper : public ::thrift::py3::ClientWrapper {
  public:
    using ::thrift::py3::ClientWrapper::ClientWrapper;


    class SharedInteractionInteractionWrapper : public ClientWrapper {
      public:
        SharedInteractionInteractionWrapper(
          std::unique_ptr<apache::thrift::GeneratedAsyncClient> async_client,
           std::shared_ptr<apache::thrift::RequestChannel> channel)
           : ClientWrapper(std::move(async_client), channel) {}

        folly::Future<int32_t> init(
          apache::thrift::RpcOptions& rpcOptions);
        folly::Future<::thrift::shared_interactions::DoSomethingResult> do_something(
          apache::thrift::RpcOptions& rpcOptions);
        folly::Future<folly::Unit> tear_down(
          apache::thrift::RpcOptions& rpcOptions);
    };
    folly::Future<std::unique_ptr<::thrift::py3::ClientWrapper>> createSharedInteraction();
};


} // namespace thrift
} // namespace shared_interactions
