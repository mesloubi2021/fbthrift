/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package test.fixtures.interactions;

import java.util.*;

public class BoxServiceReactiveAsyncWrapper 
  implements BoxService.Async {
  private BoxService.Reactive _delegate;

  public BoxServiceReactiveAsyncWrapper(BoxService.Reactive _delegate) {
    
    this._delegate = _delegate;
  }

  public BoxServiceReactiveAsyncWrapper(org.apache.thrift.ProtocolId _protocolId, reactor.core.publisher.Mono<? extends com.facebook.thrift.client.RpcClient> _rpcClient, Map<String, String> _headers, Map<String, String> _persistentHeaders) {
    this(new BoxServiceReactiveClient(_protocolId, _rpcClient, _headers, _persistentHeaders));
  }

  @java.lang.Override
  public void close() {
    _delegate.dispose();
  }

  @java.lang.Override
  public com.google.common.util.concurrent.ListenableFuture<test.fixtures.interactions.ShouldBeBoxed> getABoxSession(final test.fixtures.interactions.ShouldBeBoxed req) {
      return com.facebook.thrift.util.FutureUtil.toListenableFuture(_delegate.getABoxSession(req));
  }

  @java.lang.Override
  public com.google.common.util.concurrent.ListenableFuture<test.fixtures.interactions.ShouldBeBoxed> getABoxSession(
    final test.fixtures.interactions.ShouldBeBoxed req,
    com.facebook.thrift.client.RpcOptions rpcOptions) {
      return com.facebook.thrift.util.FutureUtil.toListenableFuture(_delegate.getABoxSession(req, rpcOptions));
  }

  @java.lang.Override
  public com.google.common.util.concurrent.ListenableFuture<com.facebook.thrift.client.ResponseWrapper<test.fixtures.interactions.ShouldBeBoxed>> getABoxSessionWrapper(
    final test.fixtures.interactions.ShouldBeBoxed req,
    com.facebook.thrift.client.RpcOptions rpcOptions) {
    return com.facebook.thrift.util.FutureUtil.toListenableFuture(_delegate.getABoxSessionWrapper(req, rpcOptions));
  }

  public class BoxedInteractionImpl implements BoxedInteraction {
    @java.lang.Override
    public com.google.common.util.concurrent.ListenableFuture<test.fixtures.interactions.ShouldBeBoxed> getABox() {
        throw new UnsupportedOperationException("Interactions are not yet supported on ReactiveAsyncWrapper Interfaces!");
    }

    @java.lang.Override
    public com.google.common.util.concurrent.ListenableFuture<test.fixtures.interactions.ShouldBeBoxed> getABox(
      com.facebook.thrift.client.RpcOptions rpcOptions) {
        throw new UnsupportedOperationException("Interactions are not yet supported on ReactiveAsyncWrapper Interfaces!");
    }

    @java.lang.Override
    public com.google.common.util.concurrent.ListenableFuture<com.facebook.thrift.client.ResponseWrapper<test.fixtures.interactions.ShouldBeBoxed>> getABoxWrapper(
      com.facebook.thrift.client.RpcOptions rpcOptions) {
      throw new UnsupportedOperationException("Interactions are not yet supported on ReactiveAsyncWrapper Interfaces!");
    }

    @java.lang.Override
    public void close() {}
  }

  public BoxedInteraction createBoxedInteraction() {
      return new BoxedInteractionImpl();
  }
}
