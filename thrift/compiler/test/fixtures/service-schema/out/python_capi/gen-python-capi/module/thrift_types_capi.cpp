
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT
 *  @generated
 *
 */

#include <folly/python/import.h>
#include <thrift/lib/python/capi/iobuf.h>
#include <thrift/lib/python/types.h>

#include <thrift/compiler/test/fixtures/service-schema/gen-python-capi/module/thrift_types_api.h>
#include <thrift/compiler/test/fixtures/service-schema/gen-python-capi/module/thrift_types_capi.h>

#include "thrift/compiler/test/fixtures/service-schema/gen-python-capi/include/thrift_types_capi.h"

namespace apache {
namespace thrift {
namespace python {
namespace capi {
namespace {
bool ensure_module_imported() {
  static ::folly::python::import_cache_nocapture import((
      ::import_module__thrift_types_capi));
  return import();
}
  static constexpr std::int16_t _fbthrift__CustomException__tuple_pos[2] = {
    1, 2
  };
} // namespace

ExtractorResult<::cpp2::CustomException>
Extractor<::cpp2::CustomException>::operator()(PyObject* obj) {
  int tCheckResult = typeCheck(obj);
  if (tCheckResult != 1) {
      if (tCheckResult == 0) {
        PyErr_SetString(PyExc_TypeError, "Not a CustomException");
      }
      return extractorError<::cpp2::CustomException>(
          "Marshal error: CustomException");
  }
  StrongRef fbThriftData(getExceptionThriftData(obj));
  return Extractor<::apache::thrift::python::capi::ComposedStruct<
      ::cpp2::CustomException>>{}(*fbThriftData);
}

ExtractorResult<::cpp2::CustomException>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::CustomException>>::operator()(PyObject* fbThriftData) {
  ::cpp2::CustomException cpp;
  std::optional<std::string_view> error;
  Extractor<Bytes>{}.extractInto(
      cpp.name_ref(),
      PyTuple_GET_ITEM(fbThriftData, _fbthrift__CustomException__tuple_pos[0]),
      error);
  Extractor<::apache::thrift::python::capi::ComposedEnum<::cpp2::Result>>{}.extractInto(
      cpp.result_ref(),
      PyTuple_GET_ITEM(fbThriftData, _fbthrift__CustomException__tuple_pos[1]),
      error);
  if (error) {
    return folly::makeUnexpected(*error);
  }
  return cpp;
}


int Extractor<::cpp2::CustomException>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__CustomException(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: CustomException");
  }
  return result;
}


PyObject* Constructor<::cpp2::CustomException>::operator()(
    const ::cpp2::CustomException& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::CustomException>> ctor;
  StrongRef fbthrift_data(ctor(val));
  if (!fbthrift_data) {
    return nullptr;
  }
  return init__module__CustomException(*fbthrift_data);
}

PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::CustomException>>::operator()(
    [[maybe_unused]] const ::cpp2::CustomException& val) {
  StrongRef fbthrift_data(createStructTuple(2));
  StrongRef _fbthrift__name(
    Constructor<Bytes>{}
    .constructFrom(val.name_ref()));
  if (!_fbthrift__name ||
      setStructField(
          *fbthrift_data,
          _fbthrift__CustomException__tuple_pos[0],
          *_fbthrift__name) == -1) {
    return nullptr;
  }
  StrongRef _fbthrift__result(
    Constructor<::apache::thrift::python::capi::ComposedEnum<::cpp2::Result>>{}
    .constructFrom(val.result_ref()));
  if (!_fbthrift__result ||
      setStructField(
          *fbthrift_data,
          _fbthrift__CustomException__tuple_pos[1],
          *_fbthrift__result) == -1) {
    return nullptr;
  }
  return std::move(fbthrift_data).release();
}


ExtractorResult<::cpp2::Result>
Extractor<::cpp2::Result>::operator()(PyObject* obj) {
  long val = PyLong_AsLong(obj);
  if (val == -1 && PyErr_Occurred()) {
    return extractorError<::cpp2::Result>(
        "Error getting python int value: Result");
  }
  return static_cast<::cpp2::Result>(val);
}

int Extractor<::cpp2::Result>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__Result(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: Result");
  }
  return result;
}


PyObject* Constructor<::cpp2::Result>::operator()(
    ::cpp2::Result val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  auto ptr = construct__module__Result(
      static_cast<int64_t>(val));
  if (!ptr) {
    CHECK(PyErr_Occurred());
  }
  return ptr;
}

} // namespace capi
} // namespace python
} // namespace thrift
} // namespace apache
