#
# Autogenerated by Thrift for thrift/compiler/test/fixtures/types/src/module.thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#
from libc.stdint cimport (
    int8_t as cint8_t,
    int16_t as cint16_t,
    int32_t as cint32_t,
    int64_t as cint64_t,
    uint16_t as cuint16_t,
    uint32_t as cuint32_t,
)
from libcpp.string cimport string
from libcpp cimport bool as cbool, nullptr, nullptr_t
from cpython cimport bool as pbool
from libcpp.memory cimport shared_ptr, unique_ptr
from libcpp.vector cimport vector
from libcpp.set cimport set as cset
from libcpp.map cimport map as cmap, pair as cpair
from libcpp.unordered_map cimport unordered_map as cumap
cimport folly.iobuf as _fbthrift_iobuf
from thrift.python.exceptions cimport cTException
from thrift.py3.types cimport (
    bstring,
    field_ref as __field_ref,
    optional_field_ref as __optional_field_ref,
    required_field_ref as __required_field_ref,
    terse_field_ref as __terse_field_ref,
    union_field_ref as __union_field_ref,
    get_union_field_value as __get_union_field_value,
)
from thrift.python.common cimport cThriftMetadata as __fbthrift_cThriftMetadata

cimport apache.thrift.fixtures.types.included.cbindings as _apache_thrift_fixtures_types_included_cbindings

cdef extern from * nogil:
    cdef cppclass std_unordered_map "std::unordered_map"[T, U]:
        ctypedef T key_type
        ctypedef U mapped_type
        ctypedef size_t size_type

        cppclass iterator:
            cpair[T, U]& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            cpair[T, U]& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        std_unordered_map() except +
        std_unordered_map(std_unordered_map&) except +

        U& operator[](T&)
        iterator find(const T&)
        const_iterator const_find "find"(const T&)
        size_type count(const T&)
        size_type size()
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass std_list "std::list"[T]:
        ctypedef T value_type
        ctypedef size_t size_type

        cppclass iterator:
            T& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            T& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        std_list() except +
        std_list(std_list&) except +

        T& operator[](size_type)
        void push_back(T&) except +
        size_type size()
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass std_deque "std::deque"[T]:
        ctypedef T value_type
        ctypedef size_t size_type

        cppclass iterator:
            T& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            T& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        std_deque() except +
        std_deque(std_deque&) except +

        T& operator[](size_type)
        void push_back(T&) except +
        size_type size()
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass folly_fbvector "folly::fbvector"[T]:
        ctypedef T value_type
        ctypedef size_t size_type

        cppclass iterator:
            T& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            T& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        folly_fbvector() except +
        folly_fbvector(folly_fbvector&) except +

        T& operator[](size_type)
        void push_back(T&) except +
        size_type size()
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass folly_small_vector "folly::small_vector"[T]:
        ctypedef T value_type
        ctypedef size_t size_type

        cppclass iterator:
            T& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            T& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        folly_small_vector() except +
        folly_small_vector(folly_small_vector&) except +

        T& operator[](size_type)
        void push_back(T&) except +
        size_type size()
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass folly_sorted_vector_set "folly::sorted_vector_set"[T]:
        ctypedef T value_type
        ctypedef size_t size_type

        cppclass iterator:
            T& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            T& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        folly_sorted_vector_set() except +
        folly_sorted_vector_set(folly_sorted_vector_set&) except +

        cpair[iterator, bint] insert(const T&) except +
        size_type size()
        size_type count(const T&)
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass std_unordered_map "std::unordered_map"[T, U]:
        ctypedef T key_type
        ctypedef U mapped_type
        ctypedef size_t size_type

        cppclass iterator:
            cpair[T, U]& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            cpair[T, U]& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        std_unordered_map() except +
        std_unordered_map(std_unordered_map&) except +

        U& operator[](T&)
        iterator find(const T&)
        const_iterator const_find "find"(const T&)
        size_type count(const T&)
        size_type size()
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass _std_list "::std::list"[T]:
        ctypedef T value_type
        ctypedef size_t size_type

        cppclass iterator:
            T& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            T& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        _std_list() except +
        _std_list(_std_list&) except +

        T& operator[](size_type)
        void push_back(T&) except +
        size_type size()
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass folly_small_vector "folly::small_vector"[T]:
        ctypedef T value_type
        ctypedef size_t size_type

        cppclass iterator:
            T& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            T& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        folly_small_vector() except +
        folly_small_vector(folly_small_vector&) except +

        T& operator[](size_type)
        void push_back(T&) except +
        size_type size()
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass std_list_int32_t "std::list<int32_t>":
        ctypedef cint32_t value_type
        ctypedef size_t size_type

        cppclass iterator:
            cint32_t& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            cint32_t& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)
        cppclass const_iterator(iterator):
            pass
        cppclass const_reverse_iterator(reverse_iterator):
            pass

        std_list_int32_t() except +
        std_list_int32_t(std_list_int32_t&) except +

        cint32_t& operator[](size_type)
        void push_back(cint32_t&) except +
        size_type size()
        iterator begin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        void clear()
        bint empty()


cdef extern from "thrift/compiler/test/fixtures/types/gen-cpp2/module_metadata.h" namespace "apache::thrift::detail::md":
    cdef cppclass EnumMetadata[T]:
        @staticmethod
        void gen(__fbthrift_cThriftMetadata &metadata)
cdef extern from "thrift/compiler/test/fixtures/types/gen-cpp2/module_types.h" namespace "::apache::thrift::fixtures::types":
    cdef cppclass chas_bitwise_ops "::apache::thrift::fixtures::types::has_bitwise_ops":
        pass

    cdef cppclass cis_unscoped "::apache::thrift::fixtures::types::is_unscoped":
        pass

    cdef cppclass cMyForwardRefEnum "::apache::thrift::fixtures::types::MyForwardRefEnum":
        pass

cdef extern from "thrift/compiler/test/fixtures/types/gen-cpp2/module_metadata.h" namespace "apache::thrift::detail::md":
    cdef cppclass ExceptionMetadata[T]:
        @staticmethod
        void gen(__fbthrift_cThriftMetadata &metadata)
cdef extern from "thrift/compiler/test/fixtures/types/gen-cpp2/module_metadata.h" namespace "apache::thrift::detail::md":
    cdef cppclass StructMetadata[T]:
        @staticmethod
        void gen(__fbthrift_cThriftMetadata &metadata)
cdef extern from "thrift/compiler/test/fixtures/types/gen-cpp2/module_types_custom_protocol.h" namespace "::apache::thrift::fixtures::types":

    cdef cppclass cempty_struct "::apache::thrift::fixtures::types::empty_struct":
        cempty_struct() except +
        cempty_struct(const cempty_struct&) except +
        bint operator==(cempty_struct&)
        bint operator!=(cempty_struct&)
        bint operator<(cempty_struct&)
        bint operator>(cempty_struct&)
        bint operator<=(cempty_struct&)
        bint operator>=(cempty_struct&)


    cdef cppclass cdecorated_struct "::apache::thrift::fixtures::types::decorated_struct":
        cdecorated_struct() except +
        cdecorated_struct(const cdecorated_struct&) except +
        bint operator==(cdecorated_struct&)
        bint operator!=(cdecorated_struct&)
        bint operator<(cdecorated_struct&)
        bint operator>(cdecorated_struct&)
        bint operator<=(cdecorated_struct&)
        bint operator>=(cdecorated_struct&)
        __field_ref[string] field_ref "field_ref" ()


    cdef cppclass cContainerStruct "::apache::thrift::fixtures::types::ContainerStruct":
        cContainerStruct() except +
        cContainerStruct(const cContainerStruct&) except +
        bint operator==(cContainerStruct&)
        bint operator!=(cContainerStruct&)
        bint operator<(cContainerStruct&)
        bint operator>(cContainerStruct&)
        bint operator<=(cContainerStruct&)
        bint operator>=(cContainerStruct&)
        __field_ref[vector[cint32_t]] fieldA_ref "fieldA_ref" ()
        __field_ref[std_list[cint32_t]] fieldB_ref "fieldB_ref" ()
        __field_ref[std_deque[cint32_t]] fieldC_ref "fieldC_ref" ()
        __field_ref[folly_fbvector[cint32_t]] fieldD_ref "fieldD_ref" ()
        __field_ref[folly_small_vector[cint32_t]] fieldE_ref "fieldE_ref" ()
        __field_ref[folly_sorted_vector_set[cint32_t]] fieldF_ref "fieldF_ref" ()
        __field_ref[cmap[cint32_t,string]] fieldG_ref "fieldG_ref" ()
        __field_ref[std_unordered_map[cint32_t,string]] fieldH_ref "fieldH_ref" ()


    cdef cppclass cCppTypeStruct "::apache::thrift::fixtures::types::CppTypeStruct":
        cCppTypeStruct() except +
        cCppTypeStruct(const cCppTypeStruct&) except +
        bint operator==(cCppTypeStruct&)
        bint operator!=(cCppTypeStruct&)
        bint operator<(cCppTypeStruct&)
        bint operator>(cCppTypeStruct&)
        bint operator<=(cCppTypeStruct&)
        bint operator>=(cCppTypeStruct&)
        __field_ref[std_list_int32_t] fieldA_ref "fieldA_ref" ()


    cdef cppclass cVirtualStruct "::apache::thrift::fixtures::types::VirtualStruct":
        cVirtualStruct() except +
        cVirtualStruct(const cVirtualStruct&) except +
        bint operator==(cVirtualStruct&)
        bint operator!=(cVirtualStruct&)
        bint operator<(cVirtualStruct&)
        bint operator>(cVirtualStruct&)
        bint operator<=(cVirtualStruct&)
        bint operator>=(cVirtualStruct&)
        __field_ref[cint64_t] MyIntField_ref "MyIntField_ref" ()


    cdef cppclass cMyStructWithForwardRefEnum "::apache::thrift::fixtures::types::MyStructWithForwardRefEnum":
        cMyStructWithForwardRefEnum() except +
        cMyStructWithForwardRefEnum(const cMyStructWithForwardRefEnum&) except +
        bint operator==(cMyStructWithForwardRefEnum&)
        bint operator!=(cMyStructWithForwardRefEnum&)
        bint operator<(cMyStructWithForwardRefEnum&)
        bint operator>(cMyStructWithForwardRefEnum&)
        bint operator<=(cMyStructWithForwardRefEnum&)
        bint operator>=(cMyStructWithForwardRefEnum&)
        __field_ref[cMyForwardRefEnum] a_ref "a_ref" ()
        __field_ref[cMyForwardRefEnum] b_ref "b_ref" ()


    cdef cppclass cTrivialNumeric "::apache::thrift::fixtures::types::TrivialNumeric":
        cTrivialNumeric() except +
        cTrivialNumeric(const cTrivialNumeric&) except +
        bint operator==(cTrivialNumeric&)
        bint operator!=(cTrivialNumeric&)
        bint operator<(cTrivialNumeric&)
        bint operator>(cTrivialNumeric&)
        bint operator<=(cTrivialNumeric&)
        bint operator>=(cTrivialNumeric&)
        __field_ref[cint32_t] a_ref "a_ref" ()
        __field_ref[cbool] b_ref "b_ref" ()


    cdef cppclass cTrivialNestedWithDefault "::apache::thrift::fixtures::types::TrivialNestedWithDefault":
        cTrivialNestedWithDefault() except +
        cTrivialNestedWithDefault(const cTrivialNestedWithDefault&) except +
        bint operator==(cTrivialNestedWithDefault&)
        bint operator!=(cTrivialNestedWithDefault&)
        bint operator<(cTrivialNestedWithDefault&)
        bint operator>(cTrivialNestedWithDefault&)
        bint operator<=(cTrivialNestedWithDefault&)
        bint operator>=(cTrivialNestedWithDefault&)
        __field_ref[cint32_t] z_ref "z_ref" ()
        __field_ref[cTrivialNumeric] n_ref "n_ref" ()


    cdef cppclass cComplexString "::apache::thrift::fixtures::types::ComplexString":
        cComplexString() except +
        cComplexString(const cComplexString&) except +
        bint operator==(cComplexString&)
        bint operator!=(cComplexString&)
        bint operator<(cComplexString&)
        bint operator>(cComplexString&)
        bint operator<=(cComplexString&)
        bint operator>=(cComplexString&)
        __field_ref[string] a_ref "a_ref" ()
        __field_ref[cmap[string,cint32_t]] b_ref "b_ref" ()


    cdef cppclass cComplexNestedWithDefault "::apache::thrift::fixtures::types::ComplexNestedWithDefault":
        cComplexNestedWithDefault() except +
        cComplexNestedWithDefault(const cComplexNestedWithDefault&) except +
        bint operator==(cComplexNestedWithDefault&)
        bint operator!=(cComplexNestedWithDefault&)
        bint operator<(cComplexNestedWithDefault&)
        bint operator>(cComplexNestedWithDefault&)
        bint operator<=(cComplexNestedWithDefault&)
        bint operator>=(cComplexNestedWithDefault&)
        __field_ref[string] z_ref "z_ref" ()
        __field_ref[cComplexString] n_ref "n_ref" ()


    cdef cppclass cMinPadding "::apache::thrift::fixtures::types::MinPadding":
        cMinPadding() except +
        cMinPadding(const cMinPadding&) except +
        bint operator==(cMinPadding&)
        bint operator!=(cMinPadding&)
        bint operator<(cMinPadding&)
        bint operator>(cMinPadding&)
        bint operator<=(cMinPadding&)
        bint operator>=(cMinPadding&)
        __required_field_ref[cint8_t] small_ref "small_ref" ()
        __required_field_ref[cint64_t] big_ref "big_ref" ()
        __required_field_ref[cint16_t] medium_ref "medium_ref" ()
        __required_field_ref[cint32_t] biggish_ref "biggish_ref" ()
        __required_field_ref[cint8_t] tiny_ref "tiny_ref" ()


    cdef cppclass cMinPaddingWithCustomType "::apache::thrift::fixtures::types::MinPaddingWithCustomType":
        cMinPaddingWithCustomType() except +
        cMinPaddingWithCustomType(const cMinPaddingWithCustomType&) except +
        bint operator==(cMinPaddingWithCustomType&)
        bint operator!=(cMinPaddingWithCustomType&)
        bint operator<(cMinPaddingWithCustomType&)
        bint operator>(cMinPaddingWithCustomType&)
        bint operator<=(cMinPaddingWithCustomType&)
        bint operator>=(cMinPaddingWithCustomType&)
        __terse_field_ref[cint8_t] small_ref "small_ref" ()
        __terse_field_ref[cint64_t] big_ref "big_ref" ()
        __terse_field_ref[cint16_t] medium_ref "medium_ref" ()
        __terse_field_ref[cint32_t] biggish_ref "biggish_ref" ()
        __terse_field_ref[cint8_t] tiny_ref "tiny_ref" ()


    cdef cppclass cMyStruct "::apache::thrift::fixtures::types::MyStruct":
        cMyStruct() except +
        cMyStruct(const cMyStruct&) except +
        __field_ref[cint64_t] MyIntField_ref "MyIntField_ref" ()
        __field_ref[string] MyStringField_ref "MyStringField_ref" ()
        __field_ref[cint64_t] majorVer_ref "majorVer_ref" ()
        __field_ref[cMyDataItem] data_ref "data_ref" ()


    cdef cppclass cMyDataItem "::apache::thrift::fixtures::types::MyDataItem":
        cMyDataItem() except +
        cMyDataItem(const cMyDataItem&) except +


    cdef cppclass cRenaming "::apache::thrift::fixtures::types::Renaming":
        cRenaming() except +
        cRenaming(const cRenaming&) except +
        bint operator==(cRenaming&)
        bint operator!=(cRenaming&)
        bint operator<(cRenaming&)
        bint operator>(cRenaming&)
        bint operator<=(cRenaming&)
        bint operator>=(cRenaming&)
        __field_ref[cint64_t] foo_ref "bar_ref" ()


    cdef cppclass cAnnotatedTypes "::apache::thrift::fixtures::types::AnnotatedTypes":
        cAnnotatedTypes() except +
        cAnnotatedTypes(const cAnnotatedTypes&) except +
        bint operator==(cAnnotatedTypes&)
        bint operator!=(cAnnotatedTypes&)
        bint operator<(cAnnotatedTypes&)
        bint operator>(cAnnotatedTypes&)
        bint operator<=(cAnnotatedTypes&)
        bint operator>=(cAnnotatedTypes&)
        __field_ref[string] binary_field_ref "binary_field_ref" ()
        __field_ref[vector[std_unordered_map[cint32_t,string]]] list_field_ref "list_field_ref" ()


    cdef cppclass cForwardUsageRoot "::apache::thrift::fixtures::types::ForwardUsageRoot":
        cForwardUsageRoot() except +
        cForwardUsageRoot(const cForwardUsageRoot&) except +
        bint operator==(cForwardUsageRoot&)
        bint operator!=(cForwardUsageRoot&)
        bint operator<(cForwardUsageRoot&)
        bint operator>(cForwardUsageRoot&)
        bint operator<=(cForwardUsageRoot&)
        bint operator>=(cForwardUsageRoot&)
        __optional_field_ref[cForwardUsageStruct] ForwardUsageStruct_ref "ForwardUsageStruct_ref" ()
        unique_ptr[cForwardUsageByRef] ForwardUsageByRef_ref "ForwardUsageByRef_ref" ()


    cdef cppclass cForwardUsageStruct "::apache::thrift::fixtures::types::ForwardUsageStruct":
        cForwardUsageStruct() except +
        cForwardUsageStruct(const cForwardUsageStruct&) except +
        bint operator==(cForwardUsageStruct&)
        bint operator!=(cForwardUsageStruct&)
        bint operator<(cForwardUsageStruct&)
        bint operator>(cForwardUsageStruct&)
        bint operator<=(cForwardUsageStruct&)
        bint operator>=(cForwardUsageStruct&)
        unique_ptr[cForwardUsageRoot] foo_ref "foo_ref" ()


    cdef cppclass cForwardUsageByRef "::apache::thrift::fixtures::types::ForwardUsageByRef":
        cForwardUsageByRef() except +
        cForwardUsageByRef(const cForwardUsageByRef&) except +
        bint operator==(cForwardUsageByRef&)
        bint operator!=(cForwardUsageByRef&)
        bint operator<(cForwardUsageByRef&)
        bint operator>(cForwardUsageByRef&)
        bint operator<=(cForwardUsageByRef&)
        bint operator>=(cForwardUsageByRef&)
        unique_ptr[cForwardUsageRoot] foo_ref "foo_ref" ()


    cdef cppclass cIncompleteMap "::apache::thrift::fixtures::types::IncompleteMap":
        cIncompleteMap() except +
        cIncompleteMap(const cIncompleteMap&) except +
        bint operator==(cIncompleteMap&)
        bint operator!=(cIncompleteMap&)
        bint operator<(cIncompleteMap&)
        bint operator>(cIncompleteMap&)
        bint operator<=(cIncompleteMap&)
        bint operator>=(cIncompleteMap&)
        __optional_field_ref[cmap[cint32_t,cIncompleteMapDep]] field_ref "field_ref" ()


    cdef cppclass cIncompleteMapDep "::apache::thrift::fixtures::types::IncompleteMapDep":
        cIncompleteMapDep() except +
        cIncompleteMapDep(const cIncompleteMapDep&) except +
        bint operator==(cIncompleteMapDep&)
        bint operator!=(cIncompleteMapDep&)
        bint operator<(cIncompleteMapDep&)
        bint operator>(cIncompleteMapDep&)
        bint operator<=(cIncompleteMapDep&)
        bint operator>=(cIncompleteMapDep&)


    cdef cppclass cCompleteMap "::apache::thrift::fixtures::types::CompleteMap":
        cCompleteMap() except +
        cCompleteMap(const cCompleteMap&) except +
        bint operator==(cCompleteMap&)
        bint operator!=(cCompleteMap&)
        bint operator<(cCompleteMap&)
        bint operator>(cCompleteMap&)
        bint operator<=(cCompleteMap&)
        bint operator>=(cCompleteMap&)
        __optional_field_ref[std_unordered_map[cint32_t,cCompleteMapDep]] field_ref "field_ref" ()


    cdef cppclass cCompleteMapDep "::apache::thrift::fixtures::types::CompleteMapDep":
        cCompleteMapDep() except +
        cCompleteMapDep(const cCompleteMapDep&) except +
        bint operator==(cCompleteMapDep&)
        bint operator!=(cCompleteMapDep&)
        bint operator<(cCompleteMapDep&)
        bint operator>(cCompleteMapDep&)
        bint operator<=(cCompleteMapDep&)
        bint operator>=(cCompleteMapDep&)


    cdef cppclass cIncompleteList "::apache::thrift::fixtures::types::IncompleteList":
        cIncompleteList() except +
        cIncompleteList(const cIncompleteList&) except +
        bint operator==(cIncompleteList&)
        bint operator!=(cIncompleteList&)
        bint operator<(cIncompleteList&)
        bint operator>(cIncompleteList&)
        bint operator<=(cIncompleteList&)
        bint operator>=(cIncompleteList&)
        __optional_field_ref[_std_list[cIncompleteListDep]] field_ref "field_ref" ()


    cdef cppclass cIncompleteListDep "::apache::thrift::fixtures::types::IncompleteListDep":
        cIncompleteListDep() except +
        cIncompleteListDep(const cIncompleteListDep&) except +
        bint operator==(cIncompleteListDep&)
        bint operator!=(cIncompleteListDep&)
        bint operator<(cIncompleteListDep&)
        bint operator>(cIncompleteListDep&)
        bint operator<=(cIncompleteListDep&)
        bint operator>=(cIncompleteListDep&)


    cdef cppclass cCompleteList "::apache::thrift::fixtures::types::CompleteList":
        cCompleteList() except +
        cCompleteList(const cCompleteList&) except +
        bint operator==(cCompleteList&)
        bint operator!=(cCompleteList&)
        bint operator<(cCompleteList&)
        bint operator>(cCompleteList&)
        bint operator<=(cCompleteList&)
        bint operator>=(cCompleteList&)
        __optional_field_ref[folly_small_vector[cCompleteListDep]] field_ref "field_ref" ()


    cdef cppclass cCompleteListDep "::apache::thrift::fixtures::types::CompleteListDep":
        cCompleteListDep() except +
        cCompleteListDep(const cCompleteListDep&) except +
        bint operator==(cCompleteListDep&)
        bint operator!=(cCompleteListDep&)
        bint operator<(cCompleteListDep&)
        bint operator>(cCompleteListDep&)
        bint operator<=(cCompleteListDep&)
        bint operator>=(cCompleteListDep&)


    cdef cppclass cAdaptedList "::apache::thrift::fixtures::types::AdaptedList":
        cAdaptedList() except +
        cAdaptedList(const cAdaptedList&) except +
        bint operator==(cAdaptedList&)
        bint operator!=(cAdaptedList&)
        bint operator<(cAdaptedList&)
        bint operator>(cAdaptedList&)
        bint operator<=(cAdaptedList&)
        bint operator>=(cAdaptedList&)
        __optional_field_ref[vector[cAdaptedListDep]] field_ref "field_ref" ()


    cdef cppclass cDependentAdaptedList "::apache::thrift::fixtures::types::DependentAdaptedList":
        cDependentAdaptedList() except +
        cDependentAdaptedList(const cDependentAdaptedList&) except +
        bint operator==(cDependentAdaptedList&)
        bint operator!=(cDependentAdaptedList&)
        bint operator<(cDependentAdaptedList&)
        bint operator>(cDependentAdaptedList&)
        bint operator<=(cDependentAdaptedList&)
        bint operator>=(cDependentAdaptedList&)
        __optional_field_ref[vector[cDependentAdaptedListDep]] field_ref "field_ref" ()


    cdef cppclass cAllocatorAware "::apache::thrift::fixtures::types::AllocatorAware":
        cAllocatorAware() except +
        cAllocatorAware(const cAllocatorAware&) except +
        bint operator==(cAllocatorAware&)
        bint operator!=(cAllocatorAware&)
        bint operator<(cAllocatorAware&)
        bint operator>(cAllocatorAware&)
        bint operator<=(cAllocatorAware&)
        bint operator>=(cAllocatorAware&)
        __field_ref[vector[cint32_t]] aa_list_ref "aa_list_ref" ()
        __field_ref[cset[cint32_t]] aa_set_ref "aa_set_ref" ()
        __field_ref[cmap[cint32_t,cint32_t]] aa_map_ref "aa_map_ref" ()
        __field_ref[string] aa_string_ref "aa_string_ref" ()
        __field_ref[cint32_t] not_a_container_ref "not_a_container_ref" ()
        unique_ptr[cint32_t] aa_unique_ref "aa_unique_ref" ()
        shared_ptr[cint32_t] aa_shared_ref "aa_shared_ref" ()


    cdef cppclass cAllocatorAware2 "::apache::thrift::fixtures::types::AllocatorAware2":
        cAllocatorAware2() except +
        cAllocatorAware2(const cAllocatorAware2&) except +
        bint operator==(cAllocatorAware2&)
        bint operator!=(cAllocatorAware2&)
        bint operator<(cAllocatorAware2&)
        bint operator>(cAllocatorAware2&)
        bint operator<=(cAllocatorAware2&)
        bint operator>=(cAllocatorAware2&)
        __field_ref[cint32_t] not_a_container_ref "not_a_container_ref" ()
        __optional_field_ref[cint32_t] box_field_ref "box_field_ref" ()


    cdef cppclass cTypedefStruct "::apache::thrift::fixtures::types::TypedefStruct":
        cTypedefStruct() except +
        cTypedefStruct(const cTypedefStruct&) except +
        bint operator==(cTypedefStruct&)
        bint operator!=(cTypedefStruct&)
        bint operator<(cTypedefStruct&)
        bint operator>(cTypedefStruct&)
        bint operator<=(cTypedefStruct&)
        bint operator>=(cTypedefStruct&)
        __field_ref[cint32_t] i32_field_ref "i32_field_ref" ()
        __field_ref[cint32_t] IntTypedef_field_ref "IntTypedef_field_ref" ()
        __field_ref[cint32_t] UintTypedef_field_ref "UintTypedef_field_ref" ()


    cdef cppclass cStructWithDoubleUnderscores "::apache::thrift::fixtures::types::StructWithDoubleUnderscores":
        cStructWithDoubleUnderscores() except +
        cStructWithDoubleUnderscores(const cStructWithDoubleUnderscores&) except +
        bint operator==(cStructWithDoubleUnderscores&)
        bint operator!=(cStructWithDoubleUnderscores&)
        bint operator<(cStructWithDoubleUnderscores&)
        bint operator>(cStructWithDoubleUnderscores&)
        bint operator<=(cStructWithDoubleUnderscores&)
        bint operator>=(cStructWithDoubleUnderscores&)
        __field_ref[cint32_t] __field_ref "__field_ref" ()

