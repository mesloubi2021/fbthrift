#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from __future__ import annotations

import typing as _typing

import folly.iobuf as _fbthrift_iobuf
import a.thrift_abstract_types as _fbthrift_python_abstract_types
import thrift.python.types as _fbthrift_python_types
import thrift.python.mutable_types as _fbthrift_python_mutable_types
import thrift.python.mutable_exceptions as _fbthrift_python_mutable_exceptions
import thrift.python.mutable_containers as _fbthrift_python_mutable_containers

import b.thrift_mutable_types as _fbthrift__b__thrift_mutable_types

import c.thrift_mutable_types as _fbthrift__c__thrift_mutable_types
import typeshed_three
import typeshed_two
import typeshed_one


class _fbthrift_compatible_with_MyStruct:
    pass


class MyStruct(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_compatible_with_MyStruct, _fbthrift_python_abstract_types.MyStruct):
    @property
    def a(self) -> typeshed_one.AdapterOneType[_fbthrift__b__thrift_mutable_types._fbthrift_unadapted_B]: ...
    @a.setter
    def a(self, value: typeshed_one.AdapterOneType[_fbthrift__b__thrift_mutable_types._fbthrift_unadapted_B]) -> None: ...

    @property
    def b(self) -> typeshed_three.AdapterThreeType[_fbthrift__c__thrift_mutable_types._fbthrift_unadapted_C1]: ...
    @b.setter
    def b(self, value: typeshed_three.AdapterThreeType[_fbthrift__c__thrift_mutable_types._fbthrift_unadapted_C1]) -> None: ...

    @property
    def c(self) -> typeshed_two.AdapterTwoType[_fbthrift__c__thrift_mutable_types.C2]: ...
    @c.setter
    def c(self, value: typeshed_two.AdapterTwoType[_fbthrift__c__thrift_mutable_types.C2]) -> None: ...

    def __init__(
        self, *,
        a: _typing.Optional[typeshed_one.AdapterOneType[_fbthrift__b__thrift_mutable_types._fbthrift_unadapted_B]]=...,
        b: _typing.Optional[typeshed_three.AdapterThreeType[_fbthrift__c__thrift_mutable_types._fbthrift_unadapted_C1]]=...,
        c: _typing.Optional[typeshed_two.AdapterTwoType[_fbthrift__c__thrift_mutable_types.C2]]=...
    ) -> None: ...

    def __call__(
        self, *,
        a: _typing.Optional[typeshed_one.AdapterOneType[_fbthrift__b__thrift_mutable_types._fbthrift_unadapted_B]]=...,
        b: _typing.Optional[typeshed_three.AdapterThreeType[_fbthrift__c__thrift_mutable_types._fbthrift_unadapted_C1]]=...,
        c: _typing.Optional[typeshed_two.AdapterTwoType[_fbthrift__c__thrift_mutable_types.C2]]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Union[typeshed_one.AdapterOneType[_fbthrift__b__thrift_mutable_types._fbthrift_unadapted_B], typeshed_three.AdapterThreeType[_fbthrift__c__thrift_mutable_types._fbthrift_unadapted_C1], typeshed_two.AdapterTwoType[_fbthrift__c__thrift_mutable_types.C2]]]]: ...
    def _to_python(self) -> "a.thrift_types.MyStruct": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "a.types.MyStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "a.ttypes.MyStruct": ...  # type: ignore
_fbthrift_MyStruct = MyStruct


class _fbthrift_MyService_adapted_return_args(_fbthrift_python_mutable_types.MutableStruct):

    def __init__(
        self,
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None]]]: ...


class _fbthrift_MyService_adapted_return_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[typeshed_one.AdapterOneType[_fbthrift__b__thrift_mutable_types._fbthrift_unadapted_B]]

    def __init__(
        self, *, success: _typing.Optional[typeshed_one.AdapterOneType[_fbthrift__b__thrift_mutable_types._fbthrift_unadapted_B]] = ...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            typeshed_one.AdapterOneType[_fbthrift__b__thrift_mutable_types._fbthrift_unadapted_B],
        ]]]: ...


class _fbthrift_MyService_adapted_param_args(_fbthrift_python_mutable_types.MutableStruct):
    param: _typing.Final[typeshed_two.AdapterTwoType[_fbthrift__c__thrift_mutable_types.C2]] = ...

    def __init__(
        self, *,
        param: _typing.Optional[typeshed_two.AdapterTwoType[_fbthrift__c__thrift_mutable_types.C2]]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None, typeshed_two.AdapterTwoType[_fbthrift__c__thrift_mutable_types.C2]]]]: ...


class _fbthrift_MyService_adapted_param_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[None]

    def __init__(
        self, *, success: _typing.Optional[None] = ...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            None,
        ]]]: ...
