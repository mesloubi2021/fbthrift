// Autogenerated by Thrift for thrift/compiler/test/fixtures/adapter/src/module.thrift
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//  @generated

package module


import (
    thrift "github.com/facebook/fbthrift/thrift/lib/go/thrift/types"
)

// (needed to ensure safety because of naive import list construction)
var _ = thrift.ZERO

// Premade codec specs
var (
    premadeCodecTypeSpec_module_Color = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.Color",
            CodecEnumSpec: &thrift.CodecEnumSpec{
    ScopedName: "module.Color",
},

        }
    }()
    premadeCodecTypeSpec_module_ThriftAdaptedEnum = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.ThriftAdaptedEnum",
            CodecEnumSpec: &thrift.CodecEnumSpec{
    ScopedName: "module.ThriftAdaptedEnum",
},

        }
    }()
    premadeCodecTypeSpec_string = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "string",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_STRING,
},

        }
    }()
    premadeCodecTypeSpec_module_MyAnnotation = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyAnnotation",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.MyAnnotation",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewMyAnnotation() },
},

        }
    }()
    premadeCodecTypeSpec_i32 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "i32",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_I32,
},

        }
    }()
    premadeCodecTypeSpec_module_i32_5137 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.i32_5137",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.i32_5137",
	UnderlyingTypeSpec: premadeCodecTypeSpec_i32,
},

        }
    }()
    premadeCodecTypeSpec_set_string = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "set<string>",
            CodecSetSpec: &thrift.CodecSetSpec{
    ElementWireType: thrift.STRING,
	ElementTypeSpec: premadeCodecTypeSpec_string,
},

        }
    }()
    premadeCodecTypeSpec_module_SetWithAdapter = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.SetWithAdapter",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.SetWithAdapter",
	UnderlyingTypeSpec: premadeCodecTypeSpec_set_string,
},

        }
    }()
    premadeCodecTypeSpec_module_StringWithAdapter = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.StringWithAdapter",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.StringWithAdapter",
	UnderlyingTypeSpec: premadeCodecTypeSpec_string,
},

        }
    }()
    premadeCodecTypeSpec_list_module_StringWithAdapter = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "list<module.StringWithAdapter>",
            CodecListSpec: &thrift.CodecListSpec{
    ElementWireType: thrift.STRING,
	ElementTypeSpec: premadeCodecTypeSpec_module_StringWithAdapter,
},

        }
    }()
    premadeCodecTypeSpec_module_ListWithElemAdapter = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.ListWithElemAdapter",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.ListWithElemAdapter",
	UnderlyingTypeSpec: premadeCodecTypeSpec_list_module_StringWithAdapter,
},

        }
    }()
    premadeCodecTypeSpec_module_ListWithElemAdapter_withAdapter = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.ListWithElemAdapter_withAdapter",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.ListWithElemAdapter_withAdapter",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_ListWithElemAdapter,
},

        }
    }()
    premadeCodecTypeSpec_module_ListWithElemAdapter_withAdapter_2312 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.ListWithElemAdapter_withAdapter_2312",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.ListWithElemAdapter_withAdapter_2312",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_ListWithElemAdapter_withAdapter,
},

        }
    }()
    premadeCodecTypeSpec_map_string_module_ListWithElemAdapter_withAdapter_2312 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "map<string, module.ListWithElemAdapter_withAdapter_2312>",
            CodecMapSpec: &thrift.CodecMapSpec{
	KeyTypeSpec:   premadeCodecTypeSpec_string,
	ValueTypeSpec: premadeCodecTypeSpec_module_ListWithElemAdapter_withAdapter_2312,
    KeyWireType:   thrift.STRING,
	ValueWireType: thrift.LIST,
},

        }
    }()
    premadeCodecTypeSpec_module_map_string_ListWithElemAdapter_withAdapter_8454 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.map_string_ListWithElemAdapter_withAdapter_8454",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.map_string_ListWithElemAdapter_withAdapter_8454",
	UnderlyingTypeSpec: premadeCodecTypeSpec_map_string_module_ListWithElemAdapter_withAdapter_2312,
},

        }
    }()
    premadeCodecTypeSpec_binary = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "binary",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_BINARY,
},

        }
    }()
    premadeCodecTypeSpec_module_binary_5673 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.binary_5673",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.binary_5673",
	UnderlyingTypeSpec: premadeCodecTypeSpec_binary,
},

        }
    }()
    premadeCodecTypeSpec_i64 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "i64",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_I64,
},

        }
    }()
    premadeCodecTypeSpec_module_MyI64 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyI64",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.MyI64",
	UnderlyingTypeSpec: premadeCodecTypeSpec_i64,
},

        }
    }()
    premadeCodecTypeSpec_module_DoubleTypedefI64 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.DoubleTypedefI64",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.DoubleTypedefI64",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_MyI64,
},

        }
    }()
    premadeCodecTypeSpec_list_i32 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "list<i32>",
            CodecListSpec: &thrift.CodecListSpec{
    ElementWireType: thrift.I32,
	ElementTypeSpec: premadeCodecTypeSpec_i32,
},

        }
    }()
    premadeCodecTypeSpec_set_i32 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "set<i32>",
            CodecSetSpec: &thrift.CodecSetSpec{
    ElementWireType: thrift.I32,
	ElementTypeSpec: premadeCodecTypeSpec_i32,
},

        }
    }()
    premadeCodecTypeSpec_map_string_i32 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "map<string, i32>",
            CodecMapSpec: &thrift.CodecMapSpec{
	KeyTypeSpec:   premadeCodecTypeSpec_string,
	ValueTypeSpec: premadeCodecTypeSpec_i32,
    KeyWireType:   thrift.STRING,
	ValueWireType: thrift.I32,
},

        }
    }()
    premadeCodecTypeSpec_map_i32_i32 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "map<i32, i32>",
            CodecMapSpec: &thrift.CodecMapSpec{
	KeyTypeSpec:   premadeCodecTypeSpec_i32,
	ValueTypeSpec: premadeCodecTypeSpec_i32,
    KeyWireType:   thrift.I32,
	ValueWireType: thrift.I32,
},

        }
    }()
    premadeCodecTypeSpec_list_map_i32_i32 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "list<map<i32, i32>>",
            CodecListSpec: &thrift.CodecListSpec{
    ElementWireType: thrift.MAP,
	ElementTypeSpec: premadeCodecTypeSpec_map_i32_i32,
},

        }
    }()
    premadeCodecTypeSpec_list_list_map_i32_i32 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "list<list<map<i32, i32>>>",
            CodecListSpec: &thrift.CodecListSpec{
    ElementWireType: thrift.LIST,
	ElementTypeSpec: premadeCodecTypeSpec_list_map_i32_i32,
},

        }
    }()
    premadeCodecTypeSpec_module_Foo = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.Foo",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.Foo",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewFoo() },
},

        }
    }()
    premadeCodecTypeSpec_module_Baz = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.Baz",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.Baz",
    IsUnion:    true,
    NewFunc:    func() thrift.Struct { return NewBaz() },
},

        }
    }()
    premadeCodecTypeSpec_module_Foo_6868 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.Foo_6868",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.Foo_6868",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_Foo,
},

        }
    }()
    premadeCodecTypeSpec_module_Foo_3943 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.Foo_3943",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.Foo_3943",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_Foo,
},

        }
    }()
    premadeCodecTypeSpec_module_FooWithAdapter = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.FooWithAdapter",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.FooWithAdapter",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_Foo,
},

        }
    }()
    premadeCodecTypeSpec_module_FooWithAdapter_9317 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.FooWithAdapter_9317",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.FooWithAdapter_9317",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_FooWithAdapter,
},

        }
    }()
    premadeCodecTypeSpec_list_module_FooWithAdapter_9317 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "list<module.FooWithAdapter_9317>",
            CodecListSpec: &thrift.CodecListSpec{
    ElementWireType: thrift.STRUCT,
	ElementTypeSpec: premadeCodecTypeSpec_module_FooWithAdapter_9317,
},

        }
    }()
    premadeCodecTypeSpec_module_Baz_7352 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.Baz_7352",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.Baz_7352",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_Baz,
},

        }
    }()
    premadeCodecTypeSpec_module_DirectlyAdapted = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.DirectlyAdapted",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.DirectlyAdapted",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewDirectlyAdapted() },
},

        }
    }()
    premadeCodecTypeSpec_module_Bar = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.Bar",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.Bar",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewBar() },
},

        }
    }()
    premadeCodecTypeSpec_module_IndependentDirectlyAdapted = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.IndependentDirectlyAdapted",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.IndependentDirectlyAdapted",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewIndependentDirectlyAdapted() },
},

        }
    }()
    premadeCodecTypeSpec_module_StructWithFieldAdapter = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.StructWithFieldAdapter",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.StructWithFieldAdapter",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewStructWithFieldAdapter() },
},

        }
    }()
    premadeCodecTypeSpec_module_TerseAdaptedFields = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.TerseAdaptedFields",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.TerseAdaptedFields",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewTerseAdaptedFields() },
},

        }
    }()
    premadeCodecTypeSpec_module_A = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.A",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.A",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewA() },
},

        }
    }()
    premadeCodecTypeSpec_module_AdaptedA = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AdaptedA",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.AdaptedA",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_A,
},

        }
    }()
    premadeCodecTypeSpec_module_B = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.B",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.B",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewB() },
},

        }
    }()
    premadeCodecTypeSpec_module_Config = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.Config",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.Config",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewConfig() },
},

        }
    }()
    premadeCodecTypeSpec_module_MyStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyStruct",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.MyStruct",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewMyStruct() },
},

        }
    }()
    premadeCodecTypeSpec_module_DurationMs = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.DurationMs",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.DurationMs",
	UnderlyingTypeSpec: premadeCodecTypeSpec_i64,
},

        }
    }()
    premadeCodecTypeSpec_module_IOBuf = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.IOBuf",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.IOBuf",
	UnderlyingTypeSpec: premadeCodecTypeSpec_binary,
},

        }
    }()
    premadeCodecTypeSpec_module_CustomProtocolType = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.CustomProtocolType",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.CustomProtocolType",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_IOBuf,
},

        }
    }()
    premadeCodecTypeSpec_module_IndirectionString = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.IndirectionString",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.IndirectionString",
	UnderlyingTypeSpec: premadeCodecTypeSpec_string,
},

        }
    }()
    premadeCodecTypeSpec_bool = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "bool",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_BOOL,
},

        }
    }()
    premadeCodecTypeSpec_module_AdaptedBool = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AdaptedBool",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.AdaptedBool",
	UnderlyingTypeSpec: premadeCodecTypeSpec_bool,
},

        }
    }()
    premadeCodecTypeSpec_module_AdaptedInteger = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AdaptedInteger",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.AdaptedInteger",
	UnderlyingTypeSpec: premadeCodecTypeSpec_i32,
},

        }
    }()
    premadeCodecTypeSpec_module_AdaptTestStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AdaptTestStruct",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.AdaptTestStruct",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewAdaptTestStruct() },
},

        }
    }()
    premadeCodecTypeSpec_byte = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "byte",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_BYTE,
},

        }
    }()
    premadeCodecTypeSpec_module_AdaptedByte = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AdaptedByte",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.AdaptedByte",
	UnderlyingTypeSpec: premadeCodecTypeSpec_byte,
},

        }
    }()
    premadeCodecTypeSpec_i16 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "i16",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_I16,
},

        }
    }()
    premadeCodecTypeSpec_module_AdaptedShort = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AdaptedShort",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.AdaptedShort",
	UnderlyingTypeSpec: premadeCodecTypeSpec_i16,
},

        }
    }()
    premadeCodecTypeSpec_module_AdaptedLong = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AdaptedLong",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.AdaptedLong",
	UnderlyingTypeSpec: premadeCodecTypeSpec_i64,
},

        }
    }()
    premadeCodecTypeSpec_double = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "double",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_DOUBLE,
},

        }
    }()
    premadeCodecTypeSpec_module_AdaptedDouble = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AdaptedDouble",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.AdaptedDouble",
	UnderlyingTypeSpec: premadeCodecTypeSpec_double,
},

        }
    }()
    premadeCodecTypeSpec_module_AdaptedString = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AdaptedString",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.AdaptedString",
	UnderlyingTypeSpec: premadeCodecTypeSpec_string,
},

        }
    }()
    premadeCodecTypeSpec_list_i64 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "list<i64>",
            CodecListSpec: &thrift.CodecListSpec{
    ElementWireType: thrift.I64,
	ElementTypeSpec: premadeCodecTypeSpec_i64,
},

        }
    }()
    premadeCodecTypeSpec_set_i64 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "set<i64>",
            CodecSetSpec: &thrift.CodecSetSpec{
    ElementWireType: thrift.I64,
	ElementTypeSpec: premadeCodecTypeSpec_i64,
},

        }
    }()
    premadeCodecTypeSpec_map_i64_i64 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "map<i64, i64>",
            CodecMapSpec: &thrift.CodecMapSpec{
	KeyTypeSpec:   premadeCodecTypeSpec_i64,
	ValueTypeSpec: premadeCodecTypeSpec_i64,
    KeyWireType:   thrift.I64,
	ValueWireType: thrift.I64,
},

        }
    }()
    premadeCodecTypeSpec_module_AdaptedEnum = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AdaptedEnum",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.AdaptedEnum",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_ThriftAdaptedEnum,
},

        }
    }()
    premadeCodecTypeSpec_module_DoubleTypedefBool = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.DoubleTypedefBool",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.DoubleTypedefBool",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_AdaptedBool,
},

        }
    }()
    premadeCodecTypeSpec_module_AdaptTemplatedTestStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AdaptTemplatedTestStruct",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.AdaptTemplatedTestStruct",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewAdaptTemplatedTestStruct() },
},

        }
    }()
    premadeCodecTypeSpec_module_AdaptTemplatedNestedTestStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AdaptTemplatedNestedTestStruct",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.AdaptTemplatedNestedTestStruct",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewAdaptTemplatedNestedTestStruct() },
},

        }
    }()
    premadeCodecTypeSpec_module_AdaptTestUnion = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AdaptTestUnion",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.AdaptTestUnion",
    IsUnion:    true,
    NewFunc:    func() thrift.Struct { return NewAdaptTestUnion() },
},

        }
    }()
    premadeCodecTypeSpec_module_AdaptedStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AdaptedStruct",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.AdaptedStruct",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewAdaptedStruct() },
},

        }
    }()
    premadeCodecTypeSpec_module_DirectlyAdaptedStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.DirectlyAdaptedStruct",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.DirectlyAdaptedStruct",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewDirectlyAdaptedStruct() },
},

        }
    }()
    premadeCodecTypeSpec_module_AdaptedTypedef = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AdaptedTypedef",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.AdaptedTypedef",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_AdaptedStruct,
},

        }
    }()
    premadeCodecTypeSpec_module_TypedefOfDirect = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.TypedefOfDirect",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.TypedefOfDirect",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_DirectlyAdaptedStruct,
},

        }
    }()
    premadeCodecTypeSpec_module_StructFieldAdaptedStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.StructFieldAdaptedStruct",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.StructFieldAdaptedStruct",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewStructFieldAdaptedStruct() },
},

        }
    }()
    premadeCodecTypeSpec_module_CircularStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.CircularStruct",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.CircularStruct",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewCircularStruct() },
},

        }
    }()
    premadeCodecTypeSpec_module_CircularAdaptee = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.CircularAdaptee",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.CircularAdaptee",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewCircularAdaptee() },
},

        }
    }()
    premadeCodecTypeSpec_module_AdaptedCircularAdaptee = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AdaptedCircularAdaptee",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.AdaptedCircularAdaptee",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_CircularAdaptee,
},

        }
    }()
    premadeCodecTypeSpec_module_DeclaredAfterStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.DeclaredAfterStruct",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.DeclaredAfterStruct",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewDeclaredAfterStruct() },
},

        }
    }()
    premadeCodecTypeSpec_module_ReorderedStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.ReorderedStruct",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.ReorderedStruct",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewReorderedStruct() },
},

        }
    }()
    premadeCodecTypeSpec_module_RenamedStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.RenamedStruct",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.RenamedStruct",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewRenamedStruct() },
},

        }
    }()
    premadeCodecTypeSpec_module_SameNamespaceStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.SameNamespaceStruct",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.SameNamespaceStruct",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewSameNamespaceStruct() },
},

        }
    }()
    premadeCodecTypeSpec_module_HeapAllocated = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.HeapAllocated",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.HeapAllocated",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewHeapAllocated() },
},

        }
    }()
    premadeCodecTypeSpec_module_MoveOnly = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MoveOnly",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.MoveOnly",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewMoveOnly() },
},

        }
    }()
    premadeCodecTypeSpec_module_AlsoMoveOnly = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AlsoMoveOnly",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.AlsoMoveOnly",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewAlsoMoveOnly() },
},

        }
    }()
    premadeCodecTypeSpec_module_ApplyAdapter = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.ApplyAdapter",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.ApplyAdapter",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewApplyAdapter() },
},

        }
    }()
    premadeCodecTypeSpec_module_TransitiveAdapted = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.TransitiveAdapted",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.TransitiveAdapted",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewTransitiveAdapted() },
},

        }
    }()
    premadeCodecTypeSpec_module_CountingInt = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.CountingInt",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.CountingInt",
	UnderlyingTypeSpec: premadeCodecTypeSpec_i64,
},

        }
    }()
    premadeCodecTypeSpec_module_CountingStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.CountingStruct",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.CountingStruct",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewCountingStruct() },
},

        }
    }()
    premadeCodecTypeSpec_module_Person = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.Person",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.Person",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewPerson() },
},

        }
    }()
    premadeCodecTypeSpec_module_Person2 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.Person2",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.Person2",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewPerson2() },
},

        }
    }()
    premadeCodecTypeSpec_module_RenamedStructWithStructAdapterAndFieldAdapter = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.RenamedStructWithStructAdapterAndFieldAdapter",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.RenamedStructWithStructAdapterAndFieldAdapter",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewRenamedStructWithStructAdapterAndFieldAdapter() },
},

        }
    }()
    premadeCodecTypeSpec_module_MyI32 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyI32",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.MyI32",
	UnderlyingTypeSpec: premadeCodecTypeSpec_i32,
},

        }
    }()
    premadeCodecTypeSpec_module_StructWithAdapter = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.StructWithAdapter",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.StructWithAdapter",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_Bar,
},

        }
    }()
    premadeCodecTypeSpec_module_UnionWithAdapter = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.UnionWithAdapter",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.UnionWithAdapter",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_Baz,
},

        }
    }()
    premadeCodecTypeSpec_module_MyI32_4873 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyI32_4873",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.MyI32_4873",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_MyI32,
},

        }
    }()
    premadeCodecTypeSpec_module_StringWithAdapter_7208 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.StringWithAdapter_7208",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.StringWithAdapter_7208",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_StringWithAdapter,
},

        }
    }()
)

// Premade struct specs
var (
    premadeStructSpec_MyAnnotation = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "MyAnnotation",
    ScopedName:           "module.MyAnnotation",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRING,
            Name:                 "signature",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.I32,
            Name:                 "color",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_Color,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
    },
    FieldSpecNameToIndex: map[string]int{
        "signature": 0,
        "color": 1,
    },
}
    }()
    premadeStructSpec_Foo = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "Foo",
    ScopedName:           "module.Foo",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I32,
            Name:                 "intField",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_i32_5137,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.I32,
            Name:                 "optionalIntField",
            ReflectIndex:         1,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_module_i32_5137,
            MustBeSetToSerialize: true,
        },        {
            ID:                   3,
            WireType:             thrift.I32,
            Name:                 "intFieldWithDefault",
            ReflectIndex:         2,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_i32_5137,
            MustBeSetToSerialize: false,
        },        {
            ID:                   4,
            WireType:             thrift.SET,
            Name:                 "setField",
            ReflectIndex:         3,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_SetWithAdapter,
            MustBeSetToSerialize: false,
        },        {
            ID:                   5,
            WireType:             thrift.SET,
            Name:                 "optionalSetField",
            ReflectIndex:         4,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_module_SetWithAdapter,
            MustBeSetToSerialize: true,
        },        {
            ID:                   6,
            WireType:             thrift.MAP,
            Name:                 "mapField",
            ReflectIndex:         5,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_map_string_ListWithElemAdapter_withAdapter_8454,
            MustBeSetToSerialize: false,
        },        {
            ID:                   7,
            WireType:             thrift.MAP,
            Name:                 "optionalMapField",
            ReflectIndex:         6,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_module_map_string_ListWithElemAdapter_withAdapter_8454,
            MustBeSetToSerialize: true,
        },        {
            ID:                   8,
            WireType:             thrift.STRING,
            Name:                 "binaryField",
            ReflectIndex:         7,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_binary_5673,
            MustBeSetToSerialize: false,
        },        {
            ID:                   9,
            WireType:             thrift.I64,
            Name:                 "longField",
            ReflectIndex:         8,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_MyI64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   10,
            WireType:             thrift.I64,
            Name:                 "adaptedLongField",
            ReflectIndex:         9,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_MyI64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   11,
            WireType:             thrift.I64,
            Name:                 "doubleAdaptedField",
            ReflectIndex:         10,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_DoubleTypedefI64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   12,
            WireType:             thrift.LIST,
            Name:                 "adapted_list",
            ReflectIndex:         11,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_list_i32,
            MustBeSetToSerialize: false,
        },        {
            ID:                   13,
            WireType:             thrift.SET,
            Name:                 "adapted_set",
            ReflectIndex:         12,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_set_i32,
            MustBeSetToSerialize: false,
        },        {
            ID:                   14,
            WireType:             thrift.MAP,
            Name:                 "adapted_map",
            ReflectIndex:         13,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_map_string_i32,
            MustBeSetToSerialize: false,
        },        {
            ID:                   15,
            WireType:             thrift.LIST,
            Name:                 "adapted_list_nested",
            ReflectIndex:         14,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_list_list_map_i32_i32,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
        3: 2,
        4: 3,
        5: 4,
        6: 5,
        7: 6,
        8: 7,
        9: 8,
        10: 9,
        11: 10,
        12: 11,
        13: 12,
        14: 13,
        15: 14,
    },
    FieldSpecNameToIndex: map[string]int{
        "intField": 0,
        "optionalIntField": 1,
        "intFieldWithDefault": 2,
        "setField": 3,
        "optionalSetField": 4,
        "mapField": 5,
        "optionalMapField": 6,
        "binaryField": 7,
        "longField": 8,
        "adaptedLongField": 9,
        "doubleAdaptedField": 10,
        "adapted_list": 11,
        "adapted_set": 12,
        "adapted_map": 13,
        "adapted_list_nested": 14,
    },
}
    }()
    premadeStructSpec_Baz = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "Baz",
    ScopedName:           "module.Baz",
    IsUnion:              true,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I32,
            Name:                 "intField",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_i32_5137,
            MustBeSetToSerialize: true,
        },        {
            ID:                   4,
            WireType:             thrift.SET,
            Name:                 "setField",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_SetWithAdapter,
            MustBeSetToSerialize: true,
        },        {
            ID:                   6,
            WireType:             thrift.MAP,
            Name:                 "mapField",
            ReflectIndex:         2,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_map_string_ListWithElemAdapter_withAdapter_8454,
            MustBeSetToSerialize: true,
        },        {
            ID:                   8,
            WireType:             thrift.STRING,
            Name:                 "binaryField",
            ReflectIndex:         3,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_binary_5673,
            MustBeSetToSerialize: true,
        },        {
            ID:                   9,
            WireType:             thrift.I64,
            Name:                 "longField",
            ReflectIndex:         4,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_MyI64,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        4: 1,
        6: 2,
        8: 3,
        9: 4,
    },
    FieldSpecNameToIndex: map[string]int{
        "intField": 0,
        "setField": 1,
        "mapField": 2,
        "binaryField": 3,
        "longField": 4,
    },
}
    }()
    premadeStructSpec_Bar = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "Bar",
    ScopedName:           "module.Bar",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRUCT,
            Name:                 "structField",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_Foo_6868,
            MustBeSetToSerialize: true,
        },        {
            ID:                   2,
            WireType:             thrift.STRUCT,
            Name:                 "optionalStructField",
            ReflectIndex:         1,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_module_Foo_3943,
            MustBeSetToSerialize: true,
        },        {
            ID:                   3,
            WireType:             thrift.LIST,
            Name:                 "structListField",
            ReflectIndex:         2,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_list_module_FooWithAdapter_9317,
            MustBeSetToSerialize: false,
        },        {
            ID:                   4,
            WireType:             thrift.LIST,
            Name:                 "optionalStructListField",
            ReflectIndex:         3,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_list_module_FooWithAdapter_9317,
            MustBeSetToSerialize: true,
        },        {
            ID:                   5,
            WireType:             thrift.STRUCT,
            Name:                 "unionField",
            ReflectIndex:         4,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_Baz_7352,
            MustBeSetToSerialize: true,
        },        {
            ID:                   6,
            WireType:             thrift.STRUCT,
            Name:                 "optionalUnionField",
            ReflectIndex:         5,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_module_Baz_7352,
            MustBeSetToSerialize: true,
        },        {
            ID:                   7,
            WireType:             thrift.STRUCT,
            Name:                 "adaptedStructField",
            ReflectIndex:         6,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_DirectlyAdapted,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
        3: 2,
        4: 3,
        5: 4,
        6: 5,
        7: 6,
    },
    FieldSpecNameToIndex: map[string]int{
        "structField": 0,
        "optionalStructField": 1,
        "structListField": 2,
        "optionalStructListField": 3,
        "unionField": 4,
        "optionalUnionField": 5,
        "adaptedStructField": 6,
    },
}
    }()
    premadeStructSpec_DirectlyAdapted = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "DirectlyAdapted",
    ScopedName:           "module.DirectlyAdapted",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I32,
            Name:                 "field",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i32,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "field": 0,
    },
}
    }()
    premadeStructSpec_IndependentDirectlyAdapted = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "IndependentDirectlyAdapted",
    ScopedName:           "module.IndependentDirectlyAdapted",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I32,
            Name:                 "field",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i32,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "field": 0,
    },
}
    }()
    premadeStructSpec_StructWithFieldAdapter = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "StructWithFieldAdapter",
    ScopedName:           "module.StructWithFieldAdapter",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I32,
            Name:                 "field",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i32,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.I32,
            Name:                 "shared_field",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i32,
            MustBeSetToSerialize: false,
        },        {
            ID:                   3,
            WireType:             thrift.I32,
            Name:                 "opt_shared_field",
            ReflectIndex:         2,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_i32,
            MustBeSetToSerialize: true,
        },        {
            ID:                   4,
            WireType:             thrift.I32,
            Name:                 "opt_boxed_field",
            ReflectIndex:         3,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_i32,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
        3: 2,
        4: 3,
    },
    FieldSpecNameToIndex: map[string]int{
        "field": 0,
        "shared_field": 1,
        "opt_shared_field": 2,
        "opt_boxed_field": 3,
    },
}
    }()
    premadeStructSpec_TerseAdaptedFields = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "TerseAdaptedFields",
    ScopedName:           "module.TerseAdaptedFields",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I32,
            Name:                 "int_field",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i32,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.STRING,
            Name:                 "string_field",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },        {
            ID:                   3,
            WireType:             thrift.SET,
            Name:                 "set_field",
            ReflectIndex:         2,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_set_i32,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
        3: 2,
    },
    FieldSpecNameToIndex: map[string]int{
        "int_field": 0,
        "string_field": 1,
        "set_field": 2,
    },
}
    }()
    premadeStructSpec_B = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "B",
    ScopedName:           "module.B",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRUCT,
            Name:                 "a",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedA,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "a": 0,
    },
}
    }()
    premadeStructSpec_A = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "A",
    ScopedName:           "module.A",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_Config = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "Config",
    ScopedName:           "module.Config",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRING,
            Name:                 "path",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "path": 0,
    },
}
    }()
    premadeStructSpec_MyStruct = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "MyStruct",
    ScopedName:           "module.MyStruct",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I32,
            Name:                 "field",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i32,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.SET,
            Name:                 "set_string",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_SetWithAdapter,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
    },
    FieldSpecNameToIndex: map[string]int{
        "field": 0,
        "set_string": 1,
    },
}
    }()
    premadeStructSpec_AdaptTestStruct = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "AdaptTestStruct",
    ScopedName:           "module.AdaptTestStruct",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "delay",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_DurationMs,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.STRING,
            Name:                 "custom",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_CustomProtocolType,
            MustBeSetToSerialize: false,
        },        {
            ID:                   3,
            WireType:             thrift.I64,
            Name:                 "timeout",
            ReflectIndex:         2,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   4,
            WireType:             thrift.I64,
            Name:                 "data",
            ReflectIndex:         3,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   5,
            WireType:             thrift.STRING,
            Name:                 "meta",
            ReflectIndex:         4,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },        {
            ID:                   6,
            WireType:             thrift.STRING,
            Name:                 "indirectionString",
            ReflectIndex:         5,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_IndirectionString,
            MustBeSetToSerialize: false,
        },        {
            ID:                   7,
            WireType:             thrift.STRING,
            Name:                 "string_data",
            ReflectIndex:         6,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },        {
            ID:                   8,
            WireType:             thrift.BOOL,
            Name:                 "double_wrapped_bool",
            ReflectIndex:         7,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedBool,
            MustBeSetToSerialize: false,
        },        {
            ID:                   9,
            WireType:             thrift.I32,
            Name:                 "double_wrapped_integer",
            ReflectIndex:         8,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedInteger,
            MustBeSetToSerialize: false,
        },        {
            ID:                   10,
            WireType:             thrift.STRING,
            Name:                 "binary_data",
            ReflectIndex:         9,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_binary,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
        3: 2,
        4: 3,
        5: 4,
        6: 5,
        7: 6,
        8: 7,
        9: 8,
        10: 9,
    },
    FieldSpecNameToIndex: map[string]int{
        "delay": 0,
        "custom": 1,
        "timeout": 2,
        "data": 3,
        "meta": 4,
        "indirectionString": 5,
        "string_data": 6,
        "double_wrapped_bool": 7,
        "double_wrapped_integer": 8,
        "binary_data": 9,
    },
}
    }()
    premadeStructSpec_AdaptTemplatedTestStruct = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "AdaptTemplatedTestStruct",
    ScopedName:           "module.AdaptTemplatedTestStruct",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.BOOL,
            Name:                 "adaptedBool",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedBool,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.BYTE,
            Name:                 "adaptedByte",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedByte,
            MustBeSetToSerialize: false,
        },        {
            ID:                   3,
            WireType:             thrift.I16,
            Name:                 "adaptedShort",
            ReflectIndex:         2,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedShort,
            MustBeSetToSerialize: false,
        },        {
            ID:                   4,
            WireType:             thrift.I32,
            Name:                 "adaptedInteger",
            ReflectIndex:         3,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedInteger,
            MustBeSetToSerialize: false,
        },        {
            ID:                   5,
            WireType:             thrift.I64,
            Name:                 "adaptedLong",
            ReflectIndex:         4,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedLong,
            MustBeSetToSerialize: false,
        },        {
            ID:                   6,
            WireType:             thrift.DOUBLE,
            Name:                 "adaptedDouble",
            ReflectIndex:         5,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedDouble,
            MustBeSetToSerialize: false,
        },        {
            ID:                   7,
            WireType:             thrift.STRING,
            Name:                 "adaptedString",
            ReflectIndex:         6,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedString,
            MustBeSetToSerialize: false,
        },        {
            ID:                   8,
            WireType:             thrift.LIST,
            Name:                 "adaptedList",
            ReflectIndex:         7,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_list_i64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   9,
            WireType:             thrift.SET,
            Name:                 "adaptedSet",
            ReflectIndex:         8,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_set_i64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   10,
            WireType:             thrift.MAP,
            Name:                 "adaptedMap",
            ReflectIndex:         9,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_map_i64_i64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   11,
            WireType:             thrift.BOOL,
            Name:                 "adaptedBoolDefault",
            ReflectIndex:         10,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedBool,
            MustBeSetToSerialize: false,
        },        {
            ID:                   12,
            WireType:             thrift.BYTE,
            Name:                 "adaptedByteDefault",
            ReflectIndex:         11,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedByte,
            MustBeSetToSerialize: false,
        },        {
            ID:                   13,
            WireType:             thrift.I16,
            Name:                 "adaptedShortDefault",
            ReflectIndex:         12,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedShort,
            MustBeSetToSerialize: false,
        },        {
            ID:                   14,
            WireType:             thrift.I32,
            Name:                 "adaptedIntegerDefault",
            ReflectIndex:         13,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedInteger,
            MustBeSetToSerialize: false,
        },        {
            ID:                   15,
            WireType:             thrift.I64,
            Name:                 "adaptedLongDefault",
            ReflectIndex:         14,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedLong,
            MustBeSetToSerialize: false,
        },        {
            ID:                   16,
            WireType:             thrift.DOUBLE,
            Name:                 "adaptedDoubleDefault",
            ReflectIndex:         15,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedDouble,
            MustBeSetToSerialize: false,
        },        {
            ID:                   17,
            WireType:             thrift.STRING,
            Name:                 "adaptedStringDefault",
            ReflectIndex:         16,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedString,
            MustBeSetToSerialize: false,
        },        {
            ID:                   18,
            WireType:             thrift.I32,
            Name:                 "adaptedEnum",
            ReflectIndex:         17,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedEnum,
            MustBeSetToSerialize: false,
        },        {
            ID:                   19,
            WireType:             thrift.LIST,
            Name:                 "adaptedListDefault",
            ReflectIndex:         18,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_list_i64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   20,
            WireType:             thrift.SET,
            Name:                 "adaptedSetDefault",
            ReflectIndex:         19,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_set_i64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   21,
            WireType:             thrift.MAP,
            Name:                 "adaptedMapDefault",
            ReflectIndex:         20,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_map_i64_i64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   22,
            WireType:             thrift.BOOL,
            Name:                 "doubleTypedefBool",
            ReflectIndex:         21,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_DoubleTypedefBool,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
        3: 2,
        4: 3,
        5: 4,
        6: 5,
        7: 6,
        8: 7,
        9: 8,
        10: 9,
        11: 10,
        12: 11,
        13: 12,
        14: 13,
        15: 14,
        16: 15,
        17: 16,
        18: 17,
        19: 18,
        20: 19,
        21: 20,
        22: 21,
    },
    FieldSpecNameToIndex: map[string]int{
        "adaptedBool": 0,
        "adaptedByte": 1,
        "adaptedShort": 2,
        "adaptedInteger": 3,
        "adaptedLong": 4,
        "adaptedDouble": 5,
        "adaptedString": 6,
        "adaptedList": 7,
        "adaptedSet": 8,
        "adaptedMap": 9,
        "adaptedBoolDefault": 10,
        "adaptedByteDefault": 11,
        "adaptedShortDefault": 12,
        "adaptedIntegerDefault": 13,
        "adaptedLongDefault": 14,
        "adaptedDoubleDefault": 15,
        "adaptedStringDefault": 16,
        "adaptedEnum": 17,
        "adaptedListDefault": 18,
        "adaptedSetDefault": 19,
        "adaptedMapDefault": 20,
        "doubleTypedefBool": 21,
    },
}
    }()
    premadeStructSpec_AdaptTemplatedNestedTestStruct = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "AdaptTemplatedNestedTestStruct",
    ScopedName:           "module.AdaptTemplatedNestedTestStruct",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRUCT,
            Name:                 "adaptedStruct",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptTemplatedTestStruct,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "adaptedStruct": 0,
    },
}
    }()
    premadeStructSpec_AdaptTestUnion = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "AdaptTestUnion",
    ScopedName:           "module.AdaptTestUnion",
    IsUnion:              true,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "delay",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_DurationMs,
            MustBeSetToSerialize: true,
        },        {
            ID:                   2,
            WireType:             thrift.STRING,
            Name:                 "custom",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_CustomProtocolType,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
    },
    FieldSpecNameToIndex: map[string]int{
        "delay": 0,
        "custom": 1,
    },
}
    }()
    premadeStructSpec_AdaptedStruct = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "AdaptedStruct",
    ScopedName:           "module.AdaptedStruct",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "data",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "data": 0,
    },
}
    }()
    premadeStructSpec_DirectlyAdaptedStruct = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "DirectlyAdaptedStruct",
    ScopedName:           "module.DirectlyAdaptedStruct",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "data",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "data": 0,
    },
}
    }()
    premadeStructSpec_StructFieldAdaptedStruct = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "StructFieldAdaptedStruct",
    ScopedName:           "module.StructFieldAdaptedStruct",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRUCT,
            Name:                 "adaptedStruct",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedStruct,
            MustBeSetToSerialize: true,
        },        {
            ID:                   2,
            WireType:             thrift.STRUCT,
            Name:                 "adaptedTypedef",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedTypedef,
            MustBeSetToSerialize: true,
        },        {
            ID:                   3,
            WireType:             thrift.STRUCT,
            Name:                 "directlyAdapted",
            ReflectIndex:         2,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_DirectlyAdaptedStruct,
            MustBeSetToSerialize: true,
        },        {
            ID:                   4,
            WireType:             thrift.STRUCT,
            Name:                 "typedefOfAdapted",
            ReflectIndex:         3,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_TypedefOfDirect,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
        3: 2,
        4: 3,
    },
    FieldSpecNameToIndex: map[string]int{
        "adaptedStruct": 0,
        "adaptedTypedef": 1,
        "directlyAdapted": 2,
        "typedefOfAdapted": 3,
    },
}
    }()
    premadeStructSpec_CircularAdaptee = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "CircularAdaptee",
    ScopedName:           "module.CircularAdaptee",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRUCT,
            Name:                 "field",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_CircularStruct,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "field": 0,
    },
}
    }()
    premadeStructSpec_CircularStruct = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "CircularStruct",
    ScopedName:           "module.CircularStruct",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRUCT,
            Name:                 "field",
            ReflectIndex:         0,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_module_AdaptedCircularAdaptee,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "field": 0,
    },
}
    }()
    premadeStructSpec_ReorderedStruct = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "ReorderedStruct",
    ScopedName:           "module.ReorderedStruct",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRUCT,
            Name:                 "reordered_dependent_adapted",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_DeclaredAfterStruct,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "reordered_dependent_adapted": 0,
    },
}
    }()
    premadeStructSpec_DeclaredAfterStruct = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "DeclaredAfterStruct",
    ScopedName:           "module.DeclaredAfterStruct",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_RenamedStruct = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "RenamedStruct",
    ScopedName:           "module.RenamedStruct",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "data",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "data": 0,
    },
}
    }()
    premadeStructSpec_SameNamespaceStruct = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "SameNamespaceStruct",
    ScopedName:           "module.SameNamespaceStruct",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "data",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "data": 0,
    },
}
    }()
    premadeStructSpec_HeapAllocated = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "HeapAllocated",
    ScopedName:           "module.HeapAllocated",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_MoveOnly = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "MoveOnly",
    ScopedName:           "module.MoveOnly",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRUCT,
            Name:                 "ptr",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_HeapAllocated,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "ptr": 0,
    },
}
    }()
    premadeStructSpec_AlsoMoveOnly = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "AlsoMoveOnly",
    ScopedName:           "module.AlsoMoveOnly",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "ptr",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "ptr": 0,
    },
}
    }()
    premadeStructSpec_ApplyAdapter = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "ApplyAdapter",
    ScopedName:           "module.ApplyAdapter",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_TransitiveAdapted = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "TransitiveAdapted",
    ScopedName:           "module.TransitiveAdapted",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_CountingStruct = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "CountingStruct",
    ScopedName:           "module.CountingStruct",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "regularInt",
            ReflectIndex:         0,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: true,
        },        {
            ID:                   2,
            WireType:             thrift.I64,
            Name:                 "countingInt",
            ReflectIndex:         1,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_module_CountingInt,
            MustBeSetToSerialize: true,
        },        {
            ID:                   3,
            WireType:             thrift.STRING,
            Name:                 "regularString",
            ReflectIndex:         2,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
        3: 2,
    },
    FieldSpecNameToIndex: map[string]int{
        "regularInt": 0,
        "countingInt": 1,
        "regularString": 2,
    },
}
    }()
    premadeStructSpec_Person = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "Person",
    ScopedName:           "module.Person",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRING,
            Name:                 "name",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "name": 0,
    },
}
    }()
    premadeStructSpec_Person2 = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "Person2",
    ScopedName:           "module.Person2",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRING,
            Name:                 "name",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "name": 0,
    },
}
    }()
    premadeStructSpec_RenamedStructWithStructAdapterAndFieldAdapter = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "RenamedStructWithStructAdapterAndFieldAdapter",
    ScopedName:           "module.RenamedStructWithStructAdapterAndFieldAdapter",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I32,
            Name:                 "field",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i32,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "field": 0,
    },
}
    }()
    premadeStructSpec_reqServiceFunc = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqServiceFunc",
    ScopedName:           "module.reqServiceFunc",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRING,
            Name:                 "arg1",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_StringWithAdapter_7208,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.STRING,
            Name:                 "arg2",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },        {
            ID:                   3,
            WireType:             thrift.STRUCT,
            Name:                 "arg3",
            ReflectIndex:         2,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_Foo,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
        3: 2,
    },
    FieldSpecNameToIndex: map[string]int{
        "arg1": 0,
        "arg2": 1,
        "arg3": 2,
    },
}
    }()
    premadeStructSpec_respServiceFunc = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respServiceFunc",
    ScopedName:           "module.respServiceFunc",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   0,
            WireType:             thrift.I32,
            Name:                 "success",
            ReflectIndex:         0,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_module_MyI32_4873,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        0: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "success": 0,
    },
}
    }()
    premadeStructSpec_reqAdapterServiceCount = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqAdapterServiceCount",
    ScopedName:           "module.reqAdapterServiceCount",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_respAdapterServiceCount = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respAdapterServiceCount",
    ScopedName:           "module.respAdapterServiceCount",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   0,
            WireType:             thrift.STRUCT,
            Name:                 "success",
            ReflectIndex:         0,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_module_CountingStruct,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        0: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "success": 0,
    },
}
    }()
    premadeStructSpec_reqAdapterServiceAdaptedTypes = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqAdapterServiceAdaptedTypes",
    ScopedName:           "module.reqAdapterServiceAdaptedTypes",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRUCT,
            Name:                 "arg",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_HeapAllocated,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "arg": 0,
    },
}
    }()
    premadeStructSpec_respAdapterServiceAdaptedTypes = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respAdapterServiceAdaptedTypes",
    ScopedName:           "module.respAdapterServiceAdaptedTypes",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   0,
            WireType:             thrift.STRUCT,
            Name:                 "success",
            ReflectIndex:         0,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_module_HeapAllocated,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        0: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "success": 0,
    },
}
    }()
)

// Premade slice of all struct specs
var premadeStructSpecs = func() []*thrift.StructSpec {
    fbthriftResults := make([]*thrift.StructSpec, 0)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_MyAnnotation)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_Foo)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_Baz)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_Bar)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_DirectlyAdapted)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_IndependentDirectlyAdapted)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_StructWithFieldAdapter)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_TerseAdaptedFields)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_B)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_A)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_Config)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_MyStruct)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_AdaptTestStruct)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_AdaptTemplatedTestStruct)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_AdaptTemplatedNestedTestStruct)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_AdaptTestUnion)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_AdaptedStruct)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_DirectlyAdaptedStruct)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_StructFieldAdaptedStruct)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_CircularAdaptee)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_CircularStruct)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_ReorderedStruct)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_DeclaredAfterStruct)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_RenamedStruct)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_SameNamespaceStruct)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_HeapAllocated)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_MoveOnly)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_AlsoMoveOnly)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_ApplyAdapter)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_TransitiveAdapted)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_CountingStruct)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_Person)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_Person2)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_RenamedStructWithStructAdapterAndFieldAdapter)
    return fbthriftResults
}()

var premadeCodecSpecsMap = func() map[string]*thrift.TypeSpec {
    fbthriftTypeSpecsMap := make(map[string]*thrift.TypeSpec)
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_Color.FullName] = premadeCodecTypeSpec_module_Color
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_ThriftAdaptedEnum.FullName] = premadeCodecTypeSpec_module_ThriftAdaptedEnum
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_string.FullName] = premadeCodecTypeSpec_string
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyAnnotation.FullName] = premadeCodecTypeSpec_module_MyAnnotation
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_i32.FullName] = premadeCodecTypeSpec_i32
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_i32_5137.FullName] = premadeCodecTypeSpec_module_i32_5137
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_SetWithAdapter.FullName] = premadeCodecTypeSpec_module_SetWithAdapter
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_StringWithAdapter.FullName] = premadeCodecTypeSpec_module_StringWithAdapter
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_ListWithElemAdapter.FullName] = premadeCodecTypeSpec_module_ListWithElemAdapter
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_ListWithElemAdapter_withAdapter.FullName] = premadeCodecTypeSpec_module_ListWithElemAdapter_withAdapter
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_ListWithElemAdapter_withAdapter_2312.FullName] = premadeCodecTypeSpec_module_ListWithElemAdapter_withAdapter_2312
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_map_string_ListWithElemAdapter_withAdapter_8454.FullName] = premadeCodecTypeSpec_module_map_string_ListWithElemAdapter_withAdapter_8454
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_binary.FullName] = premadeCodecTypeSpec_binary
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_binary_5673.FullName] = premadeCodecTypeSpec_module_binary_5673
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_i64.FullName] = premadeCodecTypeSpec_i64
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyI64.FullName] = premadeCodecTypeSpec_module_MyI64
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_DoubleTypedefI64.FullName] = premadeCodecTypeSpec_module_DoubleTypedefI64
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_Foo.FullName] = premadeCodecTypeSpec_module_Foo
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_Baz.FullName] = premadeCodecTypeSpec_module_Baz
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_Foo_6868.FullName] = premadeCodecTypeSpec_module_Foo_6868
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_Foo_3943.FullName] = premadeCodecTypeSpec_module_Foo_3943
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_FooWithAdapter.FullName] = premadeCodecTypeSpec_module_FooWithAdapter
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_FooWithAdapter_9317.FullName] = premadeCodecTypeSpec_module_FooWithAdapter_9317
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_Baz_7352.FullName] = premadeCodecTypeSpec_module_Baz_7352
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_DirectlyAdapted.FullName] = premadeCodecTypeSpec_module_DirectlyAdapted
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_Bar.FullName] = premadeCodecTypeSpec_module_Bar
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_IndependentDirectlyAdapted.FullName] = premadeCodecTypeSpec_module_IndependentDirectlyAdapted
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_StructWithFieldAdapter.FullName] = premadeCodecTypeSpec_module_StructWithFieldAdapter
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_TerseAdaptedFields.FullName] = premadeCodecTypeSpec_module_TerseAdaptedFields
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_A.FullName] = premadeCodecTypeSpec_module_A
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AdaptedA.FullName] = premadeCodecTypeSpec_module_AdaptedA
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_B.FullName] = premadeCodecTypeSpec_module_B
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_Config.FullName] = premadeCodecTypeSpec_module_Config
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyStruct.FullName] = premadeCodecTypeSpec_module_MyStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_DurationMs.FullName] = premadeCodecTypeSpec_module_DurationMs
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_IOBuf.FullName] = premadeCodecTypeSpec_module_IOBuf
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_CustomProtocolType.FullName] = premadeCodecTypeSpec_module_CustomProtocolType
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_IndirectionString.FullName] = premadeCodecTypeSpec_module_IndirectionString
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_bool.FullName] = premadeCodecTypeSpec_bool
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AdaptedBool.FullName] = premadeCodecTypeSpec_module_AdaptedBool
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AdaptedInteger.FullName] = premadeCodecTypeSpec_module_AdaptedInteger
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AdaptTestStruct.FullName] = premadeCodecTypeSpec_module_AdaptTestStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_byte.FullName] = premadeCodecTypeSpec_byte
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AdaptedByte.FullName] = premadeCodecTypeSpec_module_AdaptedByte
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_i16.FullName] = premadeCodecTypeSpec_i16
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AdaptedShort.FullName] = premadeCodecTypeSpec_module_AdaptedShort
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AdaptedLong.FullName] = premadeCodecTypeSpec_module_AdaptedLong
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_double.FullName] = premadeCodecTypeSpec_double
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AdaptedDouble.FullName] = premadeCodecTypeSpec_module_AdaptedDouble
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AdaptedString.FullName] = premadeCodecTypeSpec_module_AdaptedString
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AdaptedEnum.FullName] = premadeCodecTypeSpec_module_AdaptedEnum
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_DoubleTypedefBool.FullName] = premadeCodecTypeSpec_module_DoubleTypedefBool
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AdaptTemplatedTestStruct.FullName] = premadeCodecTypeSpec_module_AdaptTemplatedTestStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AdaptTemplatedNestedTestStruct.FullName] = premadeCodecTypeSpec_module_AdaptTemplatedNestedTestStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AdaptTestUnion.FullName] = premadeCodecTypeSpec_module_AdaptTestUnion
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AdaptedStruct.FullName] = premadeCodecTypeSpec_module_AdaptedStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_DirectlyAdaptedStruct.FullName] = premadeCodecTypeSpec_module_DirectlyAdaptedStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AdaptedTypedef.FullName] = premadeCodecTypeSpec_module_AdaptedTypedef
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_TypedefOfDirect.FullName] = premadeCodecTypeSpec_module_TypedefOfDirect
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_StructFieldAdaptedStruct.FullName] = premadeCodecTypeSpec_module_StructFieldAdaptedStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_CircularStruct.FullName] = premadeCodecTypeSpec_module_CircularStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_CircularAdaptee.FullName] = premadeCodecTypeSpec_module_CircularAdaptee
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AdaptedCircularAdaptee.FullName] = premadeCodecTypeSpec_module_AdaptedCircularAdaptee
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_DeclaredAfterStruct.FullName] = premadeCodecTypeSpec_module_DeclaredAfterStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_ReorderedStruct.FullName] = premadeCodecTypeSpec_module_ReorderedStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_RenamedStruct.FullName] = premadeCodecTypeSpec_module_RenamedStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_SameNamespaceStruct.FullName] = premadeCodecTypeSpec_module_SameNamespaceStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_HeapAllocated.FullName] = premadeCodecTypeSpec_module_HeapAllocated
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MoveOnly.FullName] = premadeCodecTypeSpec_module_MoveOnly
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AlsoMoveOnly.FullName] = premadeCodecTypeSpec_module_AlsoMoveOnly
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_ApplyAdapter.FullName] = premadeCodecTypeSpec_module_ApplyAdapter
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_TransitiveAdapted.FullName] = premadeCodecTypeSpec_module_TransitiveAdapted
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_CountingInt.FullName] = premadeCodecTypeSpec_module_CountingInt
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_CountingStruct.FullName] = premadeCodecTypeSpec_module_CountingStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_Person.FullName] = premadeCodecTypeSpec_module_Person
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_Person2.FullName] = premadeCodecTypeSpec_module_Person2
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_RenamedStructWithStructAdapterAndFieldAdapter.FullName] = premadeCodecTypeSpec_module_RenamedStructWithStructAdapterAndFieldAdapter
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyI32.FullName] = premadeCodecTypeSpec_module_MyI32
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_StructWithAdapter.FullName] = premadeCodecTypeSpec_module_StructWithAdapter
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_UnionWithAdapter.FullName] = premadeCodecTypeSpec_module_UnionWithAdapter
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyI32_4873.FullName] = premadeCodecTypeSpec_module_MyI32_4873
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_StringWithAdapter_7208.FullName] = premadeCodecTypeSpec_module_StringWithAdapter_7208
    return fbthriftTypeSpecsMap
}()

// GetMetadataThriftType (INTERNAL USE ONLY).
// Returns metadata TypeSpec for a given full type name.
func GetCodecTypeSpec(fullName string) *thrift.TypeSpec {
    return premadeCodecSpecsMap[fullName]
}
