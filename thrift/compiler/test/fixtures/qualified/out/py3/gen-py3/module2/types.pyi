#
# Autogenerated by Thrift for thrift/compiler/test/fixtures/qualified/src/module2.thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

import enum as _python_std_enum
import folly.iobuf as _fbthrift_iobuf
import thrift.py3.types
import thrift.python.types
import thrift.py3.exceptions
import typing as _typing

import sys
import itertools
import module0.types as _module0_types
import module1.types as _module1_types


class Struct(thrift.py3.types.Struct, _typing.Hashable):
    class __fbthrift_IsSet:
        first: bool
        second: bool
        pass

    first: _typing.Final[_module0_types.Struct] = ...
    second: _typing.Final[_module1_types.Struct] = ...

    def __init__(
        self, *,
        first: _typing.Optional[_module0_types.Struct]=None,
        second: _typing.Optional[_module1_types.Struct]=None
    ) -> None: ...

    def __call__(
        self, *,
        first: _typing.Union[_module0_types.Struct, None]=None,
        second: _typing.Union[_module1_types.Struct, None]=None
    ) -> Struct: ...

    def __reduce__(self) -> _typing.Tuple[_typing.Callable, _typing.Tuple[_typing.Type['Struct'], bytes]]: ...
    def __hash__(self) -> int: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...
    def __lt__(self, other: 'Struct') -> bool: ...
    def __gt__(self, other: 'Struct') -> bool: ...
    def __le__(self, other: 'Struct') -> bool: ...
    def __ge__(self, other: 'Struct') -> bool: ...

    def _to_python(self) -> "module2.thrift_types.Struct": ...   # type: ignore
    def _to_py3(self) -> Struct: ...
    def _to_py_deprecated(self) -> "module2.ttypes.Struct": ...   # type: ignore

class BigStruct(thrift.py3.types.Struct, _typing.Hashable):
    class __fbthrift_IsSet:
        s: bool
        id: bool
        pass

    s: _typing.Final[Struct] = ...
    id: _typing.Final[int] = ...

    def __init__(
        self, *,
        s: _typing.Optional[Struct]=None,
        id: _typing.Optional[int]=None
    ) -> None: ...

    def __call__(
        self, *,
        s: _typing.Union[Struct, None]=None,
        id: _typing.Union[int, None]=None
    ) -> BigStruct: ...

    def __reduce__(self) -> _typing.Tuple[_typing.Callable, _typing.Tuple[_typing.Type['BigStruct'], bytes]]: ...
    def __hash__(self) -> int: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...
    def __lt__(self, other: 'BigStruct') -> bool: ...
    def __gt__(self, other: 'BigStruct') -> bool: ...
    def __le__(self, other: 'BigStruct') -> bool: ...
    def __ge__(self, other: 'BigStruct') -> bool: ...

    def _to_python(self) -> "module2.thrift_types.BigStruct": ...   # type: ignore
    def _to_py3(self) -> BigStruct: ...
    def _to_py_deprecated(self) -> "module2.ttypes.BigStruct": ...   # type: ignore

c2: Struct = ...
c3: Struct = ...
c4: Struct = ...
