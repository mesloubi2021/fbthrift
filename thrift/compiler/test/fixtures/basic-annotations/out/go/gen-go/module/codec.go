// Autogenerated by Thrift for thrift/compiler/test/fixtures/basic-annotations/src/module.thrift
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//  @generated

package module


import (
    thrift "github.com/facebook/fbthrift/thrift/lib/go/thrift/types"
)

// (needed to ensure safety because of naive import list construction)
var _ = thrift.ZERO

// Premade codec specs
var (
    premadeCodecTypeSpec_module_MyEnum = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyEnum",
            CodecEnumSpec: &thrift.CodecEnumSpec{
    ScopedName: "module.MyEnum",
},

        }
    }()
    premadeCodecTypeSpec_string = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "string",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_STRING,
},

        }
    }()
    premadeCodecTypeSpec_module_MyStructNestedAnnotation = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyStructNestedAnnotation",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.MyStructNestedAnnotation",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewMyStructNestedAnnotation() },
},

        }
    }()
    premadeCodecTypeSpec_module_MyUnion = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyUnion",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.MyUnion",
    IsUnion:    true,
    NewFunc:    func() thrift.Struct { return NewMyUnion() },
},

        }
    }()
    premadeCodecTypeSpec_i64 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "i64",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_I64,
},

        }
    }()
    premadeCodecTypeSpec_list_string = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "list<string>",
            CodecListSpec: &thrift.CodecListSpec{
    ElementWireType: thrift.STRING,
	ElementTypeSpec: premadeCodecTypeSpec_string,
},

        }
    }()
    premadeCodecTypeSpec_module_list_string_6884 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.list_string_6884",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.list_string_6884",
	UnderlyingTypeSpec: premadeCodecTypeSpec_list_string,
},

        }
    }()
    premadeCodecTypeSpec_module_MyStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyStruct",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.MyStruct",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewMyStruct() },
},

        }
    }()
    premadeCodecTypeSpec_module_SecretStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.SecretStruct",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.SecretStruct",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewSecretStruct() },
},

        }
    }()
    premadeCodecTypeSpec_module_MyException = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.MyException",
            CodecStructSpec: &thrift.CodecStructSpec{
    ScopedName: "module.MyException",
    IsUnion:    false,
    NewFunc:    func() thrift.Struct { return NewMyException() },
},

        }
    }()
    premadeCodecTypeSpec_module_AwesomeStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.AwesomeStruct",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.AwesomeStruct",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_MyStruct,
},

        }
    }()
    premadeCodecTypeSpec_module_FantasticStruct = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "module.FantasticStruct",
            CodecTypedefSpec: &thrift.CodecTypedefSpec{
    ScopedName:         "module.FantasticStruct",
	UnderlyingTypeSpec: premadeCodecTypeSpec_module_MyStruct,
},

        }
    }()
    premadeCodecTypeSpec_void = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "void",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_VOID,
},

        }
    }()
    premadeCodecTypeSpec_bool = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "bool",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_BOOL,
},

        }
    }()
    premadeCodecTypeSpec_i32 = func() *thrift.TypeSpec {
        return &thrift.TypeSpec{
            FullName: "i32",
            CodecPrimitiveSpec: &thrift.CodecPrimitiveSpec{
    PrimitiveType: thrift.CODEC_PRIMITIVE_TYPE_I32,
},

        }
    }()
)

// Premade struct specs
var (
    premadeStructSpec_MyStructNestedAnnotation = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "MyStructNestedAnnotation",
    ScopedName:           "module.MyStructNestedAnnotation",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRING,
            Name:                 "name",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "name": 0,
    },
}
    }()
    premadeStructSpec_MyUnion = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "MyUnion",
    ScopedName:           "module.MyUnion",
    IsUnion:              true,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_MyException = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "MyException",
    ScopedName:           "module.MyException",
    IsUnion:              false,
    IsException:          true,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_MyStruct = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "MyStruct",
    ScopedName:           "module.MyStruct",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRING,
            Name:                 "abstract",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.I64,
            Name:                 "major",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   3,
            WireType:             thrift.STRING,
            Name:                 "annotation_with_quote",
            ReflectIndex:         2,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },        {
            ID:                   4,
            WireType:             thrift.STRING,
            Name:                 "class_",
            ReflectIndex:         3,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },        {
            ID:                   5,
            WireType:             thrift.STRING,
            Name:                 "annotation_with_trailing_comma",
            ReflectIndex:         4,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },        {
            ID:                   6,
            WireType:             thrift.STRING,
            Name:                 "empty_annotations",
            ReflectIndex:         5,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },        {
            ID:                   7,
            WireType:             thrift.I32,
            Name:                 "my_enum",
            ReflectIndex:         6,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_MyEnum,
            MustBeSetToSerialize: false,
        },        {
            ID:                   8,
            WireType:             thrift.LIST,
            Name:                 "cpp_type_annotation",
            ReflectIndex:         7,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_list_string_6884,
            MustBeSetToSerialize: false,
        },        {
            ID:                   9,
            WireType:             thrift.STRUCT,
            Name:                 "my_union",
            ReflectIndex:         8,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_module_MyUnion,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
        3: 2,
        4: 3,
        5: 4,
        6: 5,
        7: 6,
        8: 7,
        9: 8,
    },
    FieldSpecNameToIndex: map[string]int{
        "abstract": 0,
        "major": 1,
        "annotation_with_quote": 2,
        "class_": 3,
        "annotation_with_trailing_comma": 4,
        "empty_annotations": 5,
        "my_enum": 6,
        "cpp_type_annotation": 7,
        "my_union": 8,
    },
}
    }()
    premadeStructSpec_SecretStruct = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "SecretStruct",
    ScopedName:           "module.SecretStruct",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "id",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.STRING,
            Name:                 "password",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
    },
    FieldSpecNameToIndex: map[string]int{
        "id": 0,
        "password": 1,
    },
}
    }()
    premadeStructSpec_reqMyServicePing = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServicePing",
    ScopedName:           "module.reqMyServicePing",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_respMyServicePing = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServicePing",
    ScopedName:           "module.respMyServicePing",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.STRUCT,
            Name:                 "myExcept",
            ReflectIndex:         0,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_module_MyException,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "myExcept": 0,
    },
}
    }()
    premadeStructSpec_reqMyServiceGetRandomData = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServiceGetRandomData",
    ScopedName:           "module.reqMyServiceGetRandomData",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_respMyServiceGetRandomData = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServiceGetRandomData",
    ScopedName:           "module.respMyServiceGetRandomData",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   0,
            WireType:             thrift.STRING,
            Name:                 "success",
            ReflectIndex:         0,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        0: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "success": 0,
    },
}
    }()
    premadeStructSpec_reqMyServiceHasDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServiceHasDataById",
    ScopedName:           "module.reqMyServiceHasDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "id",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "id": 0,
    },
}
    }()
    premadeStructSpec_respMyServiceHasDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServiceHasDataById",
    ScopedName:           "module.respMyServiceHasDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   0,
            WireType:             thrift.BOOL,
            Name:                 "success",
            ReflectIndex:         0,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_bool,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        0: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "success": 0,
    },
}
    }()
    premadeStructSpec_reqMyServiceGoGetDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServiceGoGetDataById",
    ScopedName:           "module.reqMyServiceGoGetDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "id",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "id": 0,
    },
}
    }()
    premadeStructSpec_respMyServiceGoGetDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServiceGoGetDataById",
    ScopedName:           "module.respMyServiceGoGetDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   0,
            WireType:             thrift.STRING,
            Name:                 "success",
            ReflectIndex:         0,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        0: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "success": 0,
    },
}
    }()
    premadeStructSpec_reqMyServicePutDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServicePutDataById",
    ScopedName:           "module.reqMyServicePutDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "id",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.STRING,
            Name:                 "data",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
    },
    FieldSpecNameToIndex: map[string]int{
        "id": 0,
        "data": 1,
    },
}
    }()
    premadeStructSpec_respMyServicePutDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServicePutDataById",
    ScopedName:           "module.respMyServicePutDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_reqMyServiceLobDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServiceLobDataById",
    ScopedName:           "module.reqMyServiceLobDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   1,
            WireType:             thrift.I64,
            Name:                 "id",
            ReflectIndex:         0,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_i64,
            MustBeSetToSerialize: false,
        },        {
            ID:                   2,
            WireType:             thrift.STRING,
            Name:                 "data",
            ReflectIndex:         1,
            IsOptional:           false,
            ValueTypeSpec:        premadeCodecTypeSpec_string,
            MustBeSetToSerialize: false,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        1: 0,
        2: 1,
    },
    FieldSpecNameToIndex: map[string]int{
        "id": 0,
        "data": 1,
    },
}
    }()
    premadeStructSpec_respMyServiceLobDataById = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServiceLobDataById",
    ScopedName:           "module.respMyServiceLobDataById",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_reqMyServiceGoDoNothing = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServiceGoDoNothing",
    ScopedName:           "module.reqMyServiceGoDoNothing",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_respMyServiceGoDoNothing = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServiceGoDoNothing",
    ScopedName:           "module.respMyServiceGoDoNothing",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_reqMyServicePrioParentPing = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServicePrioParentPing",
    ScopedName:           "module.reqMyServicePrioParentPing",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_respMyServicePrioParentPing = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServicePrioParentPing",
    ScopedName:           "module.respMyServicePrioParentPing",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_reqMyServicePrioParentPong = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServicePrioParentPong",
    ScopedName:           "module.reqMyServicePrioParentPong",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_respMyServicePrioParentPong = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServicePrioParentPong",
    ScopedName:           "module.respMyServicePrioParentPong",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_reqMyServicePrioChildPang = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqMyServicePrioChildPang",
    ScopedName:           "module.reqMyServicePrioChildPang",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_respMyServicePrioChildPang = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respMyServicePrioChildPang",
    ScopedName:           "module.respMyServicePrioChildPang",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_reqBadServiceBar = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqBadServiceBar",
    ScopedName:           "module.reqBadServiceBar",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_respBadServiceBar = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respBadServiceBar",
    ScopedName:           "module.respBadServiceBar",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
        {
            ID:                   0,
            WireType:             thrift.I32,
            Name:                 "success",
            ReflectIndex:         0,
            IsOptional:           true,
            ValueTypeSpec:        premadeCodecTypeSpec_i32,
            MustBeSetToSerialize: true,
        },    },
    FieldSpecIDToIndex:   map[int16]int{
        0: 0,
    },
    FieldSpecNameToIndex: map[string]int{
        "success": 0,
    },
}
    }()
    premadeStructSpec_reqFooBarBazServiceFooStructured = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqFooBarBazServiceFooStructured",
    ScopedName:           "module.reqFooBarBazServiceFooStructured",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_respFooBarBazServiceFooStructured = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respFooBarBazServiceFooStructured",
    ScopedName:           "module.respFooBarBazServiceFooStructured",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_reqFooBarBazServiceBarNonStructured = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqFooBarBazServiceBarNonStructured",
    ScopedName:           "module.reqFooBarBazServiceBarNonStructured",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_respFooBarBazServiceBarNonStructured = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respFooBarBazServiceBarNonStructured",
    ScopedName:           "module.respFooBarBazServiceBarNonStructured",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_reqFooBarBazServiceBaz = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "reqFooBarBazServiceBaz",
    ScopedName:           "module.reqFooBarBazServiceBaz",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
    premadeStructSpec_respFooBarBazServiceBaz = func() *thrift.StructSpec {
        return &thrift.StructSpec{
    Name:                 "respFooBarBazServiceBaz",
    ScopedName:           "module.respFooBarBazServiceBaz",
    IsUnion:              false,
    IsException:          false,
    FieldSpecs:           []thrift.FieldSpec{
    },
    FieldSpecIDToIndex:   map[int16]int{
    },
    FieldSpecNameToIndex: map[string]int{
    },
}
    }()
)

// Premade slice of all struct specs
var premadeStructSpecs = func() []*thrift.StructSpec {
    fbthriftResults := make([]*thrift.StructSpec, 0)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_MyStructNestedAnnotation)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_MyUnion)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_MyException)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_MyStruct)
    fbthriftResults = append(fbthriftResults, premadeStructSpec_SecretStruct)
    return fbthriftResults
}()

var premadeCodecSpecsMap = func() map[string]*thrift.TypeSpec {
    fbthriftTypeSpecsMap := make(map[string]*thrift.TypeSpec)
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyEnum.FullName] = premadeCodecTypeSpec_module_MyEnum
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_string.FullName] = premadeCodecTypeSpec_string
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyStructNestedAnnotation.FullName] = premadeCodecTypeSpec_module_MyStructNestedAnnotation
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyUnion.FullName] = premadeCodecTypeSpec_module_MyUnion
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_i64.FullName] = premadeCodecTypeSpec_i64
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_list_string_6884.FullName] = premadeCodecTypeSpec_module_list_string_6884
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyStruct.FullName] = premadeCodecTypeSpec_module_MyStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_SecretStruct.FullName] = premadeCodecTypeSpec_module_SecretStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_MyException.FullName] = premadeCodecTypeSpec_module_MyException
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_AwesomeStruct.FullName] = premadeCodecTypeSpec_module_AwesomeStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_module_FantasticStruct.FullName] = premadeCodecTypeSpec_module_FantasticStruct
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_void.FullName] = premadeCodecTypeSpec_void
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_bool.FullName] = premadeCodecTypeSpec_bool
    fbthriftTypeSpecsMap[premadeCodecTypeSpec_i32.FullName] = premadeCodecTypeSpec_i32
    return fbthriftTypeSpecsMap
}()

// GetMetadataThriftType (INTERNAL USE ONLY).
// Returns metadata TypeSpec for a given full type name.
func GetCodecTypeSpec(fullName string) *thrift.TypeSpec {
    return premadeCodecSpecsMap[fullName]
}
